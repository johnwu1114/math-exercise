{"version":3,"sources":["i18n.js","pages/page-base.js","libs/utils/timer.js","components/schulte-table.jsx","components/countdown.jsx","components/numeric-keypad.jsx","components/quiz-attempt.jsx","components/quiz-result.jsx","components/quiz-setting.jsx","pages/quiz-page.jsx","libs/utils/random.js","libs/question-bank/base.js","libs/question-bank/schulte-table.js","libs/question-bank/addition.js","libs/question-bank/subtraction.js","libs/question-bank/multiplication.js","components/clock.jsx","libs/question-bank/clock.js","app-routes.js","pages/menu-page.jsx","app.jsx","index.js"],"names":["Translations","whitelist","addTranslation","translation","path","name","language","push","en","zhtw","zhcn","ja","i18n","use","LanguageDetector","reactI18nextModule","init","lowerCaseLng","resources","fallbackLng","keySeparator","interpolation","escapeValue","document","documentElement","lang","PageBase","props","setLink","langCode","link","querySelector","href","window","location","replace","setAttribute","createElement","rel","hreflang","getElementsByTagName","appendChild","this","Component","Timer","callback","start","intervalId","setInterval","durationSeconds","intervalSeconds","stop","clearInterval","restart","getDuration","SchulteTable","updateTime","seconds","setState","time","toFixed","checkAnswer","reply","answerTimer","clearTimeout","effectId","sytle","cursor","state","correct","questionBank","value","logAnswer","nextCursor","timer","onFinish","results","clicked","setTimeout","squareRoot","Math","sqrt","characters","length","result","question","description","t","answer","text","duration","nextQuestion","className","map","character","onClick","Countdown","reset","pause","resume","countdown","maximum","onChanged","timeout","min","getStatus","rate","round","parseFloat","max","NumericKeypad","num","input","onBack","clear","substring","onConfirm","numbers","i","QuizAttempt","choices","splice","count","getCount","getCursor","current","numericKeypad","convertText","disableSecondhand","onCountdownChanged","renderSwitch","answerMethod","ref","parseInt","choice","getSetting","timeoutSeconds","React","createRef","QuizResult","incorrect","forEach","avgDuration","score","floor","onClose","style","width","enableReview","onReview","QuizSetting","onStart","ready","options","x","selections","filter","s","selected","onSelected","event","option","selection","target","checked","type","selectedAll","updateMenuItem","onSlide","toggleAll","j","onChange","e","step","unit","title","getTitle","getOptions","QuizPage","setSettings","initQuestions","componentName","showResult","isShowResult","questions","incorrectQuestions","concat","setQuestions","quizAttempt","history","handleUnload","bind","addEventListener","removeEventListener","returnValue","withRouter","RandomUtil","pickRandomItems","arr","items","index","getRandomInt","item","getRandomIntRange","random","QuestionBankBase","generateChoices","answerRange","seeds","randomCount","currentQuestion","toString","sections","getSections","settings","component","choiceCount","SchulteTableQuestionBank","section","getCharacters","ceil","pow","char","str","Array","from","split","AdditionQuestionBank","minimum","minSummation","maxSummation","maxCount","questionCount","questionCountOfSection","hashMap","Map","size","summation","y","key","set","SubtractionQuestionBank","MultiplicationQuestionBank","level","multiplier","multiplicand","Clock","drawClock","hhmmss","canvas","height","context","getContext","radius","translate","hour","minute","second","drawFace","drawNumbers","drawTime","beginPath","arc","PI","fillStyle","fill","font","textBaseline","textAlign","ang","rotate","fillText","drawHand","pos","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","nextProps","ClockQuestionBank","secondsInDay","disableSeconds","padStart","AppRoutes","MenuPage","translations","hrefLang","origin","route","to","App","setMeta","content","pathname","changeLanguage","exact","withNamespaces","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0393c3ce.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport {\n  reactI18nextModule\n} from \"react-i18next\";\nimport en from \"./locales/en.json\";\nimport zhtw from \"./locales/zh-tw.json\";\nimport zhcn from \"./locales/zh-cn.json\";\nimport ja from \"./locales/ja.json\";\n\n// ref: https://react.i18next.com/legacy-v9/step-by-step-guide\n\nexport const Translations = {};\nconst whitelist = [];\n\nlet addTranslation = function(translation) {\n  Translations[translation.path] = {\n    name: translation.language,\n    translation: translation\n  };\n  whitelist.push(translation.path);\n}\n\naddTranslation(en);\naddTranslation(zhtw);\naddTranslation(zhcn);\naddTranslation(ja);\n\ni18n\n  .use(LanguageDetector)\n  .use(reactI18nextModule)\n  .init({\n    lowerCaseLng: true,\n    whitelist: whitelist,\n    resources: Translations,\n    fallbackLng: \"en\",\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\n\ndocument.documentElement.lang = i18n.language;\nexport default i18n;","import { Component } from \"react\";\nimport i18n from \"i18next\";\nimport { Translations } from \"../i18n.js\";\n\nexport default class PageBase extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    for (let langCode in Translations) this.setLink(langCode);\n  }\n\n  setLink = (langCode) => {\n    let link = document.querySelector(`head link[hreflang='${langCode}']`);\n    let href = window.location.href.replace(i18n.language, langCode);\n    if (link) link.setAttribute(\"href\", href);\n    else {\n      link = document.createElement(\"link\");\n      link.rel = \"alternate\"\n      link.hreflang = langCode;\n      link.href = href\n      document.getElementsByTagName('head')[0].appendChild(link);\n    }\n  }\n}","export default class Timer {\n  constructor(callback) {\n    this.intervalSeconds = 0.1;\n    this.durationSeconds = 0;\n    this.callback = callback;\n  }\n\n  start = () => {\n    this.intervalId = setInterval(() => {\n      this.durationSeconds += this.intervalSeconds;\n      if (this.callback) this.callback(this.durationSeconds);\n    }, this.intervalSeconds * 1000);\n  }\n\n  stop = () => {\n    if (this.intervalId) clearInterval(this.intervalId);\n  }\n\n  restart = () => {\n    this.stop();\n    this.durationSeconds = 0;\n    this.start();\n  }\n\n  getDuration = () => {\n    return this.durationSeconds;\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\nimport i18n from \"i18next\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class SchulteTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n    this.timer = new Timer(this.updateTime);\n    this.answerTimer = new Timer();\n\n    this.state = {\n      characters: this.questionBank.nextQuestion(),\n      cursor: this.questionBank.nextCursor(),\n      clicked: {},\n      time: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timer.start();\n    this.answerTimer.start();\n  }\n\n  componentWillUnmount() {\n    this.timer.stop();\n    this.answerTimer.stop();\n  }\n\n  updateTime = (seconds) => {\n    this.setState({ time: `${seconds.toFixed(1)}s` });\n  }\n\n  checkAnswer = (reply) => {\n    this.answerTimer.stop();\n    clearTimeout(this.effectId);\n    let sytle = \"incorrect\";\n    let cursor = this.state.cursor;\n    let correct = this.questionBank.checkAnswer(reply.value);\n    this.logAnswer(reply);\n\n    if (correct) {\n      sytle = \"correct\";\n      cursor = this.questionBank.nextCursor();\n      if (cursor === null) {\n        this.timer.stop();\n        this.setState({ time: null });\n        this.props.onFinish(this.results);\n        this.results = [];\n        return;\n      }\n    }\n\n    this.setState({\n      clicked: {\n        value: reply.value,\n        sytle: sytle\n      },\n      cursor: cursor\n    });\n    this.effectId = setTimeout(() => {\n      this.setState({ clicked: {} });\n    }, 500);\n    this.answerTimer.restart();\n  }\n\n  logAnswer = (reply) => {\n    let squareRoot = Math.sqrt(this.state.characters.length);\n    let result = {\n      question: {\n        description: `${squareRoot} x ${squareRoot} ${i18n.t(\"grid\")}`,\n        answer: {\n          text: `${i18n.t(\"click\")} ${this.state.cursor.text}`\n        }\n      },\n      reply: reply.text,\n      correct: this.questionBank.checkAnswer(reply.value),\n      duration: this.answerTimer.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div>\n        <div className=\"schulte-table\">\n          <div className=\"cursor\">{i18n.t(\"click\")}：<b>{this.state.cursor.text}</b></div>\n          <div className=\"time\">{this.state.time}</div>\n          <div className={`characters size-${this.state.characters.length}`}>\n            {this.state.characters.map((character) =>\n              character && <div key={character.value}\n                className={`cell ${(clicked.value === character.value ? clicked.sytle : \"\")}`}\n                onClick={() => this.checkAnswer(character)}><span>{character.text}</span></div>\n            )}\n          </div>\n        </div>\n      </div >\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class Countdown extends Component {\n\n  constructor(props) {\n    super(props);\n    this.maximum = parseFloat(props.seconds || 10);\n    this.timer = new Timer(this.countdown);\n    this.state = { time: this.maximum };\n  }\n\n  reset = () => {\n    this.timer.restart();\n  }\n\n  pause = () => {\n    this.timer.stop();\n  }\n\n  resume = () => {\n    this.timer.start();\n  }\n\n  countdown = () => {\n    this.setState({ time: this.maximum - this.timer.getDuration() });\n    this.props.onChanged(this.state.time);\n    if (this.state.time > 0) return;\n    this.timeout();\n  }\n\n  timeout = () => {\n    this.timer.stop();\n    this.props.timeout();\n  }\n\n  getDuration = () => {\n    return Math.min(this.maximum, this.timer.getDuration());\n  }\n\n  getStatus = () => {\n    let rate = Math.round(this.state.time / this.maximum * 100);\n    if (rate < 20) return \"danger\";\n    else if (rate < 50) return \"warning\";\n    return \"\";\n  }\n\n  render() {\n    return (\n      <progress className={this.getStatus()} max={this.maximum} value={this.state.time.toFixed(1)}></progress>\n    );\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\n\nexport default class NumericKeypad extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicked: {}\n    };\n\n    this.numbers = [];\n    for (let i = 1; i <= 9; i++) {\n      this.numbers.push(i);\n    }\n    this.clear();\n  }\n\n  onClick = (num) => {\n    this.input += `${num}`;\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onBack = () => {\n    if (this.input.length <= 1)\n      this.clear();\n    else\n      this.input = this.input.substring(0, this.input.length - 1);\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onConfirm = () => {\n    if (this.input === \"\") return;\n    this.props.onConfirm(this.input);\n    this.clear();\n  }\n\n  clear = () => {\n    this.input = \"\";\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div className=\"numeric-keypad\">\n        <div className=\"numbers\">\n          {this.numbers.map(num =>\n            <div key={num}\n              className={`cell ${(clicked.num === num ? clicked.sytle : \"\")}`}\n              onClick={() => this.onClick(num)}><span>{num}</span></div>\n          )}\n          <div className=\"cell\" onClick={() => this.onBack()}><span className=\"icon-backspace\"></span></div>\n          <div className={`cell ${(clicked.num === 0 ? clicked.sytle : \"\")}`}\n            onClick={() => this.onClick(0)}><span>0</span></div>\n          <div className=\"cell\" onClick={() => this.onConfirm()}><span className=\"icon-check\"></span></div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport i18n from \"i18next\";\nimport Countdown from \"./countdown.jsx\";\nimport NumericKeypad from \"./numeric-keypad.jsx\";\n\nexport default class QuizAttempt extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    let answerMethod = this.questionBank.getSetting(\"anwser-method\");\n    let timeoutSeconds = this.questionBank.getSetting(\"timeoutSeconds\");\n\n    this.results = [];\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      reply: \"\",\n      timeoutSeconds: timeoutSeconds,\n      answerMethod: answerMethod == null ? \"choice\" : answerMethod[0].value,\n      count: this.questionBank.getCount(),\n      cursor: this.questionBank.getCursor()\n    };\n    this.countdown = React.createRef();\n    this.numericKeypad = React.createRef();\n  }\n\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  componentWillUnmount() {\n    this.countdown.current.pause();\n  }\n\n  nextQuestion = () => {\n    this.setState({ correct: null });\n\n    let question = this.questionBank.nextQuestion();\n    if (question === null) {\n      this.props.onFinish(this.results);\n      this.results = [];\n      return;\n    }\n\n    this.state.choices.splice(0, this.state.choices.length);\n    question.reply = \"\";\n    question.count = this.questionBank.getCount();\n    question.cursor = this.questionBank.getCursor();\n    this.setState(question);\n    this.countdown.current.reset();\n    if (this.numericKeypad.current)\n      this.numericKeypad.current.clear();\n  }\n\n  checkAnswer = (reply) => {\n    reply = reply == null ? \"\" : reply;\n    this.countdown.current.pause();\n    let correct = this.questionBank.checkAnswer(reply);\n    this.logAnswer(reply);\n\n    this.setState({\n      correct: correct,\n      reply: reply\n    });\n    if (correct) this.nextQuestion();\n  }\n\n  logAnswer = (reply) => {\n    let result = {\n      question: this.state,\n      reply: this.questionBank.convertText(reply, this.state.disableSecondhand),\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.countdown.current.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  onCountdownChanged = (value) => {\n    this.setState({ countdown: value });\n  }\n\n  renderSwitch = () => {\n    switch (this.state.answerMethod) {\n      case \"filling\":\n        return <NumericKeypad ref={this.numericKeypad}\n          onChanged={value => this.setState({ reply: value })}\n          onConfirm={value => this.checkAnswer(parseInt(value))} />\n      default:\n        return <ul className=\"choices\">\n          {this.state.choices.map((choice, i) =>\n            <li key={i} onClick={() => this.checkAnswer(choice.value)} ><span>{choice.text}</span></li>\n          )}\n        </ul>\n    }\n  }\n\n  render() {\n    return (\n      <div className={`answer-method ${this.state.answerMethod}`}>\n        <span className=\"questionNumber\">{`${this.state.cursor}/${this.state.count}`}</span>\n        <div className={`question ${this.state.countdown < 3 && this.state.correct !== false && \"blink\"}`}>\n          {this.state.description} {this.state.answerMethod === \"filling\" && <span>{`= ${this.state.reply}`}</span>}\n        </div>\n        {this.state.correct === false\n          ? <div>\n            <p>{this.state.reply === \"\" ? i18n.t(\"timeout\") : i18n.t(\"wrong-answer\") } {i18n.t(\"answer\")}：{this.state.answer.text}</p>\n            <span className=\"btn large blue\" onClick={() => this.nextQuestion()}>{i18n.t(\"next\")}</span>\n          </div>\n          : this.renderSwitch()}\n        <Countdown ref={this.countdown}\n          seconds={this.state.timeoutSeconds}\n          timeout={() => this.checkAnswer(this.state.reply)}\n          onChanged={value => this.onCountdownChanged(value)} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport i18n from \"i18next\";\n\nexport default class QuizResult extends Component {\n  constructor(props) {\n    super(props);\n\n    let correct = 0;\n    let incorrect = 0;\n    let timeout = 0;\n    let duration = 0;\n    let results = this.props.results || [];\n    results.forEach(result => {\n      if (result.correct) correct++;\n      else if (result.reply) incorrect++;\n      else timeout++;\n      duration += result.duration;\n    });\n    this.state = {\n      results: results,\n      correct: correct,\n      incorrect: incorrect,\n      timeout: timeout,\n      avgDuration: results.length && duration / results.length,\n      duration: duration,\n      score: results.length && Math.floor(correct / results.length * 100),\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={() => this.props.onClose()}>x</span>\n          <table>\n            <tbody>\n              <tr className=\"correct\"><td>{i18n.t(\"number-of-correct\")}：</td><td>{this.state.correct}</td></tr>\n              <tr className={this.state.incorrect > 0 ? \"incorrect\" : \"\"}><td>{i18n.t(\"number-of-wrong\")}：</td><td>{this.state.incorrect}</td></tr>\n              {this.state.timeout > 0 && <tr className=\"incorrect\"><td>{i18n.t(\"number-of-timeout\")}：</td><td>{this.state.timeout}</td></tr>}\n              <tr><td>{i18n.t(\"avg-duration\")}：</td><td>{this.state.avgDuration.toFixed(1)} {i18n.t(\"seconds\")}</td></tr>\n              <tr><td>{i18n.t(\"total-duration\")}：</td><td>{this.state.duration.toFixed(1)} {i18n.t(\"seconds\")}</td></tr>\n            </tbody>\n          </table>\n          <hr />\n          {this.state.incorrect > 0 &&\n            <table>\n              <thead>\n                <tr>\n                  <th style={{ width: \"5%\" }}></th>\n                  <th>{i18n.t(\"question\")}</th>\n                  <th style={{ width: \"20%\" }}>{i18n.t(\"answer\")}</th>\n                  <th style={{ width: \"20%\" }}>{i18n.t(\"reply\")}</th>\n                  <th style={{ width: \"25%\" }}>{i18n.t(\"duration\")}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.results.map((result, i) => result.correct ||\n                  <tr key={i} className={result.correct ? \"correct\" : \"incorrect\"}>\n                    <td><b /></td>\n                    <td>{result.question.description}</td>\n                    <td>{result.question.answer.text}</td>\n                    <td>{result.reply === \"\" ? \"--\" : result.reply}</td>\n                    <td>{result.duration.toFixed(1)}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>}\n          <div className=\"modal-footer\">\n            <span className=\"btn\" onClick={() => this.props.onClose()}>{i18n.t(\"close\")}</span>\n            {this.props.enableReview && this.state.incorrect >= 3 &&\n              <span className=\"btn blue\" onClick={() => this.props.onReview()}>{i18n.t(\"review\")}</span>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport i18n from \"i18next\";\n\nexport default class QuizSetting extends Component {\n  constructor(props) {\n    super(props);\n    let questionBank = this.props.questionBank;\n    let title = questionBank.getTitle();\n    let options = questionBank.getOptions();\n\n    this.state = {\n      title: title,\n      options: options,\n      ready: true\n    };\n  }\n\n  onStart = () => {\n    if (this.state.ready > 0)\n      this.props.onStart(this.state.options.map(x => {\n        if (x.selections != null)\n          x.selections = x.selections.filter(s => s.selected);\n        return x;\n      }));\n  }\n\n  onSelected = (event, option) => {\n    option.selections.forEach(selection => {\n      if (selection.text === event.target.value) {\n        selection.selected = event.target.checked;\n      } else if (option.type === \"single-choice\") {\n        selection.selected = false;\n      }\n    });\n    option.selectedAll = option.selections.filter(x => x.selected !== true).length === 0;\n\n    this.updateMenuItem(option);\n  }\n\n  onSlide = (event, option) => {\n    option.value = event.target.value;\n    this.updateMenuItem(option);\n    this.setState(state => {\n      state.options.forEach(x => {\n        if (x.name === option.name) x = option;\n      });\n    });\n  }\n\n  toggleAll = (name) => {\n    let option = this.state.options.filter(x => x.name === name)[0];\n    let selections = option.selections;\n    option.selectedAll = !option.selectedAll;\n    selections.forEach(selection => {\n      selection.selected = option.selectedAll;\n    })\n\n    this.updateMenuItem(option);\n  }\n\n  updateMenuItem = (option) => {\n    let ready = true;\n    this.setState(state => {\n      state.options.forEach(x => {\n        if (x.name === option.name) x = option;\n        if (x.selections != null && x.selections.filter(s => s.selected).length === 0)\n          ready = false;\n      });\n\n      return {\n        options: state.options,\n        ready: ready\n      }\n    });\n  }\n\n  renderSwitch = (option) => {\n    switch (option.type) {\n      case \"single-choice\":\n      case \"multiple-choice\":\n        return <ul className=\"sections\">\n          {option.selections.map((selection, j) =>\n            <li key={j}>\n              <label>\n                <input type=\"checkbox\"\n                  value={selection.text}\n                  onChange={e => this.onSelected(e, option)}\n                  checked={selection.selected || false} />\n                <span>{selection.text}</span>\n              </label>\n            </li>\n          )}\n          {option.type === \"multiple-choice\" && <li>\n            <label>\n              <input type=\"checkbox\" onChange={() => this.toggleAll(option.name)} checked={option.selectedAll || false} />\n              <span>{i18n.t(\"select-all\")}</span>\n            </label>\n          </li>}\n        </ul>;\n      case \"range-slider\":\n        return <div className=\"sections\">\n          <input className=\"slider\" type=\"range\" min={option.min} max={option.max} step={option.step}\n            value={option.value} onChange={e => this.onSlide(e, option)} />\n            {option.value} {option.unit}\n        </div>;\n      default:\n        return <div></div>;\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.title}</h2>\n        {this.state.options.map((option, i) =>\n          <section key={i}>\n            <h3>{option.title}</h3>\n            {this.renderSwitch(option)}\n          </section>\n        )}\n        <nav>\n          <span className={`btn large ${this.state.ready ? \"green\" : \"disable\"}`} onClick={() => this.onStart()}>{i18n.t(\"start\")}</span>\n        </nav>\n      </div>\n    );\n  }\n}","import \"../styles/quiz.css\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport i18n from \"i18next\";\nimport PageBase from \"./page-base.js\";\nimport SchulteTable from \"../components/schulte-table.jsx\";\nimport QuizAttempt from \"../components/quiz-attempt.jsx\";\nimport QuizResult from \"../components/quiz-result.jsx\";\nimport QuizSetting from \"../components/quiz-setting.jsx\";\n\nclass QuizPage extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: []\n    };\n    this.quizAttempt = React.createRef();\n    this.handleUnload = this.handleUnload.bind(this);\n    this.questionBank = this.props.questionBank();\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    document.title = `${this.questionBank.getTitle()} | ${i18n.t(\"app-name\")}`;\n    window.addEventListener(\"beforeunload\", this.handleUnload);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.handleUnload);\n  }\n\n  handleUnload(e) {\n    var message = \"\";\n\n    (e || window.event).returnValue = message; // Gecko + IE\n    return message;\n  }\n\n  onStart = (options) => {\n    this.questionBank.setSettings(options);\n    this.questionBank.initQuestions();\n    this.setState({\n      componentName: this.questionBank.getSetting(\"component\"),\n      enableReview: this.questionBank.getSetting(\"enableReview\")\n    });\n  }\n\n  showResult = (results) => {\n    this.state.results.splice(0, this.state.results.length);\n    this.setState({\n      isShowResult: true,\n      results: results\n    });\n  }\n\n  onReview = () => {\n    let questions = [];\n    let incorrectQuestions = this.state.results\n      .filter(x => !x.correct)\n      .map(x => x.question);\n    for (let i = 0; i < 3; i++)\n      questions = questions.concat(incorrectQuestions);\n    this.questionBank.setQuestions(questions);\n\n    this.quizAttempt.current.nextQuestion();\n    this.setState({ isShowResult: false });\n  }\n\n  onClose = () => {\n    this.props.history.push(`/${i18n.language}/`);\n  }\n\n  renderSwitch = (componentName) => {\n    switch (componentName) {\n      case \"QuizAttempt\":\n        return <QuizAttempt ref={this.quizAttempt}\n          questionBank={this.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      case \"SchulteTable\":\n        return <SchulteTable\n          questionBank={this.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      default:\n        return <QuizSetting\n          questionBank={this.questionBank}\n          onStart={option => this.onStart(option)} />;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          {this.state.isShowResult || <span className=\"close\" onClick={() => this.onClose()}>x</span>}\n        </div>\n        {this.renderSwitch(this.state.componentName)}\n        {this.state.isShowResult &&\n          <QuizResult\n            enableReview={this.state.enableReview}\n            results={this.state.results}\n            onReview={() => this.onReview()}\n            onClose={() => this.onClose()} />}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(QuizPage);","export default class RandomUtil {\n\n    static pickRandomItems = (arr, count) => {\n        let items = []\n        for (let i = 0; i < count; i++) {\n            let index = this.getRandomInt(arr.length);\n            let item = arr.splice(index, 1)[0];\n            items.push(item);\n        }\n        return items;\n    }\n\n    static getRandomInt = (max) => {\n        return this.getRandomIntRange(0, max);\n    }\n\n    static getRandomIntRange = (min, max) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}","import i18n from \"i18next\";\nimport RandomUtil from \"../utils/random.js\";\n\nexport default class QuestionBankBase {\n\n  constructor() {\n    this.settings = {\n      component: \"QuizAttempt\",\n      enableReview: true,\n      choiceCount: 6,\n      options: [{\n          title: i18n.t(\"sections\"),\n          name: \"sections\",\n          type: \"multiple-choice\"\n        },\n        {\n          title: i18n.t(\"answering-method\"),\n          name: \"anwser-method\",\n          type: \"single-choice\",\n          selections: [{\n              text: i18n.t(\"choice\"),\n              value: \"choice\",\n              selected: true\n            },\n            {\n              text: i18n.t(\"filling\"),\n              value: \"filling\"\n            }\n          ]\n        },\n        {\n          title: i18n.t(\"time-limit\"),\n          name: \"timeoutSeconds\",\n          type: \"range-slider\",\n          value: 10,\n          unit: i18n.t(\"seconds\"),\n          min: 3,\n          max: 60,\n          step: 1\n        },\n        {\n          title: i18n.t(\"number-of-questions\"),\n          name: \"questionCount\",\n          type: \"range-slider\",\n          value: 20,\n          unit: i18n.t(\"questions\"),\n          min: 10,\n          max: 100,\n          step: 5\n        }\n      ]\n    };\n  }\n\n  getTitle = () => this.getSetting(\"title\");\n\n  getCount = () => this.count;\n\n  getCursor = () => this.cursor;\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange || 20;\n    let seeds = [];\n    for (let i = Math.max(2, answer - answerRange); i < answer + answerRange; i++) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i),\n        value: i\n      });\n    }\n\n    let randomCount = this.getSetting(\"choiceCount\") - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer),\n      value: answer\n    });\n    return choices;\n  }\n\n  setQuestions = (questions) => {\n    this.questions = questions || [];\n    this.count = this.questions.length;\n    this.cursor = 0;\n  }\n\n  nextQuestion = () => {\n    if (this.questions.length === 0) return null;\n    this.cursor++;\n    let index = RandomUtil.getRandomInt(this.questions.length);\n    let question = this.questions.splice(index, 1)[0];\n    question.choices = this.generateChoices(question);\n    return this.currentQuestion = question;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply.toString() === this.currentQuestion.answer.value.toString();\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    let options = this.getSetting(\"options\");\n\n    return options.map(x => {\n      if (x.name === \"sections\") x.selections = sections;\n      else if (x.name === \"timeoutSeconds\") x.value = 10;\n      else if (x.name === \"questionCount\") x.value = 20;\n      return x;\n    });\n  }\n\n  setSettings = (options) => {\n    options.forEach(option => {\n      this.settings[option.name] = option.selections || option.value;\n    });\n  }\n\n  getSetting = (name) => {\n    return this.settings[name];\n  }\n}","import i18n from \"i18next\";\nimport RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SchulteTableQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"schulte-table\";\n    this.settings[\"title\"] = i18n.t(this.settings[\"route\"]);\n    this.settings[\"component\"] = \"SchulteTable\";\n    this.settings[\"enableReview\"] = false;\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    return [{\n        title: i18n.t(\"sections\"),\n        name: \"sections\",\n        type: \"single-choice\",\n        selections: sections\n      },\n      {\n        title: i18n.t(\"character\"),\n        name: \"character\",\n        type: \"single-choice\",\n        selections: [{\n            text: \"123\",\n            value: \"numeral\",\n            selected: true\n          },\n          {\n            text: \"ㄅㄆㄇ\",\n            value: \"ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦ\"\n          },\n          {\n            text: \"ABC\",\n            value: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          },\n          {\n            text: \"abc\",\n            value: \"abcdefghijklmnopqrstuvwxyz\"\n          },\n          {\n            text: \"あいう\",\n            value: \"あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\"\n          },\n          {\n            text: \"アイウ\",\n            value: \"アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン\"\n          }\n        ]\n      }\n    ];\n  }\n\n  getSections = () => {\n    let sections = [];\n    for (let i = 3; i <= 9; i++) {\n      sections.push({\n        text: `${i} x ${i} ${i18n.t(\"grid\")}`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  initQuestions = () => {\n    let section = this.getSetting(\"sections\")[0].value;\n    let characters = this.characters = this.getCharacters(this.getSetting(\"character\")[0].value);\n    let squareRoot = Math.min(section, Math.ceil(Math.sqrt(characters.length)));\n    let count = Math.pow(squareRoot, 2);\n\n    let questions = [];\n    for (let i = 1; i <= count; i++) {\n      let char = characters[i - 1];\n      questions.push(char == null ? null : {\n        text: char,\n        value: i\n      });\n    }\n\n    this.setQuestions(RandomUtil.pickRandomItems(questions, count));\n  }\n\n  nextQuestion = () => {\n    this.cursor = 0;\n    return this.questions;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply === this.cursor;\n  }\n\n  nextCursor = () => {\n    if (this.cursor >= this.questions.length) return null;\n    let current = this.cursor++;\n    let character = this.characters[current];\n    return (character == null) ? null : {\n      text: character,\n      value: current\n    };\n  }\n\n  getCharacters = (str) => {\n    if (str === \"numeral\") return Array.from({\n      length: Math.pow(9, 2)\n    }, (x, i) => i + 1);\n    return str.split(\"\");\n  }\n}","import i18n from \"i18next\";\nimport RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class AdditionQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"addition\";\n    this.settings[\"title\"] = i18n.t(this.settings[\"route\"]);\n  }\n\n  getSections = () => {\n    return [{\n        text: i18n.t(\"add-within-10\"),\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10, \n        maxCount: 45\n      },\n      {\n        text: i18n.t(\"add-within-20\"),\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: i18n.t(\"two-digit-addition\"),\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: i18n.t(\"three-digit-addition\"),\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: i18n.t(\"four-digit-addition\"),\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9999,\n        answerRange: 50\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\") || this.getSections();\n    let questionCount = this.getSetting(\"questionCount\");\n    let questionCountOfSection = Math.ceil(questionCount / sections.length);\n    let questions = [];\n    sections.forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < Math.min(questionCountOfSection, section.maxCount || questionCount)) {\n        let summation = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let x = RandomUtil.getRandomIntRange(section.minimum, summation - section.minimum);\n        let y = summation - x;\n        let key = `${x} + ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    questions = RandomUtil.pickRandomItems(questions, Math.min(questionCount, questions.length));\n    for (let i = 0; questions.length < questionCount; i++) {\n      if (i >= questions.length) i = 0;\n      questions.push(questions[i]);\n    }\n    this.setQuestions(questions);\n  }\n}","import i18n from \"i18next\";\nimport RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SubtractionQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"subtraction\";\n    this.settings[\"title\"] = i18n.t(this.settings[\"route\"]);\n  }\n\n  getSections = () => {\n    return [{\n        text: i18n.t(\"subtract-within-10\"),\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10,\n        maxCount: 45\n      },\n      {\n        text: i18n.t(\"subtract-within-20\"),\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: i18n.t(\"two-digit-subtraction\"),\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: i18n.t(\"three-digit-subtraction\"),\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: i18n.t(\"four-digit-subtraction\"),\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9909,\n        answerRange: 50\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\") || this.getSections();\n    let questionCount = this.getSetting(\"questionCount\");\n    let questionCountOfSection = Math.ceil(questionCount / sections.length);\n    let questions = [];\n    sections.forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < Math.min(questionCountOfSection, section.maxCount || questionCount)) {\n        let x = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let y = RandomUtil.getRandomIntRange(section.minimum, x);\n        let summation = x - y;\n        let key = `${x} - ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    questions = RandomUtil.pickRandomItems(questions, Math.min(questionCount, questions.length));\n    for (let i = 0; questions.length < questionCount; i++) {\n      if (i >= questions.length) i = 0;\n      questions.push(questions[i]);\n    }\n    this.setQuestions(questions);\n  }\n}","import i18n from \"i18next\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class MultiplicationQuestionBank extends QuestionBankBase {\n\n  constructor(level) {\n    super();\n    switch (level || 1) {\n      case 2:\n        this.settings[\"multiplier\"] = 11;\n        this.settings[\"multiplicand\"] = 19;\n        this.settings[\"route\"] = \"multiplication-19x19\";\n        break;\n      default:\n        this.settings[\"multiplier\"] = 2;\n        this.settings[\"multiplicand\"] = 9;\n        this.settings[\"route\"] = \"multiplication-9x9\";\n        break;\n    }\n    this.settings[\"title\"] = i18n.t(this.settings[\"route\"]);\n    this.settings[\"options\"] = this.settings[\"options\"].filter(x => x.name !== \"questionCount\");\n  }\n\n  getSections = () => {\n    let sections = [];\n    let multiplier = this.getSetting(\"multiplier\");\n    let multiplicand = this.getSetting(\"multiplicand\");\n    for (let i = multiplier; i <= multiplicand; i++) {\n      sections.push({\n        text: `${i} x ${multiplicand}`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\");\n    let multiplicand = this.getSetting(\"multiplicand\");\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      for (let i = 2; i <= multiplicand; i++) {\n        questions.push({\n          description: `${section.value} x ${i}`,\n          answer: {\n            text: this.convertText(section.value * i),\n            value: section.value * i\n          },\n        });\n      }\n    });\n    this.setQuestions(questions);\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.disableSecondhand = nextProps.disableSecondhand;\n    this.drawClock(nextProps.hhmmss);\n  }\n\n  componentDidMount() {\n    this.disableSecondhand = this.props.disableSecondhand;\n    this.drawClock(this.props.hhmmss);\n  }\n\n  drawClock = (hhmmss) => {\n    let canvas = this.canvas.current;\n    canvas.height = canvas.width;\n    let context = canvas.getContext(\"2d\");\n    let radius = canvas.height / 2;\n    context.translate(radius, radius);\n    radius = radius * 0.90;\n    this.context = context;\n    this.radius = radius;\n    let arr = (hhmmss || \"00:00:00\").split(\":\");\n    let hour = arr[0] || \"0\";\n    let minute = arr[1] || \"0\";\n    let second = arr[2] || \"0\";\n\n    this.drawFace();\n    this.drawNumbers();\n    this.drawTime(hour, minute, second);\n  }\n\n  drawFace = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n\n    // Base Plate\n    context.arc(0, 0, radius, 0, 2 * Math.PI);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    // Outside frame\n    // let grad = context.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n    // grad.addColorStop(0, \"red\");\n    // grad.addColorStop(0.5, \"yellow\");\n    // grad.addColorStop(1, \"green\");\n    // context.strokeStyle = grad;\n    // context.lineWidth = radius * 0.1;\n    // context.stroke();\n  }\n\n  drawNumbers = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n    context.fillStyle = \"black\";\n    context.font = `bold ${radius * 0.2}px arial`;\n    context.textBaseline = \"middle\";\n    context.textAlign = \"center\";\n    for (let num = 1; num < 13; num++) {\n      let ang = num * Math.PI / 6;\n      context.rotate(ang);\n      context.translate(0, -radius * 0.85);\n      context.rotate(-ang);\n      context.fillText(num.toString(), 0, 0);\n      context.rotate(ang);\n      context.translate(0, radius * 0.85);\n      context.rotate(-ang);\n    }\n  }\n\n  drawTime = (hour, minute, second) => {\n    let radius = this.radius;\n\n    // Hour\n    hour = hour % 12;\n    hour = (hour * Math.PI / 6) +\n      (minute * Math.PI / (6 * 60)) +\n      (second * Math.PI / (360 * 60));\n    this.drawHand(hour, radius * 0.4, radius * 0.07);\n\n    // Minute\n    minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\n    this.drawHand(minute, radius * 0.7, radius * 0.05);\n\n    // Second\n    if (this.disableSecondhand === \"true\") return;\n    second = (second * Math.PI / 30);\n    this.drawHand(second, radius * 0.6, radius * 0.02, \"red\");\n  }\n\n  drawHand = (pos, length, width, style) => {\n    let context = this.context;\n    style = style || \"black\"\n\n    // Center of Clock\n    context.beginPath();\n    context.arc(0, 0, length * width * 0.015, 0, 2 * Math.PI);\n    context.fillStyle = style;\n    context.fill();\n\n    // Hand of Clock\n    context.beginPath();\n    context.strokeStyle = style;\n    context.lineWidth = width;\n    context.lineCap = \"round\";\n    context.moveTo(0, 0);\n    context.rotate(pos);\n    context.lineTo(0, -length);\n    context.stroke();\n    context.rotate(-pos);\n  }\n\n  render() {\n    return (\n      <canvas className=\"clock\" ref={this.canvas} width={this.props.width || 200} />\n    );\n  }\n}","import i18n from \"i18next\";\nimport RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\nimport Clock from \"../../components/clock.jsx\";\n\nexport default class ClockQuestionBank extends QuestionBankBase {\n  secondsInDay = 24 * 60 * 60;\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"clock\";\n    this.settings[\"title\"] = i18n.t(this.settings[\"route\"]);\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    return [{\n        title: i18n.t(\"sections\"),\n        name: \"sections\",\n        type: \"single-choice\",\n        selections: sections\n      },\n      {\n        title: i18n.t(\"time-limit\"),\n        name: \"timeoutSeconds\",\n        type: \"range-slider\",\n        value: 10,\n        unit: i18n.t(\"seconds\"),\n        min: 3,\n        max: 60,\n        step: 1\n      },\n      {\n        title: i18n.t(\"number-of-questions\"),\n        name: \"questionCount\",\n        type: \"range-slider\",\n        value: 20,\n        unit: i18n.t(\"questions\"),\n        min: 10,\n        max: 100,\n        step: 5\n      }\n    ];\n  }\n\n  getSections = () => {\n    return [{\n        text: i18n.t(\"o-clock\"),\n        intervalSeconds: 60 * 60,\n        answerRange: 10,\n        maxCount: 12\n      },\n      {\n        text: i18n.t(\"half-an-hour\"),\n        intervalSeconds: 30 * 60,\n        answerRange: 10,\n        maxCount: 24\n      },\n      {\n        text: i18n.t(\"five-minutes\"),\n        intervalSeconds: 5 * 60,\n        answerRange: 10\n      },\n      {\n        text: i18n.t(\"one-minute\"),\n        intervalSeconds: 1 * 60,\n        answerRange: 10\n      },\n      {\n        text: i18n.t(\"one-second\"),\n        intervalSeconds: 5,\n        answerRange: 120\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\") || this.getSections();\n    let questionCount = this.getSetting(\"questionCount\");\n    let questionCountOfSection = Math.ceil(questionCount / sections.length);\n    let questions = [];\n    sections.forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < Math.min(questionCountOfSection, section.maxCount || questionCount)) {\n        let disableSecondhand = section.intervalSeconds !== 5;\n        let random = RandomUtil.getRandomInt(this.secondsInDay / 2);\n        random = random - random % section.intervalSeconds;\n        let key = this.convertText(random, disableSecondhand);\n        hashMap.set(key, {\n          description: <Clock hhmmss={key} disableSecondhand={disableSecondhand.toString()} />,\n          answer: {\n            text: key,\n            value: random\n          },\n          answerRange: section.answerRange,\n          intervalSeconds: section.intervalSeconds,\n          disableSecondhand: disableSecondhand\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    questions = RandomUtil.pickRandomItems(questions, Math.min(questionCount, questions.length));\n    for (let i = 0; questions.length < questionCount; i++) {\n      if (i >= questions.length) i = 0;\n      questions.push(questions[i]);\n    }\n    this.setQuestions(questions);\n  }\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange * question.intervalSeconds;\n    let intervalSeconds = question.intervalSeconds;\n    let seeds = [];\n    for (let i = Math.max(0, answer - answerRange); i < Math.min(answer + answerRange, this.secondsInDay / 2); i += intervalSeconds) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i, question.disableSecondhand),\n        value: i\n      });\n    }\n\n    let randomCount = this.getSetting(\"choiceCount\") - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer, question.disableSecondhand),\n      value: answer\n    });\n    return choices;\n  }\n\n  convertText = (value, disableSeconds) => {\n    let hour = Math.floor(value / (60 * 60));\n    let minute = Math.floor(value % (60 * 60) / 60);\n    let second = value % 60;\n\n    hour = hour === 0 ? 12 : hour;\n    let result = `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`;\n    if (!disableSeconds) result += `:${second.toString().padStart(2, \"0\")}`;\n\n    return result;\n  }\n}","import QuizPage from \"./pages/quiz-page.jsx\";\n\nimport SchulteTableQuestionBank from \"./libs/question-bank/schulte-table.js\";\nimport AdditionQuestionBank from \"./libs/question-bank/addition.js\";\nimport SubtractionQuestionBank from \"./libs/question-bank/subtraction.js\";\nimport MultiplicationQuestionBank from \"./libs/question-bank/multiplication.js\";\nimport ClockQuestionBank from \"./libs/question-bank/clock.js\";\n\nexport const AppRoutes = [{\n    path: \"schulte-table\",\n    component: <QuizPage questionBank={() => new SchulteTableQuestionBank()}/>\n},\n{\n    path: \"addition\",\n    component: <QuizPage questionBank={() => new AdditionQuestionBank()}/>\n},\n{\n    path: \"subtraction\",\n    component: <QuizPage questionBank={() => new SubtractionQuestionBank()}/>\n},\n{\n    path: \"multiplication-9x9\",\n    component: <QuizPage questionBank={() => new MultiplicationQuestionBank()}/>\n},\n{\n    path: \"multiplication-19x19\",\n    component: <QuizPage questionBank={() => new MultiplicationQuestionBank(2)}/>\n},\n{\n    path: \"clock\",\n    component: <QuizPage questionBank={() => new ClockQuestionBank()}/>\n}];","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport i18n from \"i18next\";\nimport PageBase from \"./page-base.js\";\nimport { AppRoutes } from \"../app-routes.js\";\nimport { Translations } from \"../i18n.js\";\n\nexport default class MenuPage extends PageBase {\n\n  constructor(props) {\n    super(props);\n    this.title = i18n.t(\"app-name\");\n    this.translations = [];\n    for (let langCode in Translations) {\n      this.translations.push({\n        path: langCode,\n        name: Translations[langCode].name\n      });\n    }\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    document.title = this.title;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <div className=\"dropdown\">\n            <button className=\"dropbtn\">{i18n.t(\"language\")}</button>\n            <div className=\"dropdown-content\">\n              {this.translations.map((translation, i) =>\n                <a key={i} hrefLang={translation.path} href={`${window.location.origin}/${translation.path}/`}>{translation.name}</a>\n              )}\n            </div>\n          </div>\n        </div>\n        <nav className=\"menu\">\n          <h1>{this.title}</h1>\n          <ul>\n            {AppRoutes.map((route, i) =>\n              <li key={i}>\n                <Link className=\"btn green\" to={`/${i18n.language}/${route.path}`}>{i18n.t(route.path)}</Link>\n              </li>)}\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport i18n from \"i18next\";\nimport { withNamespaces } from \"react-i18next\";\nimport { AppRoutes } from \"./app-routes.js\";\nimport { Translations } from \"./i18n.js\";\nimport MenuPage from \"./pages/menu-page.jsx\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let langCode = window.location.pathname.split(\"/\")[1];\n    if (!Translations[langCode]) {\n      langCode = i18n.language;\n    }\n    if (langCode !== i18n.language) {\n      i18n.changeLanguage(langCode);\n    }\n  }\n\n  componentDidMount() {\n    this.setMeta(\"description\", i18n.t(\"app-description\"));\n    this.setMeta(\"keywords\", i18n.t(\"app-keywords\"));\n  }\n\n  setMeta = (key, content) => {\n    const el = document.querySelector(`head meta[name='${key}']`);\n    el.setAttribute(\"content\", content)\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"app\">\n          <Switch>\n            {AppRoutes.map((route, i) =>\n              <Route key={i} path={`/:lang/${route.path}`} component={() => route.component} />\n            )}\n            <Route exact component={MenuPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withNamespaces()(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport \"./i18n\";\nimport App from \"./app.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}
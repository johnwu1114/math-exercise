{"version":3,"sources":["i18n.js","config.js","libs/utils/timer.js","components/schulte-table.jsx","components/countdown.jsx","components/numeric-keypad.jsx","components/quiz-attempt.jsx","components/quiz-result.jsx","components/quiz-setting.jsx","pages/quiz-page.jsx","libs/utils/random.js","libs/question-bank/base.js","libs/question-bank/schulte-table.js","libs/question-bank/addition.js","libs/question-bank/subtraction.js","libs/question-bank/multiplication.js","components/clock.jsx","libs/question-bank/clock.js","app-routes.js","pages/menu-page.jsx","app.jsx","index.js"],"names":["resources","translation","i18n","use","detector","reactI18nextModule","init","fallbackLng","keySeparator","interpolation","escapeValue","Config","Timer","callback","start","intervalId","setInterval","durationSeconds","intervalSeconds","stop","clearInterval","restart","getDuration","this","SchulteTable","props","updateTime","seconds","setState","time","toFixed","checkAnswer","reply","answerTimer","clearTimeout","effectId","sytle","cursor","state","correct","questionBank","value","logAnswer","nextCursor","timer","onFinish","results","clicked","setTimeout","squareRoot","Math","sqrt","characters","length","result","question","description","answer","text","duration","push","nextQuestion","className","map","character","onClick","Component","Countdown","reset","pause","resume","countdown","maximum","onChanged","timeout","min","getStatus","rate","round","parseFloat","max","NumericKeypad","num","input","onBack","clear","substring","onConfirm","numbers","i","QuizAttempt","choices","splice","count","getCount","getCursor","current","numericKeypad","convertText","disableSecondhand","onCountdownChanged","renderSwitch","answerMethod","ref","parseInt","choice","getSetting","timeoutSeconds","React","createRef","QuizResult","incorrect","forEach","avgDuration","score","floor","onClose","style","width","enableReview","onReview","QuizSetting","onStart","ready","options","x","selections","filter","s","selected","onSelected","event","option","selection","target","checked","type","selectedAll","updateMenuItem","onSlide","name","toggleAll","j","onChange","e","step","unit","title","getTitle","getOptions","QuizPage","setSettings","initQuestions","componentName","showResult","isShowResult","questions","incorrectQuestions","concat","setQuestions","quizAttempt","history","handleUnload","bind","document","window","addEventListener","removeEventListener","returnValue","withRouter","RandomUtil","pickRandomItems","arr","items","index","getRandomInt","item","getRandomIntRange","random","QuestionBankBase","generateChoices","answerRange","seeds","randomCount","currentQuestion","toString","sections","getSections","settings","component","choiceCount","SchulteTableQuestionBank","section","getCharacters","ceil","pow","char","str","Array","from","split","AdditionQuestionBank","minimum","minSummation","maxSummation","maxCount","questionCount","questionCountOfSection","hashMap","Map","size","summation","y","key","set","SubtractionQuestionBank","MultiplicationQuestionBank","level","multiplier","multiplicand","Clock","drawClock","hhmmss","canvas","height","context","getContext","radius","translate","hour","minute","second","drawFace","drawNumbers","drawTime","beginPath","arc","PI","fillStyle","fill","font","textBaseline","textAlign","ang","rotate","fillText","drawHand","pos","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","nextProps","ClockQuestionBank","secondsInDay","disableSeconds","padStart","AppRoutes","path","MenuPage","route","to","App","exact","withNamespaces","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54d37fd5.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport {\n  reactI18nextModule\n} from \"react-i18next\";\nimport en from \"./locales/en.json\";\nimport zhtw from \"./locales/zh-tw.json\";\n\n// ref: https://react.i18next.com/legacy-v9/step-by-step-guide\n\nconst resources = {\n  \"en\": {\n    translation: en\n  },\n  \"zhtw\": {\n    translation: zhtw\n  }\n};\n\ni18n\n  .use(detector)\n  .use(reactI18nextModule)\n  .init({\n    resources,\n    // lng: \"zhtw\",\n    fallbackLng: \"zhtw\",\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;","export const Config = {\n    AppName : \"數學練習小程式\"\n};","export default class Timer {\n  constructor(callback) {\n    this.intervalSeconds = 0.1;\n    this.durationSeconds = 0;\n    this.callback = callback;\n  }\n\n  start = () => {\n    this.intervalId = setInterval(() => {\n      this.durationSeconds += this.intervalSeconds;\n      if (this.callback) this.callback(this.durationSeconds);\n    }, this.intervalSeconds * 1000);\n  }\n\n  stop = () => {\n    if (this.intervalId) clearInterval(this.intervalId);\n  }\n\n  restart = () => {\n    this.stop();\n    this.durationSeconds = 0;\n    this.start();\n  }\n\n  getDuration = () => {\n    return this.durationSeconds;\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class SchulteTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n    this.timer = new Timer(this.updateTime);\n    this.answerTimer = new Timer();\n\n    this.state = {\n      characters: this.questionBank.nextQuestion(),\n      cursor: this.questionBank.nextCursor(),\n      clicked: {},\n      time: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timer.start();\n    this.answerTimer.start();\n  }\n\n  componentWillUnmount() {\n    this.timer.stop();\n    this.answerTimer.stop();\n  }\n\n  updateTime = (seconds) => {\n    this.setState({ time: `${seconds.toFixed(1)}s` });\n  }\n\n  checkAnswer = (reply) => {\n    this.answerTimer.stop();\n    clearTimeout(this.effectId);\n    let sytle = \"incorrect\";\n    let cursor = this.state.cursor;\n    let correct = this.questionBank.checkAnswer(reply.value);\n    this.logAnswer(reply);\n\n    if (correct) {\n      sytle = \"correct\";\n      cursor = this.questionBank.nextCursor();\n      if (cursor === null) {\n        this.timer.stop();\n        this.setState({ time: null });\n        this.props.onFinish(this.results);\n        this.results = [];\n        return;\n      }\n    }\n\n    this.setState({\n      clicked: {\n        value: reply.value,\n        sytle: sytle\n      },\n      cursor: cursor\n    });\n    this.effectId = setTimeout(() => {\n      this.setState({ clicked: {} });\n    }, 500);\n    this.answerTimer.restart();\n  }\n\n  logAnswer = (reply) => {\n    let squareRoot = Math.sqrt(this.state.characters.length);\n    let result = {\n      question: {\n        description: `${squareRoot} x ${squareRoot} 格`,\n        answer: {\n          text: `順序 ${this.state.cursor.text}`\n        }\n      },\n      reply: reply.text,\n      correct: this.questionBank.checkAnswer(reply.value),\n      duration: this.answerTimer.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div>\n        <div className=\"schulte-table\">\n          <div className=\"cursor\">按下：<b>{this.state.cursor.text}</b></div>\n          <div className=\"time\">{this.state.time}</div>\n          <div className={`characters size-${this.state.characters.length}`}>\n            {this.state.characters.map((character) =>\n              character && <div key={character.value}\n                className={`cell ${(clicked.value === character.value ? clicked.sytle : \"\")}`}\n                onClick={() => this.checkAnswer(character)}><span>{character.text}</span></div>\n            )}\n          </div>\n        </div>\n      </div >\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class Countdown extends Component {\n\n  constructor(props) {\n    super(props);\n    this.maximum = parseFloat(props.seconds || 10);\n    this.timer = new Timer(this.countdown);\n    this.state = { time: this.maximum };\n  }\n\n  reset = () => {\n    this.timer.restart();\n  }\n\n  pause = () => {\n    this.timer.stop();\n  }\n\n  resume = () => {\n    this.timer.start();\n  }\n\n  countdown = () => {\n    this.setState({ time: this.maximum - this.timer.getDuration() });\n    this.props.onChanged(this.state.time);\n    if (this.state.time > 0) return;\n    this.timeout();\n  }\n\n  timeout = () => {\n    this.timer.stop();\n    this.props.timeout();\n  }\n\n  getDuration = () => {\n    return Math.min(this.maximum, this.timer.getDuration());\n  }\n\n  getStatus = () => {\n    let rate = Math.round(this.state.time / this.maximum * 100);\n    if (rate < 20) return \"danger\";\n    else if (rate < 50) return \"warning\";\n    return \"\";\n  }\n\n  render() {\n    return (\n      <progress className={this.getStatus()} max={this.maximum} value={this.state.time.toFixed(1)}></progress>\n    );\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\n\nexport default class NumericKeypad extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicked: {}\n    };\n\n    this.numbers = [];\n    for (let i = 1; i <= 9; i++) {\n      this.numbers.push(i);\n    }\n    this.clear();\n  }\n\n  onClick = (num) => {\n    this.input += `${num}`;\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onBack = () => {\n    if (this.input.length <= 1)\n      this.clear();\n    else\n      this.input = this.input.substring(0, this.input.length - 1);\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onConfirm = () => {\n    if (this.input === \"\") return;\n    this.props.onConfirm(this.input);\n    this.clear();\n  }\n\n  clear = () => {\n    this.input = \"\";\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div className=\"numeric-keypad\">\n        <div className=\"numbers\">\n          {this.numbers.map(num =>\n            <div key={num}\n              className={`cell ${(clicked.num === num ? clicked.sytle : \"\")}`}\n              onClick={() => this.onClick(num)}><span>{num}</span></div>\n          )}\n          <div className=\"cell\" onClick={() => this.onBack()}><span className=\"icon-backspace\"></span></div>\n          <div className={`cell ${(clicked.num === 0 ? clicked.sytle : \"\")}`}\n            onClick={() => this.onClick(0)}><span>0</span></div>\n          <div className=\"cell\" onClick={() => this.onConfirm()}><span className=\"icon-check\"></span></div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport Countdown from \"./countdown.jsx\";\nimport NumericKeypad from \"./numeric-keypad.jsx\";\n\nexport default class QuizAttempt extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    let answerMethod = this.questionBank.getSetting(\"anwser-method\");\n    let timeoutSeconds = this.questionBank.getSetting(\"timeoutSeconds\");\n\n    this.results = [];\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      reply: \"\",\n      timeoutSeconds: timeoutSeconds,\n      answerMethod: answerMethod == null ? \"choice\" : answerMethod[0].value,\n      count: this.questionBank.getCount(),\n      cursor: this.questionBank.getCursor()\n    };\n    this.countdown = React.createRef();\n    this.numericKeypad = React.createRef();\n  }\n\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  componentWillUnmount() {\n    this.countdown.current.pause();\n  }\n\n  nextQuestion = () => {\n    this.setState({ correct: null });\n\n    let question = this.questionBank.nextQuestion();\n    if (question === null) {\n      this.props.onFinish(this.results);\n      this.results = [];\n      return;\n    }\n\n    this.state.choices.splice(0, this.state.choices.length);\n    question.reply = \"\";\n    question.count = this.questionBank.getCount();\n    question.cursor = this.questionBank.getCursor();\n    this.setState(question);\n    this.countdown.current.reset();\n    if (this.numericKeypad.current)\n      this.numericKeypad.current.clear();\n  }\n\n  checkAnswer = (reply) => {\n    reply = reply == null ? \"\" : reply;\n    this.countdown.current.pause();\n    let correct = this.questionBank.checkAnswer(reply);\n    this.logAnswer(reply);\n\n    this.setState({\n      correct: correct,\n      reply: reply\n    });\n    if (correct) this.nextQuestion();\n  }\n\n  logAnswer = (reply) => {\n    let result = {\n      question: this.state,\n      reply: this.questionBank.convertText(reply, this.state.disableSecondhand),\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.countdown.current.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  onCountdownChanged = (value) => {\n    this.setState({ countdown: value });\n  }\n\n  renderSwitch = () => {\n    switch (this.state.answerMethod) {\n      case \"filling\":\n        return <NumericKeypad ref={this.numericKeypad}\n          onChanged={value => this.setState({ reply: value })}\n          onConfirm={value => this.checkAnswer(parseInt(value))} />\n      default:\n        return <ul className=\"choices\">\n          {this.state.choices.map((choice, i) =>\n            <li key={i} onClick={() => this.checkAnswer(choice.value)} ><span>{choice.text}</span></li>\n          )}\n        </ul>\n    }\n  }\n\n  render() {\n    return (\n      <div className={`answer-method ${this.state.answerMethod}`}>\n        <span className=\"questionNumber\">{`${this.state.cursor}/${this.state.count}`}</span>\n        <div className={`question ${this.state.countdown < 3 && this.state.correct !== false && \"blink\"}`}>\n          {this.state.description} {this.state.answerMethod === \"filling\" && <span>{`= ${this.state.reply}`}</span>}\n        </div>\n        {this.state.correct === false\n          ? <div>\n            <p>{this.state.reply === \"\" ? \"時間到！\" : \"答錯了！\"} 答案是 {this.state.answer.text}</p>\n            <span className=\"btn large blue\" onClick={() => this.nextQuestion()}>下一題</span>\n          </div>\n          : this.renderSwitch()}\n        <Countdown ref={this.countdown}\n          seconds={this.state.timeoutSeconds}\n          timeout={() => this.checkAnswer(this.state.reply)}\n          onChanged={value => this.onCountdownChanged(value)} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizResult extends Component {\n  constructor(props) {\n    super(props);\n\n    let correct = 0;\n    let incorrect = 0;\n    let timeout = 0;\n    let duration = 0;\n    let results = this.props.results || [];\n    results.forEach(result => {\n      if (result.correct) correct++;\n      else if (result.reply) incorrect++;\n      else timeout++;\n      duration += result.duration;\n    });\n    this.state = {\n      results: results,\n      correct: correct,\n      incorrect: incorrect,\n      timeout: timeout,\n      avgDuration: results.length && duration / results.length,\n      duration: duration,\n      score: results.length && Math.floor(correct / results.length * 100),\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={() => this.props.onClose()}>x</span>\n          <table>\n            <tbody>\n              <tr className=\"correct\"><td>答對次數：</td><td>{this.state.correct}</td></tr>\n              <tr className={this.state.incorrect > 0 ? \"incorrect\" : \"\"}><td>答錯次數：</td><td>{this.state.incorrect}</td></tr>\n              {this.state.timeout > 0 && <tr className=\"incorrect\"><td>逾時次數：</td><td>{this.state.timeout}</td></tr>}\n              <tr><td>平均耗時：</td><td>{this.state.avgDuration.toFixed(1)} 秒</td></tr>\n              <tr><td>全部耗時：</td><td>{this.state.duration.toFixed(1)} 秒</td></tr>\n            </tbody>\n          </table>\n          <hr />\n          {this.state.incorrect > 0 &&\n            <table>\n              <thead>\n                <tr>\n                  <th style={{ width: \"5%\" }}></th>\n                  <th>題目</th>\n                  <th style={{ width: \"20%\" }}>解答</th>\n                  <th style={{ width: \"20%\" }}>作答</th>\n                  <th style={{ width: \"25%\" }}>耗時(秒)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.results.map((result, i) => result.correct ||\n                  <tr key={i} className={result.correct ? \"correct\" : \"incorrect\"}>\n                    <td><b /></td>\n                    <td>{result.question.description}</td>\n                    <td>{result.question.answer.text}</td>\n                    <td>{result.reply === \"\" ? \"--\" : result.reply}</td>\n                    <td>{result.duration.toFixed(1)}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>}\n          <div className=\"modal-footer\">\n            <span className=\"btn\" onClick={() => this.props.onClose()}>關閉</span>\n            {this.props.enableReview && this.state.incorrect >= 3 &&\n              <span className=\"btn blue\" onClick={() => this.props.onReview()}>複習</span>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizSetting extends Component {\n  constructor(props) {\n    super(props);\n    let questionBank = this.props.questionBank;\n    let title = questionBank.getTitle();\n    let options = questionBank.getOptions();\n\n    this.state = {\n      title: title,\n      options: options,\n      ready: true\n    };\n  }\n\n  onStart = () => {\n    if (this.state.ready > 0)\n      this.props.onStart(this.state.options.map(x => {\n        if (x.selections != null)\n          x.selections = x.selections.filter(s => s.selected);\n        return x;\n      }));\n  }\n\n  onSelected = (event, option) => {\n    option.selections.forEach(selection => {\n      if (selection.text === event.target.value) {\n        selection.selected = event.target.checked;\n      } else if (option.type === \"single-choice\") {\n        selection.selected = false;\n      }\n    });\n    option.selectedAll = option.selections.filter(x => x.selected !== true).length === 0;\n\n    this.updateMenuItem(option);\n  }\n\n  onSlide = (event, option) => {\n    option.value = event.target.value;\n    this.updateMenuItem(option);\n    this.setState(state => {\n      state.options.forEach(x => {\n        if (x.name === option.name) x = option;\n      });\n    });\n  }\n\n  toggleAll = (name) => {\n    let option = this.state.options.filter(x => x.name === name)[0];\n    let selections = option.selections;\n    option.selectedAll = !option.selectedAll;\n    selections.forEach(selection => {\n      selection.selected = option.selectedAll;\n    })\n\n    this.updateMenuItem(option);\n  }\n\n  updateMenuItem = (option) => {\n    let ready = true;\n    this.setState(state => {\n      state.options.forEach(x => {\n        if (x.name === option.name) x = option;\n        if (x.selections != null && x.selections.filter(s => s.selected).length === 0)\n          ready = false;\n      });\n\n      return {\n        options: state.options,\n        ready: ready\n      }\n    });\n  }\n\n  renderSwitch = (option) => {\n    switch (option.type) {\n      case \"single-choice\":\n      case \"multiple-choice\":\n        return <ul className=\"sections\">\n          {option.selections.map((selection, j) =>\n            <li key={j}>\n              <label>\n                <input type=\"checkbox\"\n                  value={selection.text}\n                  onChange={e => this.onSelected(e, option)}\n                  checked={selection.selected || false} />\n                <span>{selection.text}</span>\n              </label>\n            </li>\n          )}\n          {option.type === \"multiple-choice\" && <li>\n            <label>\n              <input type=\"checkbox\" onChange={() => this.toggleAll(option.name)} checked={option.selectedAll || false} />\n              <span>全選</span>\n            </label>\n          </li>}\n        </ul>;\n      case \"range-slider\":\n        return <div className=\"sections\">\n          <input className=\"slider\" type=\"range\" min={option.min} max={option.max} step={option.step}\n            value={option.value} onChange={e => this.onSlide(e, option)} />\n            {option.value} {option.unit}\n        </div>;\n      default:\n        return <div></div>;\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.title}</h2>\n        {this.state.options.map((option, i) =>\n          <section key={i}>\n            <h3>{option.title}</h3>\n            {this.renderSwitch(option)}\n          </section>\n        )}\n        <nav>\n          <span className={`btn large ${this.state.ready ? \"green\" : \"disable\"}`} onClick={() => this.onStart()}>開始</span>\n        </nav>\n      </div>\n    );\n  }\n}","import \"../styles/quiz.css\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Config } from \"../config.js\";\nimport SchulteTable from \"../components/schulte-table.jsx\";\nimport QuizAttempt from \"../components/quiz-attempt.jsx\";\nimport QuizResult from \"../components/quiz-result.jsx\";\nimport QuizSetting from \"../components/quiz-setting.jsx\";\n\nclass QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: []\n    };\n    this.quizAttempt = React.createRef();\n    this.handleUnload = this.handleUnload.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = `${this.props.questionBank.getTitle()} | ${Config.AppName}`;\n    window.addEventListener('beforeunload', this.handleUnload);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.handleUnload);\n  }\n\n  handleUnload(e) {\n    var message = \"\";\n\n    (e || window.event).returnValue = message; //Gecko + IE\n    return message;\n  }\n\n  onStart = (options) => {\n    let questionBank = this.props.questionBank;\n    questionBank.setSettings(options);\n    questionBank.initQuestions();\n\n    this.setState({\n      componentName: questionBank.getSetting(\"component\"),\n      enableReview: questionBank.getSetting(\"enableReview\")\n    });\n  }\n\n  showResult = (results) => {\n    this.state.results.splice(0, this.state.results.length);\n    this.setState({\n      isShowResult: true,\n      results: results\n    });\n  }\n\n  onReview = () => {\n    let questions = [];\n    let incorrectQuestions = this.state.results\n      .filter(x => !x.correct)\n      .map(x => x.question);\n    for (let i = 0; i < 3; i++)\n      questions = questions.concat(incorrectQuestions);\n    this.props.questionBank.setQuestions(questions);\n\n    this.quizAttempt.current.nextQuestion();\n    this.setState({ isShowResult: false });\n  }\n\n  onClose = () => {\n    this.props.history.push(\"/\");\n  }\n\n  renderSwitch = (componentName) => {\n    switch (componentName) {\n      case \"QuizAttempt\":\n        return <QuizAttempt ref={this.quizAttempt}\n          questionBank={this.props.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      case \"SchulteTable\":\n        return <SchulteTable\n          questionBank={this.props.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      default:\n        return <QuizSetting\n          questionBank={this.props.questionBank}\n          onStart={option => this.onStart(option)} />;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          {this.state.isShowResult || <span className=\"close\" onClick={() => this.onClose()}>x</span>}\n        </div>\n        {this.renderSwitch(this.state.componentName)}\n        {this.state.isShowResult &&\n          <QuizResult\n            enableReview={this.state.enableReview}\n            results={this.state.results}\n            onReview={() => this.onReview()}\n            onClose={() => this.onClose()} />}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(QuizPage);","export default class RandomUtil {\n\n    static pickRandomItems = (arr, count) => {\n        let items = []\n        for (let i = 0; i < count; i++) {\n            let index = this.getRandomInt(arr.length);\n            let item = arr.splice(index, 1)[0];\n            items.push(item);\n        }\n        return items;\n    }\n\n    static getRandomInt = (max) => {\n        return this.getRandomIntRange(0, max);\n    }\n\n    static getRandomIntRange = (min, max) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}","import RandomUtil from \"../utils/random.js\";\n\nexport default class QuestionBankBase {\n\n  constructor() {\n    this.settings = {\n      component: \"QuizAttempt\",\n      enableReview: true,\n      choiceCount: 6,\n      options: [{\n          title: \"請選擇\",\n          name: \"sections\",\n          type: \"multiple-choice\"\n        },\n        {\n          title: \"答題方式\",\n          name: \"anwser-method\",\n          type: \"single-choice\",\n          selections: [{\n              text: \"選擇題\",\n              value: \"choice\",\n              selected: true\n            },\n            {\n              text: \"填充題\",\n              value: \"filling\"\n            }\n          ]\n        },\n        {\n          title: \"答題限時\",\n          name: \"timeoutSeconds\",\n          type: \"range-slider\",\n          value: 10,\n          unit: \"秒\",\n          min: 3,\n          max: 60,\n          step: 1\n        },\n        {\n          title: \"題目數量\",\n          name: \"questionCount\",\n          type: \"range-slider\",\n          value: 20,\n          unit: \"題\",\n          min: 10,\n          max: 100,\n          step: 5\n        }\n      ]\n    };\n  }\n\n  getTitle = () => this.getSetting(\"title\");\n\n  getCount = () => this.count;\n\n  getCursor = () => this.cursor;\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange || 20;\n    let seeds = [];\n    for (let i = Math.max(2, answer - answerRange); i < answer + answerRange; i++) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i),\n        value: i\n      });\n    }\n\n    let randomCount = this.getSetting(\"choiceCount\") - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer),\n      value: answer\n    });\n    return choices;\n  }\n\n  setQuestions = (questions) => {\n    this.questions = questions || [];\n    this.count = this.questions.length;\n    this.cursor = 0;\n  }\n\n  nextQuestion = () => {\n    if (this.questions.length === 0) return null;\n    this.cursor++;\n    let index = RandomUtil.getRandomInt(this.questions.length);\n    let question = this.questions.splice(index, 1)[0];\n    question.choices = this.generateChoices(question);\n    return this.currentQuestion = question;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply.toString() === this.currentQuestion.answer.value.toString();\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    let options = this.getSetting(\"options\");\n\n    return options.map(x => {\n      if (x.name === \"sections\") x.selections = sections;\n      else if (x.name === \"timeoutSeconds\") x.value = 10;\n      else if (x.name === \"questionCount\") x.value = 20;\n      return x;\n    });\n  }\n\n  setSettings = (options) => {\n    options.forEach(option => {\n      this.settings[option.name] = option.selections || option.value;\n    });\n  }\n\n  getSetting = (name) => {\n    return this.settings[name];\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SchulteTableQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"title\"] = \"舒爾特方格\";\n    this.settings[\"route\"] = \"schulte-table\";\n    this.settings[\"component\"] = \"SchulteTable\";\n    this.settings[\"enableReview\"] = false;\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    return [{\n        title: \"請選擇\",\n        name: \"sections\",\n        type: \"single-choice\",\n        selections: sections\n      },\n      {\n        title: \"文字\",\n        name: \"character\",\n        type: \"single-choice\",\n        selections: [{\n            text: \"123\",\n            value: \"numeral\",\n            selected: true\n          },\n          {\n            text: \"ㄅㄆㄇ\",\n            value: \"ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦ\"\n          },\n          {\n            text: \"ABC\",\n            value: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          },\n          {\n            text: \"abc\",\n            value: \"abcdefghijklmnopqrstuvwxyz\"\n          },\n          {\n            text: \"あいう\",\n            value: \"あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\"\n          },\n          {\n            text: \"アイウ\",\n            value: \"アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン\"\n          }\n        ]\n      }\n    ];\n  }\n\n  getSections = () => {\n    let sections = [];\n    for (let i = 3; i <= 9; i++) {\n      sections.push({\n        text: `${i} x ${i} 格`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  initQuestions = () => {\n    let section = this.getSetting(\"sections\")[0].value;\n    let characters = this.characters = this.getCharacters(this.getSetting(\"character\")[0].value);\n    let squareRoot = Math.min(section, Math.ceil(Math.sqrt(characters.length)));\n    let count = Math.pow(squareRoot, 2);\n\n    let questions = [];\n    for (let i = 1; i <= count; i++) {\n      let char = characters[i - 1];\n      questions.push(char == null ? null : {\n        text: char,\n        value: i\n      });\n    }\n\n    this.setQuestions(RandomUtil.pickRandomItems(questions, count));\n  }\n\n  nextQuestion = () => {\n    this.cursor = 0;\n    return this.questions;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply === this.cursor;\n  }\n\n  nextCursor = () => {\n    if (this.cursor >= this.questions.length) return null;\n    let current = this.cursor++;\n    let character = this.characters[current];\n    return (character == null) ? null : {\n      text: character,\n      value: current\n    };\n  }\n\n  getCharacters = (str) => {\n    if (str === \"numeral\") return Array.from({\n      length: Math.pow(9, 2)\n    }, (x, i) => i + 1);\n    return str.split(\"\");\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class AdditionQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"addition\";\n    this.settings[\"title\"] = \"加法練習\";\n  }\n\n  getSections = () => {\n    return [{\n        text: \"10 以內加法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10, \n        maxCount: 45\n      },\n      {\n        text: \"20 以內加法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數加法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數加法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數加法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9999,\n        answerRange: 50\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\") || this.getSections();\n    let questionCount = this.getSetting(\"questionCount\");\n    let questionCountOfSection = Math.ceil(questionCount / sections.length);\n    let questions = [];\n    sections.forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < Math.min(questionCountOfSection, section.maxCount || questionCount)) {\n        let summation = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let x = RandomUtil.getRandomIntRange(section.minimum, summation - section.minimum);\n        let y = summation - x;\n        let key = `${x} + ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    questions = RandomUtil.pickRandomItems(questions, Math.min(questionCount, questions.length));\n    for (let i = 0; questions.length < questionCount; i++) {\n      if (i >= questions.length) i = 0;\n      questions.push(questions[i]);\n    }\n    this.setQuestions(questions);\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SubtractionQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"title\"] = \"減法練習\";\n    this.settings[\"route\"] = \"subtraction\";\n  }\n\n  getSections = () => {\n    return [{\n        text: \"10 以內減法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10,\n        maxCount: 45\n      },\n      {\n        text: \"20 以內減法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數減法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數減法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數減法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9909,\n        answerRange: 50\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\") || this.getSections();\n    let questionCount = this.getSetting(\"questionCount\");\n    let questionCountOfSection = Math.ceil(questionCount / sections.length);\n    let questions = [];\n    sections.forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < Math.min(questionCountOfSection, section.maxCount || questionCount)) {\n        let x = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let y = RandomUtil.getRandomIntRange(section.minimum, x);\n        let summation = x - y;\n        let key = `${x} - ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    questions = RandomUtil.pickRandomItems(questions, Math.min(questionCount, questions.length));\n    for (let i = 0; questions.length < questionCount; i++) {\n      if (i >= questions.length) i = 0;\n      questions.push(questions[i]);\n    }\n    this.setQuestions(questions);\n  }\n}","import QuestionBankBase from \"./base.js\";\n\nexport default class MultiplicationQuestionBank extends QuestionBankBase {\n\n  constructor(level) {\n    super();\n    switch (level || 1) {\n      case 2:\n        this.settings[\"multiplier\"] = 11;\n        this.settings[\"multiplicand\"] = 19;\n        this.settings[\"title\"] = \"19 x 19 乘法練習\";\n        this.settings[\"route\"] = \"multiplication-9x9\";\n        break;\n      default:\n        this.settings[\"multiplier\"] = 2;\n        this.settings[\"multiplicand\"] = 9;\n        this.settings[\"title\"] = \"9 x 9 乘法練習\";\n        this.settings[\"route\"] = \"multiplication-19x19\";\n        break;\n    }\n    this.settings[\"options\"] = this.settings[\"options\"].filter(x => x.name !== \"questionCount\");\n  }\n\n  getSections = () => {\n    let sections = [];\n    let multiplier = this.getSetting(\"multiplier\");\n    let multiplicand = this.getSetting(\"multiplicand\");\n    for (let i = multiplier; i <= multiplicand; i++) {\n      sections.push({\n        text: `${i} x ${multiplicand}`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\");\n    let multiplicand = this.getSetting(\"multiplicand\");\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      for (let i = 2; i <= multiplicand; i++) {\n        questions.push({\n          description: `${section.value} x ${i}`,\n          answer: {\n            text: this.convertText(section.value * i),\n            value: section.value * i\n          },\n        });\n      }\n    });\n    this.setQuestions(questions);\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.disableSecondhand = nextProps.disableSecondhand;\n    this.drawClock(nextProps.hhmmss);\n  }\n\n  componentDidMount() {\n    this.disableSecondhand = this.props.disableSecondhand;\n    this.drawClock(this.props.hhmmss);\n  }\n\n  drawClock = (hhmmss) => {\n    let canvas = this.canvas.current;\n    canvas.height = canvas.width;\n    let context = canvas.getContext(\"2d\");\n    let radius = canvas.height / 2;\n    context.translate(radius, radius);\n    radius = radius * 0.90;\n    this.context = context;\n    this.radius = radius;\n    let arr = (hhmmss || \"00:00:00\").split(\":\");\n    let hour = arr[0] || \"0\";\n    let minute = arr[1] || \"0\";\n    let second = arr[2] || \"0\";\n\n    this.drawFace();\n    this.drawNumbers();\n    this.drawTime(hour, minute, second);\n  }\n\n  drawFace = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n\n    // Base Plate\n    context.arc(0, 0, radius, 0, 2 * Math.PI);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    // Outside frame\n    // let grad = context.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n    // grad.addColorStop(0, \"red\");\n    // grad.addColorStop(0.5, \"yellow\");\n    // grad.addColorStop(1, \"green\");\n    // context.strokeStyle = grad;\n    // context.lineWidth = radius * 0.1;\n    // context.stroke();\n  }\n\n  drawNumbers = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n    context.fillStyle = \"black\";\n    context.font = `bold ${radius * 0.2}px arial`;\n    context.textBaseline = \"middle\";\n    context.textAlign = \"center\";\n    for (let num = 1; num < 13; num++) {\n      let ang = num * Math.PI / 6;\n      context.rotate(ang);\n      context.translate(0, -radius * 0.85);\n      context.rotate(-ang);\n      context.fillText(num.toString(), 0, 0);\n      context.rotate(ang);\n      context.translate(0, radius * 0.85);\n      context.rotate(-ang);\n    }\n  }\n\n  drawTime = (hour, minute, second) => {\n    let radius = this.radius;\n\n    // Hour\n    hour = hour % 12;\n    hour = (hour * Math.PI / 6) +\n      (minute * Math.PI / (6 * 60)) +\n      (second * Math.PI / (360 * 60));\n    this.drawHand(hour, radius * 0.4, radius * 0.07);\n\n    // Minute\n    minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\n    this.drawHand(minute, radius * 0.7, radius * 0.05);\n\n    // Second\n    if (this.disableSecondhand === \"true\") return;\n    second = (second * Math.PI / 30);\n    this.drawHand(second, radius * 0.6, radius * 0.02, \"red\");\n  }\n\n  drawHand = (pos, length, width, style) => {\n    let context = this.context;\n    style = style || \"black\"\n\n    // Center of Clock\n    context.beginPath();\n    context.arc(0, 0, length * width * 0.015, 0, 2 * Math.PI);\n    context.fillStyle = style;\n    context.fill();\n\n    // Hand of Clock\n    context.beginPath();\n    context.strokeStyle = style;\n    context.lineWidth = width;\n    context.lineCap = \"round\";\n    context.moveTo(0, 0);\n    context.rotate(pos);\n    context.lineTo(0, -length);\n    context.stroke();\n    context.rotate(-pos);\n  }\n\n  render() {\n    return (\n      <canvas className=\"clock\" ref={this.canvas} width={this.props.width || 200} />\n    );\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\nimport Clock from \"../../components/clock.jsx\";\n\nexport default class ClockQuestionBank extends QuestionBankBase {\n  secondsInDay = 24 * 60 * 60;\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"clock\";\n    this.settings[\"title\"] = \"時鐘練習\";\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    return [{\n        title: \"請選擇\",\n        name: \"sections\",\n        type: \"single-choice\",\n        selections: sections\n      },\n      {\n        title: \"答題限時\",\n        name: \"timeoutSeconds\",\n        type: \"range-slider\",\n        value: 10,\n        unit: \"秒\",\n        min: 3,\n        max: 60,\n        step: 1\n      },\n      {\n        title: \"題目數量\",\n        name: \"questionCount\",\n        type: \"range-slider\",\n        value: 20,\n        unit: \"題\",\n        min: 10,\n        max: 100,\n        step: 5\n      }\n    ];\n  }\n\n  getSections = () => {\n    return [{\n        text: \"整點鐘\",\n        intervalSeconds: 60 * 60,\n        answerRange: 10,\n        maxCount: 12\n      },\n      {\n        text: \"半點鐘\",\n        intervalSeconds: 30 * 60,\n        answerRange: 10,\n        maxCount: 24\n      },\n      {\n        text: \"5分鐘\",\n        intervalSeconds: 5 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"1分鐘\",\n        intervalSeconds: 1 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"時分秒\",\n        intervalSeconds: 5,\n        answerRange: 120\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\") || this.getSections();\n    let questionCount = this.getSetting(\"questionCount\");\n    let questionCountOfSection = Math.ceil(questionCount / sections.length);\n    let questions = [];\n    sections.forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < Math.min(questionCountOfSection, section.maxCount || questionCount)) {\n        let disableSecondhand = section.intervalSeconds !== 5;\n        let random = RandomUtil.getRandomInt(this.secondsInDay / 2);\n        random = random - random % section.intervalSeconds;\n        let key = this.convertText(random, disableSecondhand);\n        hashMap.set(key, {\n          description: <Clock hhmmss={key} disableSecondhand={disableSecondhand.toString()} />,\n          answer: {\n            text: key,\n            value: random\n          },\n          answerRange: section.answerRange,\n          intervalSeconds: section.intervalSeconds,\n          disableSecondhand: disableSecondhand\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    questions = RandomUtil.pickRandomItems(questions, Math.min(questionCount, questions.length));\n    for (let i = 0; questions.length < questionCount; i++) {\n      if (i >= questions.length) i = 0;\n      questions.push(questions[i]);\n    }\n    this.setQuestions(questions);\n  }\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange * question.intervalSeconds;\n    let intervalSeconds = question.intervalSeconds;\n    let seeds = [];\n    for (let i = Math.max(0, answer - answerRange); i < Math.min(answer + answerRange, this.secondsInDay / 2); i += intervalSeconds) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i, question.disableSecondhand),\n        value: i\n      });\n    }\n\n    let randomCount = this.getSetting(\"choiceCount\") - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer, question.disableSecondhand),\n      value: answer\n    });\n    return choices;\n  }\n\n  convertText = (value, disableSeconds) => {\n    let hour = Math.floor(value / (60 * 60));\n    let minute = Math.floor(value % (60 * 60) / 60);\n    let second = value % 60;\n\n    hour = hour === 0 ? 12 : hour;\n    let result = `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`;\n    if (!disableSeconds) result += `:${second.toString().padStart(2, \"0\")}`;\n\n    return result;\n  }\n}","import QuizPage from \"./pages/quiz-page.jsx\";\n\nimport SchulteTableQuestionBank from \"./libs/question-bank/schulte-table.js\";\nimport AdditionQuestionBank from \"./libs/question-bank/addition.js\";\nimport SubtractionQuestionBank from \"./libs/question-bank/subtraction.js\";\nimport MultiplicationQuestionBank from \"./libs/question-bank/multiplication.js\";\nimport ClockQuestionBank from \"./libs/question-bank/clock.js\";\n\nexport const AppRoutes = [{\n    path: \"/schulte-table\",\n    title: \"舒爾特方格\",\n    component: <QuizPage questionBank={new SchulteTableQuestionBank()}/>\n},\n{\n    path: \"/addition\",\n    title: \"加法練習\",\n    component: <QuizPage questionBank={new AdditionQuestionBank()}/>\n},\n{\n    path: \"/subtraction\",\n    title: \"減法練習\",\n    component: <QuizPage questionBank={new SubtractionQuestionBank()}/>\n},\n{\n    path: \"/multiplication-9x9\",\n    title: \"9 x 9 乘法練習\",\n    component: <QuizPage questionBank={new MultiplicationQuestionBank()}/>\n},\n{\n    path: \"/multiplication-19x19\",\n    title: \"19 x 19 乘法練習\",\n    component: <QuizPage questionBank={new MultiplicationQuestionBank(2)}/>\n},\n{\n    path: \"/clock\",\n    title: \"時鐘練習\",\n    component: <QuizPage questionBank={new ClockQuestionBank()}/>\n}];","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Config } from \"../config.js\";\nimport { AppRoutes } from \"../app-routes.js\";\n\nexport default class MenuPage extends Component {\n  componentDidMount() {\n    document.title = Config.AppName;\n  }\n\n  render() {\n    return (\n      <nav className=\"menu\">\n        <h1>{Config.AppName}</h1>\n        <ul>\n          {AppRoutes.map((route, i) =>\n            <li key={i}>\n              <Link className=\"btn green\" to={route.path}>{route.title}</Link>\n            </li>)}\n        </ul>\n      </nav>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { AppRoutes } from \"./app-routes.js\";\nimport MenuPage from \"./pages/menu-page.jsx\";\nimport { withNamespaces } from \"react-i18next\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Switch>\n            {AppRoutes.map((route, i) =>\n              <Route key={i} path={route.path} component={() => route.component} />\n            )}\n            <Route exact component={MenuPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withNamespaces()(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport './i18n';\nimport App from \"./app.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["libs/utils/timer.js","components/schulte-table.jsx","components/countdown.jsx","components/numeric-keypad.jsx","components/quiz-attempt.jsx","components/quiz-result.jsx","components/quiz-section-selector.jsx","components/quiz.jsx","libs/utils/random.js","libs/question-bank/schulte-table.js","libs/question-bank/base.js","libs/question-bank/addition.js","libs/question-bank/subtraction.js","libs/question-bank/multiplication.js","components/clock.jsx","libs/question-bank/clock.js","app.jsx","index.js"],"names":["Timer","callback","start","intervalId","setInterval","durationSeconds","intervalSeconds","stop","clearInterval","restart","getDuration","this","SchulteTable","props","updateTime","seconds","setState","time","toFixed","checkAnswer","reply","answerTimer","clearTimeout","effectId","sytle","cursor","state","correct","questionBank","logAnswer","nextCursor","timer","onFinish","results","clicked","num","setTimeout","squareRoot","Math","sqrt","numbers","length","result","question","description","answer","text","toString","duration","push","nextQuestion","className","map","onClick","Component","Countdown","reset","pause","resume","countdown","maximum","onChanged","timeout","min","getStatus","rate","round","parseFloat","max","value","NumericKeypad","input","onBack","clear","substring","onConfirm","i","QuizAttempt","countdownSeconds","choices","splice","current","numericKeypad","convertText","disableSecondhand","onCountdownChanged","renderSwitch","answerMethod","ref","parseInt","choice","method","React","createRef","QuizResult","incorrect","forEach","avgDuration","score","floor","onClose","style","width","onReview","QuizSectionSelector","onStart","selected","sections","filter","x","isSelected","onSelected","event","section","target","checked","isSingleSelection","isSelectedAll","toggleAll","onChangeAnswerMethod","getSections","name","getName","getComponentName","methods","getAnswerMethods","type","onChange","Quiz","option","questions","generateQuestions","setQuestions","componentName","showResult","isShowResult","incorrectQuestions","concat","quizAttempt","RandomUtil","pickRandomItems","arr","count","items","index","getRandomInt","item","getRandomIntRange","random","SchulteTableQuestionBank","pow","QuestionBankBase","selectionCount","generateChoices","answerRange","seeds","randomCount","currentQuestion","AdditionQuestionBank","questionCount","minimum","minSummation","maxSummation","hashMap","Map","size","summation","y","key","set","SubtractionQuestionBank","MultiplicationQuestionBank","level","multiplier","multiplicand","Clock","drawClock","hhmmss","canvas","height","context","getContext","radius","translate","split","hour","minute","second","drawFace","drawNumbers","drawTime","beginPath","arc","PI","fillStyle","fill","font","textBaseline","textAlign","ang","rotate","fillText","drawHand","pos","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","nextProps","ClockQuestionBank","secondsInDay","disableSeconds","padStart","App","isStart","questionBanks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ded70526.chunk.js","sourcesContent":["export default class Timer {\n  constructor(callback) {\n    this.intervalSeconds = 0.1;\n    this.durationSeconds = 0;\n    this.callback = callback;\n  }\n\n  start = () => {\n    this.intervalId = setInterval(() => {\n      this.durationSeconds += this.intervalSeconds;\n      if (this.callback) this.callback(this.durationSeconds);\n    }, this.intervalSeconds * 1000);\n  }\n\n  stop = () => {\n    if (this.intervalId) clearInterval(this.intervalId);\n  }\n\n  restart = () => {\n    this.stop();\n    this.durationSeconds = 0;\n    this.start();\n  }\n\n  getDuration = () => {\n    return this.durationSeconds;\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class SchulteTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n    this.timer = new Timer(this.updateTime);\n    this.answerTimer = new Timer();\n\n    this.state = {\n      numbers: this.questionBank.nextQuestion(),\n      cursor: this.questionBank.nextCursor(),\n      clicked: {},\n      time: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timer.start();\n    this.answerTimer.start();\n  }\n\n  componentWillUnmount() {\n    this.timer.stop();\n    this.answerTimer.stop();\n  }\n\n  updateTime = (seconds) => {\n    this.setState({ time: `${seconds.toFixed(1)}s` });\n  }\n\n  checkAnswer = (reply) => {\n    this.answerTimer.stop();\n    clearTimeout(this.effectId);\n    let sytle = \"incorrect\";\n    let cursor = this.state.cursor;\n    let correct = this.questionBank.checkAnswer(reply);\n    this.logAnswer(reply);\n\n    if (correct) {\n      sytle = \"correct\";\n      cursor = this.questionBank.nextCursor();\n      if (cursor === null) {\n        this.timer.stop();\n        this.setState({ time: null });\n        this.props.onFinish(this.results);\n        this.results = [];\n        return;\n      }\n    }\n\n    this.setState({\n      clicked: {\n        num: reply,\n        sytle: sytle\n      },\n      cursor: cursor\n    });\n    this.effectId = setTimeout(() => {\n      this.setState({ clicked: {} });\n    }, 500);\n    this.answerTimer.restart();\n  }\n\n  logAnswer = (reply) => {\n    let squareRoot = Math.sqrt(this.state.numbers.length);\n    let result = {\n      question: {\n        description: `${squareRoot} x ${squareRoot} 格`,\n        answer: {\n          text: `順序 ${this.state.cursor}`\n        }\n      },\n      reply: reply.toString(),\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.answerTimer.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div>\n        <div className=\"schulte-table\">\n          <div className=\"cursor\">下一個：<b>{this.state.cursor}</b></div>\n          <div className=\"time\">{this.state.time}</div>\n          <div className={`numbers size-${this.state.numbers.length}`}>\n            {this.state.numbers.map((num) =>\n              <div key={num}\n                className={`cell ${(clicked.num === num ? clicked.sytle : \"\")}`}\n                onClick={() => this.checkAnswer(num)}><span>{num}</span></div>\n            )}\n          </div>\n        </div>\n      </div >\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class Countdown extends Component {\n\n  constructor(props) {\n    super(props);\n    this.maximum = parseFloat(props.seconds || 10);\n    this.timer = new Timer(this.countdown);\n    this.state = { time: this.maximum };\n  }\n\n  reset = () => {\n    this.timer.restart();\n  }\n\n  pause = () => {\n    this.timer.stop();\n  }\n\n  resume = () => {\n    this.timer.start();\n  }\n\n  countdown = () => {\n    this.setState({ time: this.maximum - this.timer.getDuration() });\n    this.props.onChanged(this.state.time);\n    if (this.state.time > 0) return;\n    this.timeout();\n  }\n\n  timeout = () => {\n    this.timer.stop();\n    this.props.timeout();\n  }\n\n  getDuration = () => {\n    return Math.min(this.maximum, this.timer.getDuration());\n  }\n\n  getStatus = () => {\n    let rate = Math.round(this.state.time / this.maximum * 100);\n    if (rate < 20) return \"danger\";\n    else if (rate < 50) return \"warning\";\n    return \"\";\n  }\n\n  render() {\n    return (\n      <progress className={this.getStatus()} max={this.maximum} value={this.state.time.toFixed(1)}></progress>\n    );\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\n\nexport default class NumericKeypad extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicked: {}\n    };\n\n    this.numbers = [];\n    for (let i = 1; i <= 9; i++) {\n      this.numbers.push(i);\n    }\n    this.clear();\n  }\n\n  onClick = (num) => {\n    this.input += `${num}`;\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onBack = () => {\n    if (this.input.length <= 1)\n      this.clear();\n    else\n      this.input = this.input.substring(0, this.input.length - 1);\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onConfirm = () => {\n    if (this.input === \"\") return;\n    this.props.onConfirm(this.input);\n    this.clear();\n  }\n\n  clear = () => {\n    this.input = \"\";\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div className=\"numeric-keypad\">\n        <div className=\"numbers\">\n          {this.numbers.map(num =>\n            <div key={num}\n              className={`cell ${(clicked.num === num ? clicked.sytle : \"\")}`}\n              onClick={() => this.onClick(num)}><span>{num}</span></div>\n          )}\n          <div className=\"cell\" onClick={() => this.onBack()}><span className=\"icon-backspace\"></span></div>\n          <div className={`cell ${(clicked.num === 0 ? clicked.sytle : \"\")}`}\n            onClick={() => this.onClick(0)}><span>0</span></div>\n          <div className=\"cell\" onClick={() => this.onConfirm()}><span className=\"icon-check\"></span></div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport Countdown from \"./countdown.jsx\";\nimport NumericKeypad from \"./numeric-keypad.jsx\";\n\nexport default class QuizAttempt extends Component {\n  countdownSeconds = 10;\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      reply: \"\",\n      answerMethod: this.props.method\n    };\n    this.countdown = React.createRef();\n    this.numericKeypad = React.createRef();\n  }\n\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  componentWillUnmount() {\n    this.countdown.current.pause();\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      correct: null\n    });\n\n    let question = this.questionBank.nextQuestion();\n    if (question === null) {\n      this.props.onFinish(this.results);\n      this.results = [];\n      return;\n    }\n\n    this.state.choices.splice(0, this.state.choices.length);\n    question.reply = \"\";\n    this.setState(question);\n    this.countdown.current.reset();\n    if (this.numericKeypad.current)\n      this.numericKeypad.current.clear();\n  }\n\n  checkAnswer = (reply) => {\n    reply = reply || \"\";\n    this.countdown.current.pause();\n    let correct = this.questionBank.checkAnswer(reply);\n    this.logAnswer(reply);\n\n    this.setState({\n      correct: correct,\n      reply: reply\n    });\n    if (correct) this.nextQuestion();\n  }\n\n  logAnswer = (reply) => {\n    let result = {\n      question: this.state,\n      reply: this.questionBank.convertText(reply, this.state.disableSecondhand),\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.countdown.current.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  onCountdownChanged = (value) => {\n    this.setState({ countdown: value });\n  }\n\n  renderSwitch = () => {\n    switch (this.state.answerMethod) {\n      case \"filling\":\n        return <NumericKeypad ref={this.numericKeypad}\n          onChanged={value => this.setState({ reply: value })}\n          onConfirm={value => this.checkAnswer(parseInt(value))} />\n      default:\n        return <ul className=\"choices\">\n          {this.state.choices.map((choice, i) =>\n            <li key={i} onClick={() => this.checkAnswer(choice.value)} >{choice.text}</li>\n          )}\n        </ul>\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.state.answerMethod}>\n        <div className={`question ${this.state.countdown < 3 && this.state.correct !== false && \"blink\"}`}>\n          {this.state.description} {this.state.answerMethod === \"filling\" && <span>{`= ${this.state.reply}`}</span>}\n        </div>\n        {this.state.correct === false\n          ? <div>\n            <p>{this.state.reply === \"\" ? \"時間到！\" : \"答錯了！\"} 答案是 {this.state.answer.text}</p>\n            <span className=\"btn large blue\" onClick={() => this.nextQuestion()}>下一題</span>\n          </div>\n          : this.renderSwitch()}\n        <Countdown ref={this.countdown}\n          seconds={this.countdownSeconds}\n          timeout={() => this.checkAnswer(this.state.reply)}\n          onChanged={value => this.onCountdownChanged(value)} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizResult extends Component {\n  constructor(props) {\n    super(props);\n\n    let correct = 0;\n    let incorrect = 0;\n    let timeout = 0;\n    let duration = 0;\n    let results = this.props.results || [];\n    results.forEach(result => {\n      if (result.correct) correct++;\n      else if (result.reply) incorrect++;\n      else timeout++;\n      duration += result.duration;\n    });\n    this.state = {\n      results: results,\n      correct: correct,\n      incorrect: incorrect,\n      timeout: timeout,\n      avgDuration: results.length && duration / results.length,\n      duration: duration,\n      score: results.length && Math.floor(correct / results.length * 100),\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={() => this.props.onClose()}>x</span>\n          <table>\n            <tbody>\n              <tr className=\"correct\"><td>答對次數：</td><td>{this.state.correct}</td></tr>\n              <tr className={this.state.incorrect > 0 ? \"incorrect\" : \"\"}><td>答錯次數：</td><td>{this.state.incorrect}</td></tr>\n              {this.state.timeout > 0 && <tr className=\"incorrect\"><td>逾時次數：</td><td>{this.state.timeout}</td></tr>}\n              <tr><td>平均耗時：</td><td>{this.state.avgDuration.toFixed(1)} 秒</td></tr>\n              <tr><td>全部耗時：</td><td>{this.state.duration.toFixed(1)} 秒</td></tr>\n            </tbody>\n          </table>\n          <hr />\n          {this.state.incorrect > 0 &&\n            <table>\n              <thead>\n                <tr>\n                  <th style={{ width: \"5%\" }}></th>\n                  <th>題目</th>\n                  <th style={{ width: \"20%\" }}>解答</th>\n                  <th style={{ width: \"20%\" }}>作答</th>\n                  <th style={{ width: \"25%\" }}>耗時(秒)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.results.map((result, i) => result.correct ||\n                  <tr key={i} className={result.correct ? \"correct\" : \"incorrect\"}>\n                    <td><b /></td>\n                    <td>{result.question.description}</td>\n                    <td>{result.question.answer.text}</td>\n                    <td>{result.reply === \"\" ? \"--\" : result.reply}</td>\n                    <td>{result.duration.toFixed(1)}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>}\n          <div className=\"modal-footer\">\n            <span className=\"btn\" onClick={() => this.props.onClose()}>關閉</span>\n            {this.state.incorrect >= 3 && <span className=\"btn blue\" onClick={() => this.props.onReview()}>複習</span>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizSectionSelector extends Component {\n  constructor(props) {\n    super(props);\n    let questionBank = this.props.questionBank;\n    let sections = questionBank.getSections();\n    let name = questionBank.getName();\n    this.isSingleSelection = questionBank.getComponentName() === \"SchulteTable\";\n    let methods = questionBank.getAnswerMethods();\n    this.state = {\n      name: name,\n      isSelected: sections[0].isSelected = true,\n      sections: sections,\n      isSelectedAll: false,\n      methods: methods,\n      answerMethod: methods.length > 1 ? methods[0].value : \"\"\n    }\n  }\n\n  onStart = () => {\n    let selected = this.state.sections.filter(x => x.isSelected);\n    if (selected.length > 0)\n      this.props.onStart({\n        sections: selected,\n        answerMethod: this.state.answerMethod\n      });\n  }\n\n  onSelected = (event) => {\n    let sections = this.state.sections;\n    sections.forEach(section => {\n      if (section.text === event.target.value) {\n        section.isSelected = event.target.checked;\n      } else if (this.isSingleSelection) {\n        section.isSelected = false;\n      }\n    });\n    this.setState({\n      isSelected: sections.filter(x => x.isSelected).length > 0,\n      sections: sections,\n      isSelectedAll: sections.filter(x => x.isSelected !== true).length === 0\n    });\n  }\n\n  toggleAll = () => {\n    let sections = this.state.sections;\n    let isSelectedAll = !this.state.isSelectedAll;\n    sections.forEach(section => {\n      section.isSelected = isSelectedAll;\n    })\n    this.setState({\n      isSelected: sections.filter(x => x.isSelected).length > 0,\n      sections: sections,\n      isSelectedAll: isSelectedAll\n    });\n  }\n\n  onChangeAnswerMethod = (event) => {\n    this.setState({\n      answerMethod: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.name}</h2>\n        <section>\n          <h3>請選擇</h3>\n          <ul className=\"sections\">\n            {this.state.sections.map((section, i) =>\n              <li key={i}>\n                <label>\n                  <input type=\"checkbox\"\n                    value={section.text}\n                    onChange={this.onSelected}\n                    checked={section.isSelected || false} />\n                  <span>{section.text}</span>\n                </label>\n              </li>\n            )}\n            {this.isSingleSelection || <li>\n              <label>\n                <input type=\"checkbox\" onChange={this.toggleAll} checked={this.state.isSelectedAll} />\n                <span>全選</span>\n              </label>\n            </li>}\n          </ul>\n        </section>\n        <section>\n          {this.state.methods.length > 1 &&\n            <div>\n              <h3>答題方式</h3>\n              <ul className=\"sections\">\n                {this.state.methods.map((method, i) =>\n                  <li key={i}>\n                    <label>\n                      <input type=\"checkbox\"\n                        value={method.value}\n                        onChange={this.onChangeAnswerMethod}\n                        checked={this.state.answerMethod === method.value} />\n                      <span>{method.text}</span>\n                    </label>\n                  </li>)}\n              </ul>\n            </div>}\n        </section>\n        <nav>\n          <span className={`btn large ${this.state.isSelected ? \"green\" : \"disable\"}`} onClick={() => this.onStart()}>開始</span>\n        </nav>\n      </div>\n    );\n  }\n}","import \"../styles/quiz.css\";\nimport React, { Component } from \"react\";\nimport SchulteTable from \"./schulte-table.jsx\";\nimport QuizAttempt from \"./quiz-attempt.jsx\";\nimport QuizResult from \"./quiz-result.jsx\";\nimport QuizSectionSelector from \"./quiz-section-selector.jsx\";\n\nexport default class Quiz extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      results: [],\n      method: \"choice\"\n    };\n    this.quizAttempt = React.createRef();\n  }\n\n  onStart = (option) => {\n    let questionBank = this.props.questionBank;\n    let questions = questionBank.generateQuestions(option.sections);\n    questionBank.setQuestions(questions);\n    this.setState({\n      componentName: questionBank.getComponentName(),\n      method: option.answerMethod\n    });\n  }\n\n  showResult = (results) => {\n    this.state.results.splice(0, this.state.results.length);\n    this.setState({\n      isShowResult: true,\n      results: results\n    });\n  }\n\n  onReview = () => {\n    let questions = [];\n    let incorrectQuestions = this.state.results\n      .filter(x => !x.correct)\n      .map(x => x.question);\n    for (let i = 0; i < 3; i++)\n      questions = questions.concat(incorrectQuestions);\n    this.props.questionBank.setQuestions(questions);\n\n    this.quizAttempt.current.nextQuestion();\n    this.setState({ isShowResult: false });\n  }\n\n  onClose = () => {\n    this.props.onClose();\n  }\n\n  renderSwitch = (componentName) => {\n    switch (componentName) {\n      case \"QuizAttempt\":\n        return <QuizAttempt ref={this.quizAttempt}\n          questionBank={this.props.questionBank}\n          method={this.state.method}\n          onFinish={results => this.showResult(results)} />;\n      case \"SchulteTable\":\n        return <SchulteTable\n          questionBank={this.props.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      default:\n        return <QuizSectionSelector\n          questionBank={this.props.questionBank}\n          onStart={option => this.onStart(option)} />;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          {this.state.isShowResult || <span className=\"close\" onClick={() => this.props.onClose()}>x</span>}\n        </div>\n        {this.renderSwitch(this.state.componentName)}\n        {this.state.isShowResult &&\n          <QuizResult\n            results={this.state.results}\n            onReview={() => this.onReview()}\n            onClose={() => this.onClose()} />}\n      </div>\n    );\n  }\n}","export default class RandomUtil {\n\n    static pickRandomItems = (arr, count) => {\n        let items = []\n        for (let i = 0; i < count; i++) {\n            let index = this.getRandomInt(arr.length);\n            let item = arr.splice(index, 1)[0];\n            items.push(item);\n        }\n        return items;\n    }\n\n    static getRandomInt = (max) => {\n        return this.getRandomIntRange(0, max);\n    }\n\n    static getRandomIntRange = (min, max) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}","import RandomUtil from \"../utils/random.js\";\n\nexport default class SchulteTableQuestionBank {\n\n  getName = () => {\n    return \"舒爾特方格\";\n  }\n\n  getSections = () => {\n    let sections = [];\n    for (let i = 3; i <= 9; i++) {\n      sections.push({\n        text: `${i} x ${i} 格`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    let count = Math.pow(sections[0].value, 2);\n    for (let i = 1; i <= count; i++)\n      questions.push(i);\n    return RandomUtil.pickRandomItems(questions, count);\n  }\n\n  setQuestions = (questions) => {\n    this.questions = questions || [];\n  }\n\n  nextQuestion = () => {\n    this.cursor = 0;\n    return this.questions;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply === this.cursor;\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n\n  getComponentName = () => {\n    return \"SchulteTable\";\n  }\n\n  nextCursor = () => {\n    if (this.cursor >= this.questions.length) return null;\n    return ++this.cursor;\n  }\n\n  getAnswerMethods = () => {\n    return [];\n  }\n}","import RandomUtil from \"../utils/random.js\";\n\nexport default class QuestionBankBase {\n  selectionCount = 6;\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange || 20;\n    let seeds = [];\n    for (let i = Math.max(2, answer - answerRange); i < answer + answerRange; i++) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i),\n        value: i\n      });\n    }\n\n    let randomCount = this.selectionCount - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer),\n      value: answer\n    });\n    return choices;\n  }\n\n  setQuestions = (questions) => {\n    this.questions = questions || [];\n  }\n\n  nextQuestion = () => {\n    if (this.questions.length === 0) return null;\n    let index = RandomUtil.getRandomInt(this.questions.length);\n    let question = this.questions.splice(index, 1)[0];\n    question.choices = this.generateChoices(question);\n    return this.currentQuestion = question;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply.toString() === this.currentQuestion.answer.value.toString();\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n\n  getComponentName = () => {\n    return \"QuizAttempt\";\n  }\n\n  getAnswerMethods = () => {\n    return [{\n        text: \"選擇題\",\n        value: \"choice\"\n      },\n      {\n        text: \"填充題\",\n        value: \"filling\"\n      }\n    ];\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class AdditionQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n  \n  getName = () => {\n    return \"加法練習\";\n  }\n\n  getSections = () => {\n    return [{\n        text: \"10 以內加法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內加法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數加法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數加法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數加法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9999,\n        answerRange: 50\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let summation = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let x = RandomUtil.getRandomIntRange(section.minimum, summation - section.minimum);\n        let y = summation - x;\n        let key = `${x} + ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SubtractionQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n  \n  getName = () => {\n    return \"減法練習\";\n  }\n\n  getSections = () => {\n    return [{\n        text: \"10 以內減法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內減法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數減法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數減法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數減法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9909,\n        answerRange: 50\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let x = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let y = RandomUtil.getRandomIntRange(section.minimum, x);\n        let summation = x - y;\n        let key = `${x} - ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n}","import QuestionBankBase from \"./base.js\";\n\nexport default class MultiplicationQuestionBank extends QuestionBankBase {\n\n  constructor(level) {\n    super();\n    switch (level || 1) {\n      case 2:\n        this.multiplier = 11;\n        this.multiplicand = 19;\n        this.name = \"19 x 19 乘法練習\";\n        break;\n      default:\n        this.multiplier = 2;\n        this.multiplicand = 9;\n        this.name = \"9 x 9 乘法練習\";\n        break;\n    }\n  }\n  \n  getName = () => {\n    return this.name;\n  }\n\n  getSections = () => {\n    let sections = [];\n    for (let i = this.multiplier; i <= this.multiplicand; i++) {\n      sections.push({\n        text: `${i} x ${this.multiplicand}`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      for (let i = 2; i <= this.multiplicand; i++) {\n        questions.push({\n          description: `${section.value} x ${i}`,\n          answer: {\n            text: this.convertText(section.value * i),\n            value: section.value * i\n          },\n        });\n      }\n    });\n    return questions;\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.disableSecondhand = nextProps.disableSecondhand;\n    this.drawClock(nextProps.hhmmss);\n  }\n\n  componentDidMount() {\n    this.disableSecondhand = this.props.disableSecondhand;\n    this.drawClock(this.props.hhmmss);\n  }\n\n  drawClock = (hhmmss) => {\n    let canvas = this.canvas.current;\n    canvas.height = canvas.width;\n    let context = canvas.getContext(\"2d\");\n    let radius = canvas.height / 2;\n    context.translate(radius, radius);\n    radius = radius * 0.90;\n    this.context = context;\n    this.radius = radius;\n    let arr = (hhmmss || \"00:00:00\").split(\":\");\n    let hour = arr[0] || \"0\";\n    let minute = arr[1] || \"0\";\n    let second = arr[2] || \"0\";\n\n    this.drawFace();\n    this.drawNumbers();\n    this.drawTime(hour, minute, second);\n  }\n\n  drawFace = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n\n    // Base Plate\n    context.arc(0, 0, radius, 0, 2 * Math.PI);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    // Outside frame\n    // let grad = context.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n    // grad.addColorStop(0, \"red\");\n    // grad.addColorStop(0.5, \"yellow\");\n    // grad.addColorStop(1, \"green\");\n    // context.strokeStyle = grad;\n    // context.lineWidth = radius * 0.1;\n    // context.stroke();\n  }\n\n  drawNumbers = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n    context.fillStyle = \"black\";\n    context.font = `bold ${radius * 0.2}px arial`;\n    context.textBaseline = \"middle\";\n    context.textAlign = \"center\";\n    for (let num = 1; num < 13; num++) {\n      let ang = num * Math.PI / 6;\n      context.rotate(ang);\n      context.translate(0, -radius * 0.85);\n      context.rotate(-ang);\n      context.fillText(num.toString(), 0, 0);\n      context.rotate(ang);\n      context.translate(0, radius * 0.85);\n      context.rotate(-ang);\n    }\n  }\n\n  drawTime = (hour, minute, second) => {\n    let radius = this.radius;\n\n    // Hour\n    hour = hour % 12;\n    hour = (hour * Math.PI / 6) +\n      (minute * Math.PI / (6 * 60)) +\n      (second * Math.PI / (360 * 60));\n    this.drawHand(hour, radius * 0.4, radius * 0.07);\n\n    // Minute\n    minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\n    this.drawHand(minute, radius * 0.7, radius * 0.05);\n\n    // Second\n    if (this.disableSecondhand === \"true\") return;\n    second = (second * Math.PI / 30);\n    this.drawHand(second, radius * 0.6, radius * 0.02, \"red\");\n  }\n\n  drawHand = (pos, length, width, style) => {\n    let context = this.context;\n    style = style || \"black\"\n\n    // Center of Clock\n    context.beginPath();\n    context.arc(0, 0, length * width * 0.015, 0, 2 * Math.PI);\n    context.fillStyle = style;\n    context.fill();\n\n    // Hand of Clock\n    context.beginPath();\n    context.strokeStyle = style;\n    context.lineWidth = width;\n    context.lineCap = \"round\";\n    context.moveTo(0, 0);\n    context.rotate(pos);\n    context.lineTo(0, -length);\n    context.stroke();\n    context.rotate(-pos);\n  }\n\n  render() {\n    return (\n      <canvas className=\"clock\" ref={this.canvas} width={this.props.width || 200} />\n    );\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\nimport Clock from \"../../components/clock.jsx\";\n\nexport default class ClockQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n  secondsInDay = 24 * 60 * 60;\n\n  getName = () => {\n    return \"時鐘練習\";\n  }\n\n  getSections = () => {\n    return [{\n        text: \"整點鐘\",\n        intervalSeconds: 60 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"半點鐘\",\n        intervalSeconds: 30 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"5分鐘\",\n        intervalSeconds: 5 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"1分鐘\",\n        intervalSeconds: 1 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"時分秒\",\n        intervalSeconds: 5,\n        answerRange: 120\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let disableSecondhand = section.intervalSeconds !== 5;\n        let random = RandomUtil.getRandomInt(this.secondsInDay / 2);\n        random = random - random % section.intervalSeconds;\n        let key = this.convertText(random, disableSecondhand);\n        hashMap.set(key, {\n          description: <Clock hhmmss={key} disableSecondhand={disableSecondhand.toString()} />,\n          answer: {\n            text: key,\n            value: random\n          },\n          answerRange: section.answerRange,\n          intervalSeconds: section.intervalSeconds,\n          disableSecondhand: disableSecondhand\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange * question.intervalSeconds;\n    let intervalSeconds = question.intervalSeconds;\n    let seeds = [];\n    for (let i = Math.max(0, answer - answerRange); i < Math.min(answer + answerRange, this.secondsInDay / 2); i += intervalSeconds) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i, question.disableSecondhand),\n        value: i\n      });\n    }\n\n    let randomCount = this.selectionCount - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer, question.disableSecondhand),\n      value: answer\n    });\n    return choices;\n  }\n\n  convertText = (value, disableSeconds) => {\n    let hour = Math.floor(value / (60 * 60)) + 1;\n    let minute = Math.floor(value % (60 * 60) / 60);\n    let second = value % 60;\n    let result = `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`;\n    if (!disableSeconds) result += `:${second.toString().padStart(2, \"0\")}`;\n\n    return result;\n  }\n\n  getAnswerMethods = () => {\n    return [{\n      text: \"選擇題\",\n      value: \"choice\"\n    }];\n  }\n}","import React, { Component } from \"react\";\nimport Quiz from \"./components/quiz.jsx\";\nimport SchulteTableQuestionBank from \"./libs/question-bank/schulte-table.js\";\nimport AdditionQuestionBank from \"./libs/question-bank/addition.js\";\nimport SubtractionQuestionBank from \"./libs/question-bank/subtraction.js\";\nimport MultiplicationQuestionBank from \"./libs/question-bank/multiplication.js\";\nimport ClockQuestionBank from \"./libs/question-bank/clock.js\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isStart: false,\n      questionBanks: [\n        new SchulteTableQuestionBank(),\n        new AdditionQuestionBank(),\n        new SubtractionQuestionBank(),\n        new MultiplicationQuestionBank(),\n        new MultiplicationQuestionBank(2),\n        new ClockQuestionBank()\n      ]\n    };\n  }\n\n  start = (questionBank) => {\n    this.setState({\n      isStart: true,\n      questionBank: questionBank\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        { this.state.isStart\n          ? <Quiz questionBank={this.state.questionBank} onClose={() => this.setState({ isStart: false })} />\n          : <div>\n            <h1>數學練習小程式</h1>\n            <ul>\n              {this.state.questionBanks.map((questionBank, i) =>\n                <li key={i} className=\"btn green\" onClick={() => this.start(questionBank)}>\n                  {questionBank.getName()}\n                </li>)}\n            </ul>\n          </div>}\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport App from \"./app.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}
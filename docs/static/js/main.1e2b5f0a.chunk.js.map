{"version":3,"sources":["components/countdown.jsx","components/quiz-attempt.jsx","components/quiz-result.jsx","components/quiz-section-selector.jsx","components/quiz.jsx","libs/utils/random.js","libs/question-bank/base.js","libs/question-bank/addition.js","libs/question-bank/subtraction.js","libs/question-bank/multiplication.js","components/clock.jsx","libs/question-bank/clock.js","app.jsx","index.js"],"names":["Countdown","props","intervalSeconds","reset","pause","setState","timer","maximum","resume","intervalId","clearInterval","setInterval","countdown","state","onChanged","timeout","getDuration","Math","min","getStatus","rate","round","parseFloat","seconds","this","className","max","value","toFixed","React","Component","QuizAttempt","countdownSeconds","nextQuestion","correct","question","questionBank","onFinish","results","choices","splice","length","current","checkAnswer","reply","logAnswer","result","duration","push","onCountdownChanged","description","answer","createRef","text","onClick","map","choice","i","ref","QuizResult","incorrect","forEach","avgDuration","score","floor","onClose","style","width","fontSize","textAlign","rowSpan","onReview","QuizSectionSelector","onStart","selected","sections","filter","x","isSelected","onSelected","event","section","target","checked","isSelectedAll","toggleAll","getSections","type","onChange","Quiz","questions","generateQuestions","addQuestions","isStarted","showResult","isShowResult","quizAttempt","RandomUtil","pickRandomItems","arr","count","items","index","getRandomInt","item","getRandomIntRange","random","QuestionBankBase","selectionCount","generateChoices","answerRange","seeds","convertText","randomCount","concat","currentQuestion","toString","AdditionQuestionBank","questionCount","minimum","minSummation","maxSummation","hashMap","Map","size","summation","y","key","set","SubtractionQuestionBank","MultiplicationQuestionBank","level","multiplier","multiplicand","Clock","drawClock","hhmmss","canvas","height","context","getContext","radius","translate","split","hour","minute","second","drawFace","drawNumbers","drawTime","beginPath","arc","PI","fillStyle","fill","font","textBaseline","num","ang","rotate","fillText","drawHand","disableSecondhand","pos","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","nextProps","ClockQuestionBank","secondsInDay","disableSeconds","padStart","App","start","isStart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e2b5f0a.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default class Countdown extends React.Component {\n  intervalSeconds = 0.1;\n\n  constructor(props) {\n    super(props);\n    this.maximum = parseFloat(props.seconds || 10);\n    this.state = { timer: this.maximum };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  reset = () => {\n    this.pause();\n    this.setState({ timer: this.maximum });\n    this.resume();\n  }\n\n  pause = () => {\n    if (this.intervalId) clearInterval(this.intervalId);\n  }\n\n  resume = () => {\n    this.intervalId = setInterval(this.countdown, this.intervalSeconds * 1000);\n  }\n\n  countdown = () => {\n    this.setState(state => ({\n      timer: state.timer - this.intervalSeconds\n    }));\n    this.props.onChanged(this.state.timer);\n    if (this.state.timer > 0) return;\n    this.timeout();\n  }\n\n  timeout = () => {\n    this.props.timeout();\n  }\n\n  getDuration = () => {\n    return Math.min(this.maximum, this.maximum - this.state.timer);\n  }\n\n  getStatus = () => {\n    let rate = Math.round(this.state.timer / this.maximum * 100);\n    if(rate < 20) return \"danger\";\n    else if(rate < 50) return \"warning\";\n    return \"\";\n  }\n\n  render() {\n    return (\n      <progress className={this.getStatus()} max={this.maximum} value={this.state.timer.toFixed(1)}></progress>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Countdown from \"./countdown.jsx\";\n\nexport default class QuizAttempt extends Component {\n  countdownSeconds = 10;\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: []\n    };\n    this.countdown = React.createRef();\n  }\n\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      correct: null,\n      timeout: null\n    });\n\n    let question = this.questionBank.nextQuestion();\n    if (question === null) {\n      this.props.onFinish(this.results);\n      this.results = [];\n      return;\n    }\n\n    this.state.choices.splice(0, this.state.choices.length);\n    this.setState(question);\n    this.countdown.current.reset();\n  }\n\n  checkAnswer = (reply) => {\n    this.countdown.current.pause();\n    let correct = this.questionBank.checkAnswer(reply);\n    this.setState({\n      correct: correct,\n      timeout: reply == null\n    });\n    this.logAnswer(reply);\n\n    if (correct) this.nextQuestion();\n  }\n\n  logAnswer = (reply) => {\n    let result = {\n      question: this.state,\n      reply: reply,\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.countdown.current.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  onCountdownChanged = (value) => {\n    this.setState({ countdown: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={`question ${this.state.countdown < 3 && this.state.correct !== false && \"blink\"}`}>\n          {this.state.description} {this.state.correct === false && `= ${this.state.answer.text}`}\n        </div>\n        {this.state.correct === false\n          ? <p>{this.state.timeout ? \"時間到！\" : \"答錯了！\"}<span className=\"btn large blue\" onClick={() => this.nextQuestion()}>下一題</span></p>\n          : <ul className=\"choices\">\n            {this.state.choices.map((choice, i) =>\n              <li key={i} onClick={() => this.checkAnswer(choice)} >{choice.text}</li>\n            )}\n          </ul>}\n        <Countdown ref={this.countdown}\n          seconds={this.countdownSeconds}\n          timeout={() => this.checkAnswer()}\n          onChanged={value => this.onCountdownChanged(value)} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizResult extends Component {\n  constructor(props) {\n    super(props);\n\n    let correct = 0;\n    let incorrect = 0;\n    let timeout = 0;\n    let duration = 0;\n    let results = this.props.results || [];\n    results.forEach(result => {\n      if (result.correct) correct++;\n      else if (result.reply) incorrect++;\n      else timeout++;\n      duration += result.duration;\n    });\n    this.state = {\n      results: results,\n      correct: correct,\n      incorrect: incorrect,\n      timeout: timeout,\n      avgDuration: results.length && duration / results.length,\n      duration: duration,\n      score: results.length && Math.floor(correct / results.length * 100),\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={() => this.props.onClose()}>x</span>\n          <table>\n            <tbody>\n              <tr>\n                <td style={{ width: \"40%\", fontSize: \"calc(10px + 10vmin)\", textAlign: \"right\" }} rowSpan=\"5\">{this.state.score} 分</td>\n                <td style={{ width: \"calc(80px + 10vmin)\" }}>答對次數：</td><td>{this.state.correct}</td>\n              </tr>\n              <tr><td>答錯次數：</td><td>{this.state.incorrect}</td></tr>\n              <tr><td>逾時次數：</td><td>{this.state.timeout}</td></tr>\n              <tr><td>平均耗時：</td><td>{this.state.avgDuration.toFixed(1)} 秒</td></tr>\n              <tr><td>全部耗時：</td><td>{this.state.duration.toFixed(1)} 秒</td></tr>\n            </tbody>\n          </table>\n          <hr />\n          <table>\n            <thead>\n              <tr>\n                <th style={{ width: \"5%\" }}></th>\n                <th>題目</th>\n                <th style={{ width: \"20%\" }}>解答</th>\n                <th style={{ width: \"20%\" }}>作答</th>\n                <th style={{ width: \"25%\" }}>耗時(秒)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.results.map((result, i) => result.correct ||\n                <tr key={i} className={result.correct ? \"correct\" : \"incorrect\"}>\n                  <td><b /></td>\n                  <td>{result.question.description}</td>\n                  <td>{result.question.answer.text}</td>\n                  <td>{result.reply == null ? \"--\" : result.reply.text}</td>\n                  <td>{result.duration.toFixed(1)}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n          <span className=\"btn\" onClick={() => this.props.onClose()}>關閉</span>\n          {this.state.incorrect >= 3 && <span className=\"btn blue\" onClick={() => this.props.onReview()}>複習</span>}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizSectionSelector extends Component {\n  constructor(props) {\n    super(props);\n    let sections = this.props.questionBank.getSections();\n    this.state = {\n      isSelected: sections[0].isSelected = true,\n      sections: sections,\n      isSelectedAll: false\n    }\n  }\n\n  onStart = () => {\n    let selected = this.state.sections.filter(x => x.isSelected);\n    if (selected.length > 0)\n      this.props.onStart(selected);\n  }\n\n  onSelected = (event) => {\n    let sections = this.state.sections;\n    sections.forEach(section => {\n      if (section.text === event.target.value) {\n        section.isSelected = event.target.checked;\n      }\n    });\n    this.setState({\n      isSelected: sections.filter(x => x.isSelected).length > 0,\n      sections: sections,\n      isSelectedAll: sections.filter(x => x.isSelected !== true).length === 0\n    });\n  }\n\n  toggleAll = () => {\n    let sections = this.state.sections;\n    let isSelectedAll = !this.state.isSelectedAll;\n    sections.forEach(section => {\n      section.isSelected = isSelectedAll;\n    })\n    this.setState({\n      isSelected: sections.filter(x => x.isSelected).length > 0,\n      sections: sections,\n      isSelectedAll: isSelectedAll\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>請選擇</h1>\n        <ul className=\"sections\">\n          {this.state.sections.map((section, i) =>\n            <li key={i}>\n              <label>\n                <input type=\"checkbox\" onChange={this.onSelected} checked={section.isSelected || false} value={section.text} />\n                <span>{section.text}</span>\n              </label>\n            </li>\n          )}\n          {<li>\n            <label>\n              <input type=\"checkbox\" onChange={this.toggleAll} checked={this.state.isSelectedAll} />\n              <span>全選</span>\n            </label>\n          </li>}\n        </ul>\n        <span className={`btn large ${this.state.isSelected ? \"green\" : \"disable\"}`} onClick={() => this.onStart()}>開始</span>\n      </div>\n    );\n  }\n}","import \"../styles/quiz.css\";\nimport React, { Component } from \"react\";\nimport QuizAttempt from \"./quiz-attempt.jsx\";\nimport QuizResult from \"./quiz-result.jsx\";\nimport QuizSectionSelector from \"./quiz-section-selector.jsx\";\n\nexport default class Quiz extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      results: []\n    };\n    this.quizAttempt = React.createRef();\n  }\n\n  onStart = (sections) => {\n    let questions = this.props.questionBank.generateQuestions(sections);\n    this.props.questionBank.addQuestions(questions);\n    this.setState({ isStarted: true });\n  }\n\n  showResult = (results) => {\n    this.state.results.splice(0, this.state.results.length);\n    this.setState({\n      isShowResult: true,\n      results: results\n    });\n  }\n\n  onReview = () => {\n    let questions = this.state.results\n      .filter(x => !x.correct)\n      .map(x => x.question);\n    for (let i = 0; i < 3; i++)\n      this.props.questionBank.addQuestions(questions);\n\n    this.quizAttempt.current.nextQuestion();\n    this.setState({ isShowResult: false });\n  }\n\n  onClose = () => {\n    this.props.onClose();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          {this.state.isShowResult || <span className=\"close\" onClick={() => this.props.onClose()}>x</span>}\n        </div>\n        {this.state.isStarted\n          ? <QuizAttempt ref={this.quizAttempt}\n            questionBank={this.props.questionBank}\n            onFinish={results => this.showResult(results)}\n            onClose={() => this.onClose()} />\n          : <QuizSectionSelector\n            questionBank={this.props.questionBank}\n            onStart={sections => this.onStart(sections)} />}\n        {this.state.isShowResult &&\n          <QuizResult\n            results={this.state.results}\n            onReview={() => this.onReview()}\n            onClose={() => this.onClose()} />}\n      </div>\n    );\n  }\n}","export default class RandomUtil {\n\n    static pickRandomItems = (arr, count) => {\n        let items = []\n        for (let i = 0; i < count; i++) {\n            let index = this.getRandomInt(arr.length);\n            let item = arr.splice(index, 1)[0];\n            items.push(item);\n        }\n        return items;\n    }\n\n    static getRandomInt = (max) => {\n        return this.getRandomIntRange(0, max);\n    }\n\n    static getRandomIntRange = (min, max) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}","import RandomUtil from \"../utils/random.js\";\n\nexport default class QuestionBankBase {\n  selectionCount = 6;\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange || 20;\n    let seeds = [];\n    for (let i = Math.max(2, answer - answerRange); i < answer + answerRange; i++) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i),\n        value: i\n      });\n    }\n\n    let randomCount = this.selectionCount - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer),\n      value: answer\n    });\n    return choices;\n  }\n\n  addQuestions = (questions) => {\n    this.questions = this.questions || [];\n    this.questions = this.questions.concat(questions || []);\n  }\n\n  nextQuestion = () => {\n    if (this.questions.length === 0) return null;\n    let index = RandomUtil.getRandomInt(this.questions.length);\n    let question = this.questions.splice(index, 1)[0];\n    question.choices = this.generateChoices(question);\n    return this.currentQuestion = question;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply.value === this.currentQuestion.answer.value;\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class AdditionQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n\n  getSections = () => {\n    return [{\n        text: \"10 以內加法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內加法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數加法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數加法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數加法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9999,\n        answerRange: 50\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let summation = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let x = RandomUtil.getRandomIntRange(section.minimum, summation - section.minimum);\n        let y = summation - x;\n        let key = `${x} + ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SubtractionQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n\n  getSections = () => {\n    return [{\n        text: \"10 以內減法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內減法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數減法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數減法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數減法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9909,\n        answerRange: 50\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let x = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let y = RandomUtil.getRandomIntRange(section.minimum, x);\n        let summation = x - y;\n        let key = `${x} - ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n}","import QuestionBankBase from \"./base.js\";\n\nexport default class MultiplicationQuestionBank extends QuestionBankBase {\n\n  constructor(level) {\n    super();\n    switch (level || 1) {\n      case 2:\n        this.multiplier = 11;\n        this.multiplicand = 19;\n        break;\n      default:\n        this.multiplier = 2;\n        this.multiplicand = 9;\n        break;\n    }\n  }\n\n  getSections = () => {\n    let sections = [];\n    for (let i = this.multiplier; i <= this.multiplicand; i++) {\n      sections.push({\n        text: `${i} x ${this.multiplicand}`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      for (let i = 2; i <= this.multiplicand; i++) {\n        questions.push({\n          description: `${section.value} x ${i}`,\n          answer: {\n            text: this.convertText(section.value * i),\n            value: section.value * i\n          },\n        });\n      }\n    });\n    return questions;\n  }\n}","import React from \"react\"\n\nexport default class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.drawClock(nextProps.hhmmss);\n  }\n\n  componentDidMount() {\n    this.drawClock(this.props.hhmmss);\n  }\n\n  drawClock = (hhmmss) => {\n    let canvas = this.canvas.current;\n    canvas.height = canvas.width;\n    let context = canvas.getContext(\"2d\");\n    let radius = canvas.height / 2;\n    context.translate(radius, radius);\n    radius = radius * 0.90;\n    this.context = context;\n    this.radius = radius;\n    let arr = (hhmmss || \"00:00:00\").split(\":\");\n    let hour = arr[0] || \"0\";\n    let minute = arr[1] || \"0\";\n    let second = arr[2] || \"0\";\n\n    this.drawFace();\n    this.drawNumbers();\n    this.drawTime(hour, minute, second);\n  }\n\n  drawFace = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n\n    // Base Plate\n    context.arc(0, 0, radius, 0, 2 * Math.PI);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    // Outside frame\n    // let grad = context.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n    // grad.addColorStop(0, \"red\");\n    // grad.addColorStop(0.5, \"yellow\");\n    // grad.addColorStop(1, \"green\");\n    // context.strokeStyle = grad;\n    // context.lineWidth = radius * 0.1;\n    // context.stroke();\n  }\n\n  drawNumbers = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n    context.fillStyle = \"black\";\n    context.font = `bold ${radius * 0.2}px arial`;\n    context.textBaseline = \"middle\";\n    context.textAlign = \"center\";\n    for (let num = 1; num < 13; num++) {\n      let ang = num * Math.PI / 6;\n      context.rotate(ang);\n      context.translate(0, -radius * 0.85);\n      context.rotate(-ang);\n      context.fillText(num.toString(), 0, 0);\n      context.rotate(ang);\n      context.translate(0, radius * 0.85);\n      context.rotate(-ang);\n    }\n  }\n\n  drawTime = (hour, minute, second) => {\n    let radius = this.radius;\n\n    // Hour\n    hour = hour % 12;\n    hour = (hour * Math.PI / 6) +\n      (minute * Math.PI / (6 * 60)) +\n      (second * Math.PI / (360 * 60));\n    this.drawHand(hour, radius * 0.4, radius * 0.07);\n\n    // Minute\n    minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\n    this.drawHand(minute, radius * 0.7, radius * 0.05);\n\n    // Second\n    if (this.props.disableSecondhand === \"true\") return;\n    second = (second * Math.PI / 30);\n    this.drawHand(second, radius * 0.6, radius * 0.02, \"red\");\n  }\n\n  drawHand = (pos, length, width, style) => {\n    let context = this.context;\n    style = style || \"black\"\n\n    // Center of Clock\n    context.beginPath();\n    context.arc(0, 0, length * width * 0.015, 0, 2 * Math.PI);\n    context.fillStyle = style;\n    context.fill();\n\n    // Hand of Clock\n    context.beginPath();\n    context.strokeStyle = style;\n    context.lineWidth = width;\n    context.lineCap = \"round\";\n    context.moveTo(0, 0);\n    context.rotate(pos);\n    context.lineTo(0, -length);\n    context.stroke();\n    context.rotate(-pos);\n  }\n\n  render() {\n    return (\n      <canvas className=\"clock\" ref={this.canvas} width={this.props.width || 200} />\n    );\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\nimport Clock from \"../../components/clock.jsx\";\n\nexport default class ClockQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n  secondsInDay = 24 * 60 * 60;\n\n  getSections = () => {\n    return [{\n        text: \"整點鐘\",\n        intervalSeconds: 60 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"半點鐘\",\n        intervalSeconds: 30 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"5分鐘\",\n        intervalSeconds: 5 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"1分鐘\",\n        intervalSeconds: 1 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"時分秒\",\n        intervalSeconds: 5,\n        answerRange: 120\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let disableSecondhand = section.intervalSeconds !== 5;\n        let random = RandomUtil.getRandomInt(this.secondsInDay / 2);\n        random = random - random % section.intervalSeconds;\n        let key = this.convertText(random, disableSecondhand);\n        hashMap.set(key, {\n          description: <Clock hhmmss={key} disableSecondhand={disableSecondhand.toString()} />,\n          answer: {\n            text: key,\n            value: random\n          },\n          answerRange: section.answerRange,\n          intervalSeconds: section.intervalSeconds,\n          disableSecondhand: disableSecondhand\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange * question.intervalSeconds;\n    let intervalSeconds = question.intervalSeconds;\n    let seeds = [];\n    for (let i = Math.max(0, answer - answerRange); i < Math.min(answer + answerRange, this.secondsInDay / 2); i += intervalSeconds) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i, question.disableSecondhand),\n        value: i\n      });\n    }\n\n    let randomCount = this.selectionCount - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer, question.disableSecondhand),\n      value: answer\n    });\n    return choices;\n  }\n\n  convertText = (value, disableSeconds) => {\n    let hour = Math.floor(value / (60 * 60)) + 1;\n    let minute = Math.floor(value % (60 * 60) / 60);\n    let second = value % 60;\n    let result = `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`;\n    if (!disableSeconds) result += `:${second.toString().padStart(2, \"0\")}`;\n\n    return result;\n  }\n}","import React, { Component } from \"react\";\nimport Quiz from \"./components/quiz.jsx\";\nimport AdditionQuestionBank from \"./libs/question-bank/addition.js\";\nimport SubtractionQuestionBank from \"./libs/question-bank/subtraction.js\";\nimport MultiplicationQuestionBank from \"./libs/question-bank/multiplication.js\";\nimport ClockQuestionBank from \"./libs/question-bank/clock.js\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: false };\n  }\n\n  start = (questionBank) => {\n    this.setState({\n      isStart: true,\n      questionBank: questionBank\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        { this.state.isStart\n          ? <Quiz questionBank={this.state.questionBank} onClose={() => this.setState({ isStart: false })} />\n          : <div>\n            <h1>數學練習小程式</h1>\n            <ul>\n              <li className=\"btn large green\" onClick={() => this.start(new AdditionQuestionBank())}>\n                加法練習\n              </li>\n              <li className=\"btn large green\" onClick={() => this.start(new SubtractionQuestionBank())}>\n                減法練習\n              </li>\n              <li className=\"btn large green\" onClick={() => this.start(new MultiplicationQuestionBank())}>\n                9 x 9 乘法練習\n              </li>\n              <li className=\"btn large green\" onClick={() => this.start(new MultiplicationQuestionBank(2))}>\n                19 x 19 乘法練習\n              </li>\n              <li className=\"btn large green\" onClick={() => this.start(new ClockQuestionBank())}>\n                時鐘練習\n              </li>\n            </ul>\n          </div>\n        }\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport App from \"./app.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}
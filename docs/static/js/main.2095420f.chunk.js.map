{"version":3,"sources":["libs/utils/timer.js","components/schulte-table.jsx","components/countdown.jsx","components/quiz-attempt.jsx","components/quiz-result.jsx","components/quiz-section-selector.jsx","components/quiz.jsx","libs/utils/random.js","libs/question-bank/schulte-table.js","libs/question-bank/base.js","libs/question-bank/addition.js","libs/question-bank/subtraction.js","libs/question-bank/multiplication.js","components/clock.jsx","libs/question-bank/clock.js","app.jsx","index.js"],"names":["Timer","callback","start","intervalId","setInterval","durationSeconds","intervalSeconds","stop","clearInterval","restart","getDuration","this","SchulteTable","props","updateTime","seconds","setState","time","checkAnswer","reply","answerTimer","clearTimeout","effectId","sytle","cursor","state","correct","questionBank","logAnswer","nextCursor","onFinish","results","clicked","num","setTimeout","squareRoot","Math","sqrt","numbers","length","result","question","description","answer","text","toString","duration","push","timer","nextQuestion","className","toFixed","map","onClick","Component","Countdown","reset","pause","resume","countdown","maximum","onChanged","timeout","min","getStatus","rate","round","parseFloat","max","value","QuizAttempt","countdownSeconds","choices","splice","current","onCountdownChanged","React","createRef","choice","i","ref","QuizResult","incorrect","forEach","avgDuration","score","floor","onClose","style","width","fontSize","textAlign","rowSpan","onReview","QuizSectionSelector","onStart","selected","sections","filter","x","isSelected","onSelected","event","section","target","checked","isSingleSelection","isSelectedAll","toggleAll","getSections","getComponentName","type","onChange","Quiz","questions","generateQuestions","addQuestions","componentName","showResult","isShowResult","quizAttempt","renderSwitch","RandomUtil","pickRandomItems","arr","count","items","index","getRandomInt","item","getRandomIntRange","random","SchulteTableQuestionBank","pow","convertText","QuestionBankBase","selectionCount","generateChoices","answerRange","seeds","randomCount","concat","currentQuestion","AdditionQuestionBank","questionCount","minimum","minSummation","maxSummation","hashMap","Map","size","summation","y","key","set","SubtractionQuestionBank","MultiplicationQuestionBank","level","multiplier","multiplicand","Clock","drawClock","hhmmss","canvas","height","context","getContext","radius","translate","split","hour","minute","second","drawFace","drawNumbers","drawTime","beginPath","arc","PI","fillStyle","fill","font","textBaseline","ang","rotate","fillText","drawHand","disableSecondhand","pos","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","nextProps","ClockQuestionBank","secondsInDay","disableSeconds","padStart","App","isStart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2095420f.chunk.js","sourcesContent":["export default class Timer {\n  constructor(callback) {\n    this.intervalSeconds = 0.1;\n    this.durationSeconds = 0;\n    this.callback = callback;\n  }\n\n  start = () => {\n    this.intervalId = setInterval(() => {\n      this.durationSeconds += this.intervalSeconds;\n      if (this.callback) this.callback(this.durationSeconds);\n    }, this.intervalSeconds * 1000);\n  }\n\n  stop = () => {\n    if (this.intervalId) clearInterval(this.intervalId);\n  }\n\n  restart = () => {\n    this.stop();\n    this.durationSeconds = 0;\n    this.start();\n  }\n\n  getDuration = () => {\n    return this.durationSeconds;\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class SchulteTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n    this.timer = new Timer(this.updateTime);\n    this.answerTimer = new Timer();\n\n    this.state = {\n      numbers: this.questionBank.nextQuestion(),\n      cursor: this.questionBank.nextCursor(),\n      clicked: {},\n      time: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timer.start();\n    this.answerTimer.start();\n  }\n\n  updateTime = (seconds) => {\n    this.setState({ time: seconds });\n  }\n\n  checkAnswer = (reply) => {\n    this.answerTimer.stop();\n    clearTimeout(this.effectId);\n    let sytle = \"incorrect\";\n    let cursor = this.state.cursor;\n    let correct = this.questionBank.checkAnswer(reply);\n    this.logAnswer(reply);\n\n    if (correct) {\n      sytle = \"correct\";\n      cursor = this.questionBank.nextCursor();\n      if (cursor === null) {\n        this.props.onFinish(this.results);\n        this.results = [];\n        return;\n      }\n    }\n\n    this.setState({\n      clicked: {\n        num: reply,\n        sytle: sytle\n      },\n      cursor: cursor\n    });\n    this.effectId = setTimeout(() => {\n      this.setState({ clicked: {} });\n    }, 500);\n    this.answerTimer.restart();\n  }\n\n  logAnswer = (reply) => {\n    let squareRoot = Math.sqrt(this.state.numbers.length);\n    let result = {\n      question: {\n        description: `${squareRoot} x ${squareRoot} 格`,\n        answer: {\n          text: `順序 ${this.state.cursor}`\n        }\n      },\n      reply: {\n        text: reply.toString()\n      },\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.answerTimer.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div>\n        <div className=\"schulte-table\">\n          <div className=\"cursor\">下一個：<b>{this.state.cursor}</b></div>\n          <div className=\"time\">{this.state.time.toFixed(1)}s</div>\n          <div className={`numbers size-${this.state.numbers.length}`}>\n            {this.state.numbers.map((num) =>\n              <div key={num}\n                className={`cell ${(clicked.num === num ? clicked.sytle : \"\")}`}\n                onClick={() => this.checkAnswer(num)}><span>{num}</span></div>\n            )}\n          </div>\n        </div>\n      </div >\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class Countdown extends Component {\n\n  constructor(props) {\n    super(props);\n    this.maximum = parseFloat(props.seconds || 10);\n    this.timer = new Timer(this.countdown);\n    this.state = { time: this.maximum };\n  }\n\n  reset = () => {\n    this.timer.restart();\n  }\n\n  pause = () => {\n    this.timer.stop();\n  }\n\n  resume = () => {\n    this.timer.start();\n  }\n\n  countdown = () => {\n    this.setState({ time: this.maximum - this.timer.getDuration() });\n    this.props.onChanged(this.state.time);\n    if (this.state.time > 0) return;\n    this.timeout();\n  }\n\n  timeout = () => {\n    this.timer.stop();\n    this.props.timeout();\n  }\n\n  getDuration = () => {\n    return Math.min(this.maximum, this.timer.getDuration());\n  }\n\n  getStatus = () => {\n    let rate = Math.round(this.state.time / this.maximum * 100);\n    if (rate < 20) return \"danger\";\n    else if (rate < 50) return \"warning\";\n    return \"\";\n  }\n\n  render() {\n    return (\n      <progress className={this.getStatus()} max={this.maximum} value={this.state.time.toFixed(1)}></progress>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Countdown from \"./countdown.jsx\";\n\nexport default class QuizAttempt extends Component {\n  countdownSeconds = 10;\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: []\n    };\n    this.countdown = React.createRef();\n  }\n\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      correct: null,\n      timeout: null\n    });\n\n    let question = this.questionBank.nextQuestion();\n    if (question === null) {\n      this.props.onFinish(this.results);\n      this.results = [];\n      return;\n    }\n\n    this.state.choices.splice(0, this.state.choices.length);\n    this.setState(question);\n    this.countdown.current.reset();\n  }\n\n  checkAnswer = (reply) => {\n    this.countdown.current.pause();\n    let correct = this.questionBank.checkAnswer(reply);\n    this.logAnswer(reply);\n\n    this.setState({\n      correct: correct,\n      timeout: reply == null\n    });\n    if (correct) this.nextQuestion();\n  }\n\n  logAnswer = (reply) => {\n    let result = {\n      question: this.state,\n      reply: reply,\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.countdown.current.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  onCountdownChanged = (value) => {\n    this.setState({ countdown: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={`question ${this.state.countdown < 3 && this.state.correct !== false && \"blink\"}`}>\n          {this.state.description} {this.state.correct === false && `= ${this.state.answer.text}`}\n        </div>\n        {this.state.correct === false\n          ? <p>{this.state.timeout ? \"時間到！\" : \"答錯了！\"}<span className=\"btn large blue\" onClick={() => this.nextQuestion()}>下一題</span></p>\n          : <ul className=\"choices\">\n            {this.state.choices.map((choice, i) =>\n              <li key={i} onClick={() => this.checkAnswer(choice)} >{choice.text}</li>\n            )}\n          </ul>}\n        <Countdown ref={this.countdown}\n          seconds={this.countdownSeconds}\n          timeout={() => this.checkAnswer()}\n          onChanged={value => this.onCountdownChanged(value)} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizResult extends Component {\n  constructor(props) {\n    super(props);\n\n    let correct = 0;\n    let incorrect = 0;\n    let timeout = 0;\n    let duration = 0;\n    let results = this.props.results || [];\n    results.forEach(result => {\n      if (result.correct) correct++;\n      else if (result.reply) incorrect++;\n      else timeout++;\n      duration += result.duration;\n    });\n    this.state = {\n      results: results,\n      correct: correct,\n      incorrect: incorrect,\n      timeout: timeout,\n      avgDuration: results.length && duration / results.length,\n      duration: duration,\n      score: results.length && Math.floor(correct / results.length * 100),\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={() => this.props.onClose()}>x</span>\n          <table>\n            <tbody>\n              <tr>\n                <td style={{ width: \"40%\", fontSize: \"calc(10px + 10vmin)\", textAlign: \"right\" }} rowSpan=\"5\">{this.state.score} 分</td>\n                <td style={{ width: \"calc(80px + 10vmin)\" }}>答對次數：</td><td>{this.state.correct}</td>\n              </tr>\n              <tr><td>答錯次數：</td><td>{this.state.incorrect}</td></tr>\n              <tr><td>逾時次數：</td><td>{this.state.timeout}</td></tr>\n              <tr><td>平均耗時：</td><td>{this.state.avgDuration.toFixed(1)} 秒</td></tr>\n              <tr><td>全部耗時：</td><td>{this.state.duration.toFixed(1)} 秒</td></tr>\n            </tbody>\n          </table>\n          <hr />\n          <table>\n            <thead>\n              <tr>\n                <th style={{ width: \"5%\" }}></th>\n                <th>題目</th>\n                <th style={{ width: \"20%\" }}>解答</th>\n                <th style={{ width: \"20%\" }}>作答</th>\n                <th style={{ width: \"25%\" }}>耗時(秒)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.results.map((result, i) => result.correct ||\n                <tr key={i} className={result.correct ? \"correct\" : \"incorrect\"}>\n                  <td><b /></td>\n                  <td>{result.question.description}</td>\n                  <td>{result.question.answer.text}</td>\n                  <td>{result.reply == null ? \"--\" : result.reply.text}</td>\n                  <td>{result.duration.toFixed(1)}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n          <span className=\"btn\" onClick={() => this.props.onClose()}>關閉</span>\n          {this.state.incorrect >= 3 && <span className=\"btn blue\" onClick={() => this.props.onReview()}>複習</span>}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizSectionSelector extends Component {\n  constructor(props) {\n    super(props);\n    let sections = this.props.questionBank.getSections();\n    this.isSingleSelection =  this.props.questionBank.getComponentName() === \"SchulteTable\";\n    this.state = {\n      isSelected: sections[0].isSelected = true,\n      sections: sections,\n      isSelectedAll: false\n    }\n  }\n\n  onStart = () => {\n    let selected = this.state.sections.filter(x => x.isSelected);\n    if (selected.length > 0)\n      this.props.onStart(selected);\n  }\n\n  onSelected = (event) => {\n    let sections = this.state.sections;\n    sections.forEach(section => {\n      if (section.text === event.target.value) {\n        section.isSelected = event.target.checked;\n      } else if(this.isSingleSelection) {\n        section.isSelected = false;\n      }\n    });\n    this.setState({\n      isSelected: sections.filter(x => x.isSelected).length > 0,\n      sections: sections,\n      isSelectedAll: sections.filter(x => x.isSelected !== true).length === 0\n    });\n  }\n\n  toggleAll = () => {\n    let sections = this.state.sections;\n    let isSelectedAll = !this.state.isSelectedAll;\n    sections.forEach(section => {\n      section.isSelected = isSelectedAll;\n    })\n    this.setState({\n      isSelected: sections.filter(x => x.isSelected).length > 0,\n      sections: sections,\n      isSelectedAll: isSelectedAll\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>請選擇</h1>\n        <ul className=\"sections\">\n          {this.state.sections.map((section, i) =>\n            <li key={i}>\n              <label>\n                <input type=\"checkbox\" onChange={this.onSelected} checked={section.isSelected || false} value={section.text} />\n                <span>{section.text}</span>\n              </label>\n            </li>\n          )}\n          {this.isSingleSelection || <li>\n            <label>\n              <input type=\"checkbox\" onChange={this.toggleAll} checked={this.state.isSelectedAll} />\n              <span>全選</span>\n            </label>\n          </li>}\n        </ul>\n        <span className={`btn large ${this.state.isSelected ? \"green\" : \"disable\"}`} onClick={() => this.onStart()}>開始</span>\n      </div>\n    );\n  }\n}","import \"../styles/quiz.css\";\nimport React, { Component } from \"react\";\nimport SchulteTable from \"./schulte-table.jsx\";\nimport QuizAttempt from \"./quiz-attempt.jsx\";\nimport QuizResult from \"./quiz-result.jsx\";\nimport QuizSectionSelector from \"./quiz-section-selector.jsx\";\n\nexport default class Quiz extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      results: []\n    };\n    this.quizAttempt = React.createRef();\n  }\n\n  onStart = (sections) => {\n    let questionBank = this.props.questionBank;\n    let questions = questionBank.generateQuestions(sections);\n    questionBank.addQuestions(questions);\n    this.setState({ componentName: questionBank.getComponentName() });\n  }\n\n  showResult = (results) => {\n    this.state.results.splice(0, this.state.results.length);\n    this.setState({\n      isShowResult: true,\n      results: results\n    });\n  }\n\n  onReview = () => {\n    let questions = this.state.results\n      .filter(x => !x.correct)\n      .map(x => x.question);\n    for (let i = 0; i < 3; i++)\n      this.props.questionBank.addQuestions(questions);\n\n    this.quizAttempt.current.nextQuestion();\n    this.setState({ isShowResult: false });\n  }\n\n  onClose = () => {\n    this.props.onClose();\n  }\n\n  renderSwitch = (componentName) => {\n    switch (componentName) {\n      case \"QuizAttempt\":\n        return <QuizAttempt ref={this.quizAttempt}\n          questionBank={this.props.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      case \"SchulteTable\":\n        return <SchulteTable\n          questionBank={this.props.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      default:\n        return <QuizSectionSelector\n          questionBank={this.props.questionBank}\n          onStart={sections => this.onStart(sections)} />;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          {this.state.isShowResult || <span className=\"close\" onClick={() => this.props.onClose()}>x</span>}\n        </div>\n        {this.renderSwitch(this.state.componentName)}\n        {this.state.isShowResult &&\n          <QuizResult\n            results={this.state.results}\n            onReview={() => this.onReview()}\n            onClose={() => this.onClose()} />}\n      </div>\n    );\n  }\n}","export default class RandomUtil {\n\n    static pickRandomItems = (arr, count) => {\n        let items = []\n        for (let i = 0; i < count; i++) {\n            let index = this.getRandomInt(arr.length);\n            let item = arr.splice(index, 1)[0];\n            items.push(item);\n        }\n        return items;\n    }\n\n    static getRandomInt = (max) => {\n        return this.getRandomIntRange(0, max);\n    }\n\n    static getRandomIntRange = (min, max) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}","import RandomUtil from \"../utils/random.js\";\n\nexport default class SchulteTableQuestionBank {\n\n  getSections = () => {\n    let sections = [];\n    for (let i = 3; i <= 9; i++) {\n      sections.push({\n        text: `${i} x ${i} 格`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    let count = Math.pow(sections[0].value, 2);\n    for (let i = 1; i <= count; i++)\n      questions.push(i);\n    return RandomUtil.pickRandomItems(questions, count);\n  }\n\n  addQuestions = (questions) => {\n    this.questions = questions || [];\n  }\n\n  nextQuestion = () => {\n    this.cursor = 0;\n    return this.questions;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply === this.cursor;\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n\n  getComponentName = () => {\n    return \"SchulteTable\";\n  }\n\n  nextCursor = () => {\n    if (this.cursor >= this.questions.length) return null;\n    return ++this.cursor;\n  }\n}","import RandomUtil from \"../utils/random.js\";\n\nexport default class QuestionBankBase {\n  selectionCount = 6;\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange || 20;\n    let seeds = [];\n    for (let i = Math.max(2, answer - answerRange); i < answer + answerRange; i++) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i),\n        value: i\n      });\n    }\n\n    let randomCount = this.selectionCount - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer),\n      value: answer\n    });\n    return choices;\n  }\n\n  addQuestions = (questions) => {\n    this.questions = this.questions || [];\n    this.questions = this.questions.concat(questions || []);\n  }\n\n  nextQuestion = () => {\n    if (this.questions.length === 0) return null;\n    let index = RandomUtil.getRandomInt(this.questions.length);\n    let question = this.questions.splice(index, 1)[0];\n    question.choices = this.generateChoices(question);\n    return this.currentQuestion = question;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply.value === this.currentQuestion.answer.value;\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n\n  getComponentName = () => {\n    return \"QuizAttempt\";\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class AdditionQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n\n  getSections = () => {\n    return [{\n        text: \"10 以內加法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內加法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數加法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數加法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數加法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9999,\n        answerRange: 50\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let summation = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let x = RandomUtil.getRandomIntRange(section.minimum, summation - section.minimum);\n        let y = summation - x;\n        let key = `${x} + ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SubtractionQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n\n  getSections = () => {\n    return [{\n        text: \"10 以內減法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內減法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數減法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數減法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數減法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9909,\n        answerRange: 50\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let x = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let y = RandomUtil.getRandomIntRange(section.minimum, x);\n        let summation = x - y;\n        let key = `${x} - ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n}","import QuestionBankBase from \"./base.js\";\n\nexport default class MultiplicationQuestionBank extends QuestionBankBase {\n\n  constructor(level) {\n    super();\n    switch (level || 1) {\n      case 2:\n        this.multiplier = 11;\n        this.multiplicand = 19;\n        break;\n      default:\n        this.multiplier = 2;\n        this.multiplicand = 9;\n        break;\n    }\n  }\n\n  getSections = () => {\n    let sections = [];\n    for (let i = this.multiplier; i <= this.multiplicand; i++) {\n      sections.push({\n        text: `${i} x ${this.multiplicand}`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      for (let i = 2; i <= this.multiplicand; i++) {\n        questions.push({\n          description: `${section.value} x ${i}`,\n          answer: {\n            text: this.convertText(section.value * i),\n            value: section.value * i\n          },\n        });\n      }\n    });\n    return questions;\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.drawClock(nextProps.hhmmss);\n  }\n\n  componentDidMount() {\n    this.drawClock(this.props.hhmmss);\n  }\n\n  drawClock = (hhmmss) => {\n    let canvas = this.canvas.current;\n    canvas.height = canvas.width;\n    let context = canvas.getContext(\"2d\");\n    let radius = canvas.height / 2;\n    context.translate(radius, radius);\n    radius = radius * 0.90;\n    this.context = context;\n    this.radius = radius;\n    let arr = (hhmmss || \"00:00:00\").split(\":\");\n    let hour = arr[0] || \"0\";\n    let minute = arr[1] || \"0\";\n    let second = arr[2] || \"0\";\n\n    this.drawFace();\n    this.drawNumbers();\n    this.drawTime(hour, minute, second);\n  }\n\n  drawFace = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n\n    // Base Plate\n    context.arc(0, 0, radius, 0, 2 * Math.PI);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    // Outside frame\n    // let grad = context.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n    // grad.addColorStop(0, \"red\");\n    // grad.addColorStop(0.5, \"yellow\");\n    // grad.addColorStop(1, \"green\");\n    // context.strokeStyle = grad;\n    // context.lineWidth = radius * 0.1;\n    // context.stroke();\n  }\n\n  drawNumbers = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n    context.fillStyle = \"black\";\n    context.font = `bold ${radius * 0.2}px arial`;\n    context.textBaseline = \"middle\";\n    context.textAlign = \"center\";\n    for (let num = 1; num < 13; num++) {\n      let ang = num * Math.PI / 6;\n      context.rotate(ang);\n      context.translate(0, -radius * 0.85);\n      context.rotate(-ang);\n      context.fillText(num.toString(), 0, 0);\n      context.rotate(ang);\n      context.translate(0, radius * 0.85);\n      context.rotate(-ang);\n    }\n  }\n\n  drawTime = (hour, minute, second) => {\n    let radius = this.radius;\n\n    // Hour\n    hour = hour % 12;\n    hour = (hour * Math.PI / 6) +\n      (minute * Math.PI / (6 * 60)) +\n      (second * Math.PI / (360 * 60));\n    this.drawHand(hour, radius * 0.4, radius * 0.07);\n\n    // Minute\n    minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\n    this.drawHand(minute, radius * 0.7, radius * 0.05);\n\n    // Second\n    if (this.props.disableSecondhand === \"true\") return;\n    second = (second * Math.PI / 30);\n    this.drawHand(second, radius * 0.6, radius * 0.02, \"red\");\n  }\n\n  drawHand = (pos, length, width, style) => {\n    let context = this.context;\n    style = style || \"black\"\n\n    // Center of Clock\n    context.beginPath();\n    context.arc(0, 0, length * width * 0.015, 0, 2 * Math.PI);\n    context.fillStyle = style;\n    context.fill();\n\n    // Hand of Clock\n    context.beginPath();\n    context.strokeStyle = style;\n    context.lineWidth = width;\n    context.lineCap = \"round\";\n    context.moveTo(0, 0);\n    context.rotate(pos);\n    context.lineTo(0, -length);\n    context.stroke();\n    context.rotate(-pos);\n  }\n\n  render() {\n    return (\n      <canvas className=\"clock\" ref={this.canvas} width={this.props.width || 200} />\n    );\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\nimport Clock from \"../../components/clock.jsx\";\n\nexport default class ClockQuestionBank extends QuestionBankBase {\n  questionCount = 10;\n  secondsInDay = 24 * 60 * 60;\n\n  getSections = () => {\n    return [{\n        text: \"整點鐘\",\n        intervalSeconds: 60 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"半點鐘\",\n        intervalSeconds: 30 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"5分鐘\",\n        intervalSeconds: 5 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"1分鐘\",\n        intervalSeconds: 1 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"時分秒\",\n        intervalSeconds: 5,\n        answerRange: 120\n      }\n    ];\n  }\n\n  generateQuestions = (sections) => {\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < this.questionCount) {\n        let disableSecondhand = section.intervalSeconds !== 5;\n        let random = RandomUtil.getRandomInt(this.secondsInDay / 2);\n        random = random - random % section.intervalSeconds;\n        let key = this.convertText(random, disableSecondhand);\n        hashMap.set(key, {\n          description: <Clock hhmmss={key} disableSecondhand={disableSecondhand.toString()} />,\n          answer: {\n            text: key,\n            value: random\n          },\n          answerRange: section.answerRange,\n          intervalSeconds: section.intervalSeconds,\n          disableSecondhand: disableSecondhand\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    return questions;\n  }\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange * question.intervalSeconds;\n    let intervalSeconds = question.intervalSeconds;\n    let seeds = [];\n    for (let i = Math.max(0, answer - answerRange); i < Math.min(answer + answerRange, this.secondsInDay / 2); i += intervalSeconds) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i, question.disableSecondhand),\n        value: i\n      });\n    }\n\n    let randomCount = this.selectionCount - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer, question.disableSecondhand),\n      value: answer\n    });\n    return choices;\n  }\n\n  convertText = (value, disableSeconds) => {\n    let hour = Math.floor(value / (60 * 60)) + 1;\n    let minute = Math.floor(value % (60 * 60) / 60);\n    let second = value % 60;\n    let result = `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`;\n    if (!disableSeconds) result += `:${second.toString().padStart(2, \"0\")}`;\n\n    return result;\n  }\n}","import React, { Component } from \"react\";\nimport Quiz from \"./components/quiz.jsx\";\nimport SchulteTableQuestionBank from \"./libs/question-bank/schulte-table.js\";\nimport AdditionQuestionBank from \"./libs/question-bank/addition.js\";\nimport SubtractionQuestionBank from \"./libs/question-bank/subtraction.js\";\nimport MultiplicationQuestionBank from \"./libs/question-bank/multiplication.js\";\nimport ClockQuestionBank from \"./libs/question-bank/clock.js\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isStart: false };\n  }\n\n  start = (questionBank) => {\n    this.setState({\n      isStart: true,\n      questionBank: questionBank\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        { this.state.isStart\n          ? <Quiz questionBank={this.state.questionBank} onClose={() => this.setState({ isStart: false })} />\n          : <div>\n            <h1>數學練習小程式</h1>\n            <ul>\n              <li className=\"btn green\" onClick={() => this.start(new SchulteTableQuestionBank())}>\n                舒爾特方格\n              </li>\n              <li className=\"btn green\" onClick={() => this.start(new AdditionQuestionBank())}>\n                加法練習\n              </li>\n              <li className=\"btn green\" onClick={() => this.start(new SubtractionQuestionBank())}>\n                減法練習\n              </li>\n              <li className=\"btn green\" onClick={() => this.start(new MultiplicationQuestionBank())}>\n                9 x 9 乘法練習\n              </li>\n              <li className=\"btn green\" onClick={() => this.start(new MultiplicationQuestionBank(2))}>\n                19 x 19 乘法練習\n              </li>\n              <li className=\"btn green\" onClick={() => this.start(new ClockQuestionBank())}>\n                時鐘練習\n              </li>\n            </ul>\n          </div>}\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport App from \"./app.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["libs/utils/timer.js","components/schulte-table.jsx","components/countdown.jsx","components/numeric-keypad.jsx","components/quiz-attempt.jsx","components/quiz-result.jsx","components/quiz-setting.jsx","pages/quiz-page.jsx","libs/utils/random.js","libs/question-bank/base.js","libs/question-bank/schulte-table.js","libs/question-bank/addition.js","libs/question-bank/subtraction.js","libs/question-bank/multiplication.js","components/clock.jsx","libs/question-bank/clock.js","app-routes.js","app.jsx","index.js"],"names":["Timer","callback","start","intervalId","setInterval","durationSeconds","intervalSeconds","stop","clearInterval","restart","getDuration","this","SchulteTable","props","updateTime","seconds","setState","time","toFixed","checkAnswer","reply","answerTimer","clearTimeout","effectId","sytle","cursor","state","correct","questionBank","value","logAnswer","nextCursor","timer","onFinish","results","clicked","setTimeout","squareRoot","Math","sqrt","characters","length","result","question","description","answer","text","duration","push","nextQuestion","className","map","character","onClick","Component","Countdown","reset","pause","resume","countdown","maximum","onChanged","timeout","min","getStatus","rate","round","parseFloat","max","NumericKeypad","num","input","onBack","clear","substring","onConfirm","numbers","i","QuizAttempt","choices","splice","current","numericKeypad","convertText","disableSecondhand","onCountdownChanged","renderSwitch","answerMethod","ref","parseInt","choice","getSetting","timeoutSeconds","React","createRef","QuizResult","incorrect","forEach","avgDuration","score","floor","onClose","style","width","enableReview","onReview","QuizSetting","onStart","ready","options","x","selections","filter","s","selected","onSelected","event","option","selection","target","checked","type","selectedAll","updateMenuItem","onSlide","name","toggleAll","j","onChange","e","title","getTitle","getOptions","QuizPage","setSettings","initQuestions","componentName","showResult","isShowResult","questions","incorrectQuestions","concat","setQuestions","quizAttempt","history","withRouter","RandomUtil","pickRandomItems","arr","count","items","index","getRandomInt","item","getRandomIntRange","random","QuestionBankBase","getRoute","generateChoices","answerRange","seeds","randomCount","currentQuestion","toString","sections","getSections","settings","component","choiceCount","SchulteTableQuestionBank","section","getCharacters","ceil","pow","char","str","Array","from","split","AdditionQuestionBank","minimum","minSummation","maxSummation","questionCount","hashMap","Map","size","summation","y","key","set","SubtractionQuestionBank","MultiplicationQuestionBank","level","multiplier","multiplicand","Clock","drawClock","hhmmss","canvas","height","context","getContext","radius","translate","hour","minute","second","drawFace","drawNumbers","drawTime","beginPath","arc","PI","fillStyle","fill","font","textBaseline","textAlign","ang","rotate","fillText","drawHand","pos","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","nextProps","ClockQuestionBank","secondsInDay","disableSeconds","padStart","AppRoutes","path","App","menu","route","to","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAAqBA,G,YACnB,WAAYC,GAAW,IAAD,gCAMtBC,MAAQ,WACN,EAAKC,WAAaC,aAAY,WAC5B,EAAKC,iBAAmB,EAAKC,gBACzB,EAAKL,UAAU,EAAKA,SAAS,EAAKI,mBACd,IAAvB,EAAKC,kBAVY,KAatBC,KAAO,WACD,EAAKJ,YAAYK,cAAc,EAAKL,aAdpB,KAiBtBM,QAAU,WACR,EAAKF,OACL,EAAKF,gBAAkB,EACvB,EAAKH,SApBe,KAuBtBQ,YAAc,WACZ,OAAO,EAAKL,iBAvBZM,KAAKL,gBAAkB,GACvBK,KAAKN,gBAAkB,EACvBM,KAAKV,SAAWA,ICACW,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAyBRC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,KAAK,GAAD,OAAKF,EAAQG,QAAQ,GAArB,QA3BH,EA8BnBC,YAAc,SAACC,GACb,EAAKC,YAAYd,OACjBe,aAAa,EAAKC,UAClB,IAAIC,EAAQ,YACRC,EAAS,EAAKC,MAAMD,OACpBE,EAAU,EAAKC,aAAaT,YAAYC,EAAMS,OAGlD,GAFA,EAAKC,UAAUV,GAEXO,IACFH,EAAQ,UAEO,QADfC,EAAS,EAAKG,aAAaG,eAMzB,OAJA,EAAKC,MAAMzB,OACX,EAAKS,SAAS,CAAEC,KAAM,OACtB,EAAKJ,MAAMoB,SAAS,EAAKC,cACzB,EAAKA,QAAU,IAKnB,EAAKlB,SAAS,CACZmB,QAAS,CACPN,MAAOT,EAAMS,MACbL,MAAOA,GAETC,OAAQA,IAEV,EAAKF,SAAWa,YAAW,WACzB,EAAKpB,SAAS,CAAEmB,QAAS,OACxB,KACH,EAAKd,YAAYZ,WA5DA,EA+DnBqB,UAAY,SAACV,GACX,IAAIiB,EAAaC,KAAKC,KAAK,EAAKb,MAAMc,WAAWC,QAC7CC,EAAS,CACXC,SAAU,CACRC,YAAY,GAAD,OAAKP,EAAL,cAAqBA,EAArB,WACXQ,OAAQ,CACNC,KAAK,gBAAD,OAAQ,EAAKpB,MAAMD,OAAOqB,QAGlC1B,MAAOA,EAAM0B,KACbnB,QAAS,EAAKC,aAAaT,YAAYC,EAAMS,OAC7CkB,SAAU,EAAK1B,YAAYX,eAE7B,EAAKwB,QAAQc,KAAKN,IAzElB,EAAKd,aAAef,EAAMe,aAC1B,EAAKM,QAAU,GACf,EAAKF,MAAQ,IAAIhC,EAAM,EAAKc,YAC5B,EAAKO,YAAc,IAAIrB,EAEvB,EAAK0B,MAAQ,CACXc,WAAY,EAAKZ,aAAaqB,eAC9BxB,OAAQ,EAAKG,aAAaG,aAC1BI,QAAS,GACTlB,KAAM,GAZS,E,gEAiBjBN,KAAKqB,MAAM9B,QACXS,KAAKU,YAAYnB,U,6CAIjBS,KAAKqB,MAAMzB,OACXI,KAAKU,YAAYd,S,+BAwDT,IAAD,OACC4B,EAAYxB,KAAKe,MAAjBS,QACR,OACE,8BACE,sBAAKe,UAAU,gBAAf,UACE,sBAAKA,UAAU,SAAf,+BAA2B,4BAAIvC,KAAKe,MAAMD,OAAOqB,UACjD,qBAAKI,UAAU,OAAf,SAAuBvC,KAAKe,MAAMT,OAClC,qBAAKiC,UAAS,0BAAqBvC,KAAKe,MAAMc,WAAWC,QAAzD,SACG9B,KAAKe,MAAMc,WAAWW,KAAI,SAACC,GAAD,OACzBA,GAAa,qBACXF,UAAS,eAAWf,EAAQN,QAAUuB,EAAUvB,MAAQM,EAAQX,MAAQ,IACxE6B,QAAS,kBAAM,EAAKlC,YAAYiC,IAFrB,SAEiC,+BAAOA,EAAUN,QAFxCM,EAAUvB,qB,GA1FLyB,aCDrBC,E,kDAEnB,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAMR2C,MAAQ,WACN,EAAKxB,MAAMvB,WARM,EAWnBgD,MAAQ,WACN,EAAKzB,MAAMzB,QAZM,EAenBmD,OAAS,WACP,EAAK1B,MAAM9B,SAhBM,EAmBnByD,UAAY,WACV,EAAK3C,SAAS,CAAEC,KAAM,EAAK2C,QAAU,EAAK5B,MAAMtB,gBAChD,EAAKG,MAAMgD,UAAU,EAAKnC,MAAMT,MAC5B,EAAKS,MAAMT,KAAO,GACtB,EAAK6C,WAvBY,EA0BnBA,QAAU,WACR,EAAK9B,MAAMzB,OACX,EAAKM,MAAMiD,WA5BM,EA+BnBpD,YAAc,WACZ,OAAO4B,KAAKyB,IAAI,EAAKH,QAAS,EAAK5B,MAAMtB,gBAhCxB,EAmCnBsD,UAAY,WACV,IAAIC,EAAO3B,KAAK4B,MAAM,EAAKxC,MAAMT,KAAO,EAAK2C,QAAU,KACvD,OAAIK,EAAO,GAAW,SACbA,EAAO,GAAW,UACpB,IArCP,EAAKL,QAAUO,WAAWtD,EAAME,SAAW,IAC3C,EAAKiB,MAAQ,IAAIhC,EAAM,EAAK2D,WAC5B,EAAKjC,MAAQ,CAAET,KAAM,EAAK2C,SAJT,E,qDA2CjB,OACE,0BAAUV,UAAWvC,KAAKqD,YAAaI,IAAKzD,KAAKiD,QAAS/B,MAAOlB,KAAKe,MAAMT,KAAKC,QAAQ,S,GA9CxDoC,aCAlBe,E,kDAEnB,WAAYxD,GAAQ,IAAD,uBACjB,cAAMA,IAaRwC,QAAU,SAACiB,GACT,EAAKC,OAAL,UAAiBD,GAEb,EAAKzD,MAAMgD,WACb,EAAKhD,MAAMgD,UAAU,EAAKU,QAlBX,EAqBnBC,OAAS,WACH,EAAKD,MAAM9B,QAAU,EACvB,EAAKgC,QAEL,EAAKF,MAAQ,EAAKA,MAAMG,UAAU,EAAG,EAAKH,MAAM9B,OAAS,GAEvD,EAAK5B,MAAMgD,WACb,EAAKhD,MAAMgD,UAAU,EAAKU,QA5BX,EA+BnBI,UAAY,WACS,KAAf,EAAKJ,QACT,EAAK1D,MAAM8D,UAAU,EAAKJ,OAC1B,EAAKE,UAlCY,EAqCnBA,MAAQ,WACN,EAAKF,MAAQ,IAnCb,EAAK7C,MAAQ,CACXS,QAAS,IAGX,EAAKyC,QAAU,GACf,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACtB,EAAKD,QAAQ5B,KAAK6B,GATH,OAWjB,EAAKJ,QAXY,E,qDAyCT,IAAD,OACCtC,EAAYxB,KAAKe,MAAjBS,QACR,OACE,qBAAKe,UAAU,iBAAf,SACE,sBAAKA,UAAU,UAAf,UACGvC,KAAKiE,QAAQzB,KAAI,SAAAmB,GAAG,OACnB,qBACEpB,UAAS,eAAWf,EAAQmC,MAAQA,EAAMnC,EAAQX,MAAQ,IAC1D6B,QAAS,kBAAM,EAAKA,QAAQiB,IAF9B,SAEoC,+BAAOA,KAFjCA,MAIZ,qBAAKpB,UAAU,OAAOG,QAAS,kBAAM,EAAKmB,UAA1C,SAAoD,sBAAMtB,UAAU,qBACpE,qBAAKA,UAAS,eAA2B,IAAhBf,EAAQmC,IAAYnC,EAAQX,MAAQ,IAC3D6B,QAAS,kBAAM,EAAKA,QAAQ,IAD9B,SACkC,uCAClC,qBAAKH,UAAU,OAAOG,QAAS,kBAAM,EAAKsB,aAA1C,SAAuD,sBAAMzB,UAAU,0B,GAxDtCI,aCCtBwB,E,kDAEnB,WAAYjE,GAAQ,IAAD,uBACjB,cAAMA,IA2BRoC,aAAe,WACb,EAAKjC,SAAS,CACZW,QAAS,OAGX,IAAIgB,EAAW,EAAKf,aAAaqB,eACjC,GAAiB,OAAbN,EAGF,OAFA,EAAK9B,MAAMoB,SAAS,EAAKC,cACzB,EAAKA,QAAU,IAIjB,EAAKR,MAAMqD,QAAQC,OAAO,EAAG,EAAKtD,MAAMqD,QAAQtC,QAChDE,EAASvB,MAAQ,GACjB,EAAKJ,SAAS2B,GACd,EAAKgB,UAAUsB,QAAQzB,QACnB,EAAK0B,cAAcD,SACrB,EAAKC,cAAcD,QAAQR,SA7CZ,EAgDnBtD,YAAc,SAACC,GACbA,EAAQA,GAAS,GACjB,EAAKuC,UAAUsB,QAAQxB,QACvB,IAAI9B,EAAU,EAAKC,aAAaT,YAAYC,GAC5C,EAAKU,UAAUV,GAEf,EAAKJ,SAAS,CACZW,QAASA,EACTP,MAAOA,IAELO,GAAS,EAAKsB,gBA1DD,EA6DnBnB,UAAY,SAACV,GACX,IAAIsB,EAAS,CACXC,SAAU,EAAKjB,MACfN,MAAO,EAAKQ,aAAauD,YAAY/D,EAAO,EAAKM,MAAM0D,mBACvDzD,QAAS,EAAKC,aAAaT,YAAYC,GACvC2B,SAAU,EAAKY,UAAUsB,QAAQvE,eAEnC,EAAKwB,QAAQc,KAAKN,IApED,EAuEnB2C,mBAAqB,SAACxD,GACpB,EAAKb,SAAS,CAAE2C,UAAW9B,KAxEV,EA2EnByD,aAAe,WACb,OAAQ,EAAK5D,MAAM6D,cACjB,IAAK,UACH,OAAO,cAAC,EAAD,CAAeC,IAAK,EAAKN,cAC9BrB,UAAW,SAAAhC,GAAK,OAAI,EAAKb,SAAS,CAAEI,MAAOS,KAC3C8C,UAAW,SAAA9C,GAAK,OAAI,EAAKV,YAAYsE,SAAS5D,OAClD,QACE,OAAO,oBAAIqB,UAAU,UAAd,SACJ,EAAKxB,MAAMqD,QAAQ5B,KAAI,SAACuC,EAAQb,GAAT,OACtB,oBAAYxB,QAAS,kBAAM,EAAKlC,YAAYuE,EAAO7D,QAAnD,SAA4D,+BAAO6D,EAAO5C,QAAjE+B,UAjFjB,EAAKjD,aAAef,EAAMe,aAC1B,IAAI2D,EAAe,EAAK3D,aAAa+D,WAAW,iBAC5CC,EAAiB,EAAKhE,aAAa+D,WAAW,kBALjC,OAOjB,EAAKzD,QAAU,GACf,EAAKR,MAAQ,CACXkB,YAAa,GACbC,OAAQ,GACRkC,QAAS,GACT3D,MAAO,GACPwE,eAAgBA,EAChBL,aAA8B,MAAhBA,EAAuB,SAAWA,EAAa,GAAG1D,OAElE,EAAK8B,UAAYkC,IAAMC,YACvB,EAAKZ,cAAgBW,IAAMC,YAjBV,E,gEAqBjBnF,KAAKsC,iB,6CAILtC,KAAKgD,UAAUsB,QAAQxB,U,+BAiEf,IAAD,OACP,OACE,sBAAKP,UAAS,wBAAmBvC,KAAKe,MAAM6D,cAA5C,UACE,sBAAKrC,UAAS,mBAAcvC,KAAKe,MAAMiC,UAAY,IAA4B,IAAvBhD,KAAKe,MAAMC,SAAqB,SAAxF,UACGhB,KAAKe,MAAMkB,YADd,IACwD,YAA5BjC,KAAKe,MAAM6D,cAA8B,2CAAY5E,KAAKe,MAAMN,aAEpE,IAAvBT,KAAKe,MAAMC,QACR,gCACA,8BAAyB,KAArBhB,KAAKe,MAAMN,MAAe,2BAAS,2BAAvC,uBAAoDT,KAAKe,MAAMmB,OAAOC,QACtE,sBAAMI,UAAU,iBAAiBG,QAAS,kBAAM,EAAKJ,gBAArD,mCAEAtC,KAAK2E,eACT,cAAC,EAAD,CAAWE,IAAK7E,KAAKgD,UACnB5C,QAASJ,KAAKe,MAAMkE,eACpB9B,QAAS,kBAAM,EAAK3C,YAAY,EAAKO,MAAMN,QAC3CyC,UAAW,SAAAhC,GAAK,OAAI,EAAKwD,mBAAmBxD,a,GA3GbyB,aCFpByC,E,kDACnB,WAAYlF,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAIc,EAAU,EACVqE,EAAY,EACZlC,EAAU,EACVf,EAAW,EACXb,EAAU,EAAKrB,MAAMqB,SAAW,GAPnB,OAQjBA,EAAQ+D,SAAQ,SAAAvD,GACVA,EAAOf,QAASA,IACXe,EAAOtB,MAAO4E,IAClBlC,IACLf,GAAYL,EAAOK,YAErB,EAAKrB,MAAQ,CACXQ,QAASA,EACTP,QAASA,EACTqE,UAAWA,EACXlC,QAASA,EACToC,YAAahE,EAAQO,QAAUM,EAAWb,EAAQO,OAClDM,SAAUA,EACVoD,MAAOjE,EAAQO,QAAUH,KAAK8D,MAAMzE,EAAUO,EAAQO,OAAS,MArBhD,E,qDAyBT,IAAD,OACP,OACE,qBAAKS,UAAU,QAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,QAAQG,QAAS,kBAAM,EAAKxC,MAAMwF,WAAlD,eACA,gCACE,kCACE,qBAAInD,UAAU,UAAd,UAAwB,gEAAc,6BAAKvC,KAAKe,MAAMC,aACtD,qBAAIuB,UAAWvC,KAAKe,MAAMsE,UAAY,EAAI,YAAc,GAAxD,UAA4D,gEAAc,6BAAKrF,KAAKe,MAAMsE,eACzFrF,KAAKe,MAAMoC,QAAU,GAAK,qBAAIZ,UAAU,YAAd,UAA0B,gEAAc,6BAAKvC,KAAKe,MAAMoC,aACnF,+BAAI,gEAAc,+BAAKnD,KAAKe,MAAMwE,YAAYhF,QAAQ,GAApC,gBAClB,+BAAI,gEAAc,+BAAKP,KAAKe,MAAMqB,SAAS7B,QAAQ,GAAjC,qBAGtB,uBACCP,KAAKe,MAAMsE,UAAY,GACtB,kCACE,gCACE,+BACE,oBAAIM,MAAO,CAAEC,MAAO,QACpB,8CACA,oBAAID,MAAO,CAAEC,MAAO,OAApB,0BACA,oBAAID,MAAO,CAAEC,MAAO,OAApB,0BACA,oBAAID,MAAO,CAAEC,MAAO,OAApB,uCAGJ,gCACG5F,KAAKe,MAAMQ,QAAQiB,KAAI,SAACT,EAAQmC,GAAT,OAAenC,EAAOf,SAC5C,qBAAYuB,UAAWR,EAAOf,QAAU,UAAY,YAApD,UACE,6BAAI,wBACJ,6BAAKe,EAAOC,SAASC,cACrB,6BAAKF,EAAOC,SAASE,OAAOC,OAC5B,6BAAsB,KAAjBJ,EAAOtB,MAAe,KAAOsB,EAAOtB,QACzC,6BAAKsB,EAAOK,SAAS7B,QAAQ,OALtB2D,WAUjB,sBAAK3B,UAAU,eAAf,UACE,sBAAMA,UAAU,MAAMG,QAAS,kBAAM,EAAKxC,MAAMwF,WAAhD,0BACC1F,KAAKE,MAAM2F,cAAgB7F,KAAKe,MAAMsE,WAAa,GAClD,sBAAM9C,UAAU,WAAWG,QAAS,kBAAM,EAAKxC,MAAM4F,YAArD,sC,GAnE0BnD,aCAnBoD,E,kDACnB,WAAY7F,GAAQ,IAAD,uBACjB,cAAMA,IAYR8F,QAAU,WACJ,EAAKjF,MAAMkF,MAAQ,GACrB,EAAK/F,MAAM8F,QAAQ,EAAKjF,MAAMmF,QAAQ1D,KAAI,SAAA2D,GAGxC,OAFoB,MAAhBA,EAAEC,aACJD,EAAEC,WAAaD,EAAEC,WAAWC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,aACrCJ,OAlBM,EAsBnBK,WAAa,SAACC,EAAOC,GACnBA,EAAON,WAAWd,SAAQ,SAAAqB,GACpBA,EAAUxE,OAASsE,EAAMG,OAAO1F,MAClCyF,EAAUJ,SAAWE,EAAMG,OAAOC,QACT,kBAAhBH,EAAOI,OAChBH,EAAUJ,UAAW,MAGzBG,EAAOK,YAA4E,IAA9DL,EAAON,WAAWC,QAAO,SAAAF,GAAC,OAAmB,IAAfA,EAAEI,YAAmBzE,OAExE,EAAKkF,eAAeN,IAhCH,EAmCnBO,QAAU,SAACR,EAAOC,GAChBA,EAAOxF,MAAQuF,EAAMG,OAAO1F,MAC5B,EAAK8F,eAAeN,GACpB,EAAKrG,UAAS,SAAAU,GACZA,EAAMmF,QAAQZ,SAAQ,SAAAa,GAChBA,EAAEe,OAASR,EAAOQ,OAAMf,EAAIO,UAxCnB,EA6CnBS,UAAY,SAACD,GACX,IAAIR,EAAS,EAAK3F,MAAMmF,QAAQG,QAAO,SAAAF,GAAC,OAAIA,EAAEe,OAASA,KAAM,GACzDd,EAAaM,EAAON,WACxBM,EAAOK,aAAeL,EAAOK,YAC7BX,EAAWd,SAAQ,SAAAqB,GACjBA,EAAUJ,SAAWG,EAAOK,eAG9B,EAAKC,eAAeN,IArDH,EAwDnBM,eAAiB,SAACN,GAChB,IAAIT,GAAQ,EACZ,EAAK5F,UAAS,SAAAU,GAOZ,OANAA,EAAMmF,QAAQZ,SAAQ,SAAAa,GAChBA,EAAEe,OAASR,EAAOQ,OAAMf,EAAIO,GACZ,MAAhBP,EAAEC,YAAsE,IAAhDD,EAAEC,WAAWC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,YAAUzE,SAC/DmE,GAAQ,MAGL,CACLC,QAASnF,EAAMmF,QACfD,MAAOA,OAnEM,EAwEnBtB,aAAe,SAAC+B,GACd,OAAQA,EAAOI,MACb,IAAK,gBACL,IAAK,kBACH,OAAO,qBAAIvE,UAAU,WAAd,UACJmE,EAAON,WAAW5D,KAAI,SAACmE,EAAWS,GAAZ,OACrB,6BACE,kCACE,uBAAON,KAAK,WACV5F,MAAOyF,EAAUxE,KACjBkF,SAAU,SAAAC,GAAC,OAAI,EAAKd,WAAWc,EAAGZ,IAClCG,QAASF,EAAUJ,WAAY,IACjC,+BAAOI,EAAUxE,WANZiF,MAUM,oBAAhBV,EAAOI,MAA8B,6BACpC,kCACE,uBAAOA,KAAK,WAAWO,SAAU,kBAAM,EAAKF,UAAUT,EAAOQ,OAAOL,QAASH,EAAOK,cAAe,IACnG,wDAIR,IAAK,eACH,OAAO,sBAAKxE,UAAU,WAAf,UACL,uBAAOA,UAAU,SAASuE,KAAK,QAAQ1D,IAAI,IAAIK,IAAI,KACjDvC,MAAOwF,EAAOxF,MAAOmG,SAAU,SAAAC,GAAC,OAAI,EAAKL,QAAQK,EAAGZ,MACnDA,EAAOxF,MAHL,aAKT,QACE,OAAO,0BApGX,IAAID,EAAe,EAAKf,MAAMe,aAC1BsG,EAAQtG,EAAauG,WACrBtB,EAAUjF,EAAawG,aAJV,OAMjB,EAAK1G,MAAQ,CACXwG,MAAOA,EACPrB,QAASA,EACTD,OAAO,GATQ,E,qDA2GT,IAAD,OACP,OACE,gCACE,6BAAKjG,KAAKe,MAAMwG,QACfvH,KAAKe,MAAMmF,QAAQ1D,KAAI,SAACkE,EAAQxC,GAAT,OACtB,oCACE,6BAAKwC,EAAOa,QACX,EAAK5C,aAAa+B,KAFPxC,MAKhB,8BACE,sBAAM3B,UAAS,oBAAevC,KAAKe,MAAMkF,MAAQ,QAAU,WAAavD,QAAS,kBAAM,EAAKsD,WAA5F,mC,GAvH+BrD,aCM5B+E,EAAb,kDACE,WAAYxH,GAAQ,IAAD,8BACjB,cAAMA,IAUR8F,QAAU,SAACE,GACT,IAAIjF,EAAe,EAAKf,MAAMe,aAC9BA,EAAa0G,YAAYzB,GACzBjF,EAAa2G,gBAEb,EAAKvH,SAAS,CACZwH,cAAe5G,EAAa+D,WAAW,aACvCa,aAAc5E,EAAa+D,WAAW,mBAlBvB,EAsBnB8C,WAAa,SAACvG,GACZ,EAAKR,MAAMQ,QAAQ8C,OAAO,EAAG,EAAKtD,MAAMQ,QAAQO,QAChD,EAAKzB,SAAS,CACZ0H,cAAc,EACdxG,QAASA,KA1BM,EA8BnBuE,SAAW,WAKT,IAJA,IAAIkC,EAAY,GACZC,EAAqB,EAAKlH,MAAMQ,QACjC8E,QAAO,SAAAF,GAAC,OAAKA,EAAEnF,WACfwB,KAAI,SAAA2D,GAAC,OAAIA,EAAEnE,YACLkC,EAAI,EAAGA,EAAI,EAAGA,IACrB8D,EAAYA,EAAUE,OAAOD,GAC/B,EAAK/H,MAAMe,aAAakH,aAAaH,GAErC,EAAKI,YAAY9D,QAAQhC,eACzB,EAAKjC,SAAS,CAAE0H,cAAc,KAxCb,EA2CnBrC,QAAU,WACR,EAAKxF,MAAMmI,QAAQhG,KAAK,MA5CP,EA+CnBsC,aAAe,SAACkD,GACd,OAAQA,GACN,IAAK,cACH,OAAO,cAAC,EAAD,CAAahD,IAAK,EAAKuD,YAC5BnH,aAAc,EAAKf,MAAMe,aACzBK,SAAU,SAAAC,GAAO,OAAI,EAAKuG,WAAWvG,MACzC,IAAK,eACH,OAAO,cAAC,EAAD,CACLN,aAAc,EAAKf,MAAMe,aACzBK,SAAU,SAAAC,GAAO,OAAI,EAAKuG,WAAWvG,MACzC,QACE,OAAO,cAAC,EAAD,CACLN,aAAc,EAAKf,MAAMe,aACzB+E,QAAS,SAAAU,GAAM,OAAI,EAAKV,QAAQU,QA1DtC,EAAK3F,MAAQ,CACXkB,YAAa,GACbC,OAAQ,GACRkC,QAAS,GACT7C,QAAS,IAEX,EAAK6G,YAAclD,IAAMC,YARR,EADrB,qDAiEY,IAAD,OACP,OACE,gCACE,qBAAK5C,UAAU,SAAf,SACGvC,KAAKe,MAAMgH,cAAgB,sBAAMxF,UAAU,QAAQG,QAAS,kBAAM,EAAKgD,WAA5C,iBAE7B1F,KAAK2E,aAAa3E,KAAKe,MAAM8G,eAC7B7H,KAAKe,MAAMgH,cACV,cAAC,EAAD,CACElC,aAAc7F,KAAKe,MAAM8E,aACzBtE,QAASvB,KAAKe,MAAMQ,QACpBuE,SAAU,kBAAM,EAAKA,YACrBJ,QAAS,kBAAM,EAAKA,oBA7EhC,GAA8B/C,aAmFf2F,cAAWZ,GC3FLa,E,kCAAAA,EAEVC,gBAAkB,SAACC,EAAKC,GAE3B,IADA,IAAIC,EAAQ,GACHzE,EAAI,EAAGA,EAAIwE,EAAOxE,IAAK,CAC5B,IAAI0E,EALKL,EAKQM,aAAaJ,EAAI3G,QAC9BgH,EAAOL,EAAIpE,OAAOuE,EAAO,GAAG,GAChCD,EAAMtG,KAAKyG,GAEf,OAAOH,GATMJ,EAYVM,aAAe,SAACpF,GACnB,OAba8E,EAaDQ,kBAAkB,EAAGtF,IAbpB8E,EAgBVQ,kBAAoB,SAAC3F,EAAKK,GAC7B,OAAO9B,KAAK8D,MAAM9D,KAAKqH,UAAYvF,EAAML,GAAOA,I,ICfnC6F,EAEnB,aAAe,IAAD,gCAQdzB,SAAW,kBAAM,EAAKxC,WAAW,UARnB,KASdkE,SAAW,kBAAM,EAAKlE,WAAW,UATnB,KAWdmE,gBAAkB,SAACnH,GAIjB,IAHA,IAAIE,EAASF,EAASE,OAAOhB,MACzBkI,EAAcpH,EAASoH,aAAe,GACtCC,EAAQ,GACHnF,EAAIvC,KAAK8B,IAAI,EAAGvB,EAASkH,GAAclF,EAAIhC,EAASkH,EAAalF,IACpEA,IAAMhC,GAAQmH,EAAMhH,KAAK,CAC3BF,KAAM,EAAKqC,YAAYN,GACvBhD,MAAOgD,IAIX,IAAIoF,EAAc,EAAKtE,WAAW,eAAiB,EAC/CZ,EAAUmE,EAAWC,gBAAgBa,EAAOC,GAKhD,OAJAlF,EAAQC,OAAOkE,EAAWM,aAAaS,GAAc,EAAG,CACtDnH,KAAM,EAAKqC,YAAYtC,GACvBhB,MAAOgB,IAEFkC,GA5BK,KA+Bd+D,aAAe,SAACH,GACd,EAAKA,UAAYA,GAAa,IAhClB,KAmCd1F,aAAe,WACb,GAA8B,IAA1B,EAAK0F,UAAUlG,OAAc,OAAO,KACxC,IAAI8G,EAAQL,EAAWM,aAAa,EAAKb,UAAUlG,QAC/CE,EAAW,EAAKgG,UAAU3D,OAAOuE,EAAO,GAAG,GAE/C,OADA5G,EAASoC,QAAU,EAAK+E,gBAAgBnH,GACjC,EAAKuH,gBAAkBvH,GAxClB,KA2CdxB,YAAc,SAACC,GACb,OAAgB,MAATA,GAAiBA,EAAM+I,aAAe,EAAKD,gBAAgBrH,OAAOhB,MAAMsI,YA5CnE,KA+CdhF,YAAc,SAACtD,GACb,OAAOA,EAAMsI,YAhDD,KAmDd/B,WAAa,WACX,IAAIgC,EAAW,EAAKC,cAGpB,OAFAD,EAAS,GAAGlD,UAAW,EAEhB,CAAC,CACJgB,MAAO,qBACPL,KAAM,WACNJ,KAAM,kBACNV,WAAYqD,GAEd,CACElC,MAAO,2BACPL,KAAM,gBACNJ,KAAM,gBACNV,WAAY,CAAC,CACTjE,KAAM,qBACNjB,MAAO,SACPqF,UAAU,GAEZ,CACEpE,KAAM,qBACNjB,MAAO,aAIb,CACEqG,MAAO,2BACPL,KAAM,iBACNJ,KAAM,eACN5F,MAAO,MAhFC,KAqFdyG,YAAc,SAACzB,GACbA,EAAQZ,SAAQ,SAAAoB,GACd,EAAKiD,SAASjD,EAAOQ,MAAQR,EAAON,YAAcM,EAAOxF,UAvF/C,KA2Fd8D,WAAa,SAACkC,GACZ,OAAO,EAAKyC,SAASzC,IA3FrBlH,KAAK2J,SAAW,CACdC,UAAW,cACX/D,cAAc,EACdgE,YAAa,ICLEC,E,kDAEnB,aAAe,IAAD,8BACZ,gBAOFrC,WAAa,WACX,IAAIgC,EAAW,EAAKC,cAGpB,OAFAD,EAAS,GAAGlD,UAAW,EAEhB,CAAC,CACJgB,MAAO,qBACPL,KAAM,WACNJ,KAAM,gBACNV,WAAYqD,GAEd,CACElC,MAAO,eACPL,KAAM,YACNJ,KAAM,gBACNV,WAAY,CAAC,CACTjE,KAAM,MACNjB,MAAO,UACPqF,UAAU,GAEZ,CACEpE,KAAM,qBACNjB,MAAO,kOAET,CACEiB,KAAM,MACNjB,MAAO,8BAET,CACEiB,KAAM,MACNjB,MAAO,8BAET,CACEiB,KAAM,qBACNjB,MAAO,wRAET,CACEiB,KAAM,qBACNjB,MAAO,4RA7CH,EAoDdwI,YAAc,WAEZ,IADA,IAAID,EAAW,GACNvF,EAAI,EAAGA,GAAK,EAAGA,IACtBuF,EAASpH,KAAK,CACZF,KAAK,GAAD,OAAK+B,EAAL,cAAYA,EAAZ,WACJhD,MAAOgD,IAGX,OAAOuF,GA5DK,EA+Dd7B,cAAgB,WAOd,IANA,IAAImC,EAAU,EAAK/E,WAAW,YAAY,GAAG9D,MACzCW,EAAa,EAAKA,WAAa,EAAKmI,cAAc,EAAKhF,WAAW,aAAa,GAAG9D,OAClFQ,EAAaC,KAAKyB,IAAI2G,EAASpI,KAAKsI,KAAKtI,KAAKC,KAAKC,EAAWC,UAC9D4G,EAAQ/G,KAAKuI,IAAIxI,EAAY,GAE7BsG,EAAY,GACP9D,EAAI,EAAGA,GAAKwE,EAAOxE,IAAK,CAC/B,IAAIiG,EAAOtI,EAAWqC,EAAI,GAC1B8D,EAAU3F,KAAa,MAAR8H,EAAe,KAAO,CACnChI,KAAMgI,EACNjJ,MAAOgD,IAIX,EAAKiE,aAAaI,EAAWC,gBAAgBR,EAAWU,KA9E5C,EAiFdpG,aAAe,WAEb,OADA,EAAKxB,OAAS,EACP,EAAKkH,WAnFA,EAsFdxH,YAAc,SAACC,GACb,OAAgB,MAATA,GAAiBA,IAAU,EAAKK,QAvF3B,EA0FdM,WAAa,WACX,GAAI,EAAKN,QAAU,EAAKkH,UAAUlG,OAAQ,OAAO,KACjD,IAAIwC,EAAU,EAAKxD,SACf2B,EAAY,EAAKZ,WAAWyC,GAChC,OAAqB,MAAb7B,EAAqB,KAAO,CAClCN,KAAMM,EACNvB,MAAOoD,IAhGG,EAoGd0F,cAAgB,SAACI,GACf,MAAY,YAARA,EAA0BC,MAAMC,KAAK,CACvCxI,OAAQH,KAAKuI,IAAI,EAAG,KACnB,SAAC/D,EAAGjC,GAAJ,OAAUA,EAAI,KACVkG,EAAIG,MAAM,KAtGjB,EAAKZ,SAAL,MAAyB,iCACzB,EAAKA,SAAL,MAAyB,gBACzB,EAAKA,SAAL,UAA6B,eAC7B,EAAKA,SAAL,cAAgC,EALpB,E,UAFsCV,GCAjCuB,E,kDAEnB,aAAe,IAAD,8BACZ,gBAMFd,YAAc,WACZ,MAAO,CAAC,CACJvH,KAAM,8BACNsI,QAAS,EACTC,aAAc,EACdC,aAAc,GACdvB,YAAa,IAEf,CACEjH,KAAM,8BACNsI,QAAS,EACTC,aAAc,GACdC,aAAc,GACdvB,YAAa,IAEf,CACEjH,KAAM,iCACNsI,QAAS,GACTC,aAAc,GACdC,aAAc,GACdvB,YAAa,IAEf,CACEjH,KAAM,iCACNsI,QAAS,IACTC,aAAc,IACdC,aAAc,IACdvB,YAAa,IAEf,CACEjH,KAAM,iCACNsI,QAAS,IACTC,aAAc,IACdC,aAAc,KACdvB,YAAa,MAzCL,EA8CdxB,cAAgB,WACd,IAAI6B,EAAW,EAAKzE,WAAW,YAC3B4F,EAAgB,EAAK5F,WAAW,iBAChCgD,EAAY,IACfyB,GAAY,EAAKC,eACjBpE,SAAQ,SAAAyE,GAEP,IADA,IAAIc,EAAU,IAAIC,IACXD,EAAQE,KAAOH,GAAe,CACnC,IAAII,EAAYzC,EAAWQ,kBAAkBgB,EAAQW,aAAcX,EAAQY,cACvExE,EAAIoC,EAAWQ,kBAAkBgB,EAAQU,QAASO,EAAYjB,EAAQU,SACtEQ,EAAID,EAAY7E,EAChB+E,EAAG,UAAM/E,EAAN,cAAa8E,GACpBJ,EAAQM,IAAID,EAAK,CACfjJ,YAAaiJ,EACbhJ,OAAQ,CACNC,KAAM,EAAKqC,YAAYwG,GACvB9J,MAAO8J,GAET5B,YAAaW,EAAQX,cAGzByB,EAAQvF,SAAQ,SAACpE,GACf8G,EAAU3F,KAAKnB,SAGnB,EAAKiH,aAAaH,IArElB,EAAK2B,SAAL,MAAyB,WACzB,EAAKA,SAAL,MAAyB,2BACzB,EAAKA,SAAL,cAAiC,GAJrB,E,UAFkCV,GCA7BmC,E,kDAEnB,aAAe,IAAD,8BACZ,gBAMF1B,YAAc,WACZ,MAAO,CAAC,CACJvH,KAAM,8BACNsI,QAAS,EACTC,aAAc,EACdC,aAAc,GACdvB,YAAa,IAEf,CACEjH,KAAM,8BACNsI,QAAS,EACTC,aAAc,GACdC,aAAc,GACdvB,YAAa,IAEf,CACEjH,KAAM,iCACNsI,QAAS,GACTC,aAAc,GACdC,aAAc,GACdvB,YAAa,IAEf,CACEjH,KAAM,iCACNsI,QAAS,IACTC,aAAc,IACdC,aAAc,IACdvB,YAAa,IAEf,CACEjH,KAAM,iCACNsI,QAAS,IACTC,aAAc,IACdC,aAAc,KACdvB,YAAa,MAzCL,EA8CdxB,cAAgB,WACd,IAAI6B,EAAW,EAAKzE,WAAW,YAC3B4F,EAAgB,EAAK5F,WAAW,iBAChCgD,EAAY,IACfyB,GAAY,EAAKC,eACjBpE,SAAQ,SAAAyE,GAEP,IADA,IAAIc,EAAU,IAAIC,IACXD,EAAQE,KAAOH,GAAe,CACnC,IAAIzE,EAAIoC,EAAWQ,kBAAkBgB,EAAQW,aAAcX,EAAQY,cAC/DM,EAAI1C,EAAWQ,kBAAkBgB,EAAQU,QAAStE,GAClD6E,EAAY7E,EAAI8E,EAChBC,EAAG,UAAM/E,EAAN,cAAa8E,GACpBJ,EAAQM,IAAID,EAAK,CACfjJ,YAAaiJ,EACbhJ,OAAQ,CACNC,KAAM,EAAKqC,YAAYwG,GACvB9J,MAAO8J,GAET5B,YAAaW,EAAQX,cAGzByB,EAAQvF,SAAQ,SAACpE,GACf8G,EAAU3F,KAAKnB,SAGnB,EAAKiH,aAAaH,IArElB,EAAK2B,SAAL,MAAyB,2BACzB,EAAKA,SAAL,MAAyB,cACzB,EAAKA,SAAL,cAAiC,GAJrB,E,UAFqCV,GCDhCoC,E,kDAEnB,WAAYC,GAAQ,IAAD,EAEjB,OAFiB,qBACjB,gBAiBF5B,YAAc,WAIZ,IAHA,IAAID,EAAW,GACX8B,EAAa,EAAKvG,WAAW,cAC7BwG,EAAe,EAAKxG,WAAW,gBAC1Bd,EAAIqH,EAAYrH,GAAKsH,EAActH,IAC1CuF,EAASpH,KAAK,CACZF,KAAK,GAAD,OAAK+B,EAAL,cAAYsH,GAChBtK,MAAOgD,IAGX,OAAOuF,GA5BU,EA+BnB7B,cAAgB,WACd,IAAI6B,EAAW,EAAKzE,WAAW,YAC3BwG,EAAe,EAAKxG,WAAW,gBAC/BgD,EAAY,IACfyB,GAAY,EAAKC,eACjBpE,SAAQ,SAAAyE,GACP,IAAK,IAAI7F,EAAI,EAAGA,GAAKsH,EAActH,IACjC8D,EAAU3F,KAAK,CACbJ,YAAY,GAAD,OAAK8H,EAAQ7I,MAAb,cAAwBgD,GACnChC,OAAQ,CACNC,KAAM,EAAKqC,YAAYuF,EAAQ7I,MAAQgD,GACvChD,MAAO6I,EAAQ7I,MAAQgD,QAK/B,EAAKiE,aAAaH,IA7CVsD,GAAS,GACf,KAAK,EACH,EAAK3B,SAAL,WAA8B,GAC9B,EAAKA,SAAL,aAAgC,GAChC,EAAKA,SAAL,MAAyB,mCACzB,EAAKA,SAAL,MAAyB,qBACzB,MACF,QACE,EAAKA,SAAL,WAA8B,EAC9B,EAAKA,SAAL,aAAgC,EAChC,EAAKA,SAAL,MAAyB,iCACzB,EAAKA,SAAL,MAAyB,uBAbZ,S,UAFmCV,GCAnCwC,E,kDACnB,WAAYvL,GAAQ,IAAD,8BACjB,cAAMA,IAcRwL,UAAY,SAACC,GACX,IAAIC,EAAS,EAAKA,OAAOtH,QACzBsH,EAAOC,OAASD,EAAOhG,MACvB,IAAIkG,EAAUF,EAAOG,WAAW,MAC5BC,EAASJ,EAAOC,OAAS,EAC7BC,EAAQG,UAAUD,EAAQA,GAC1BA,GAAkB,GAClB,EAAKF,QAAUA,EACf,EAAKE,OAASA,EACd,IAAIvD,GAAOkD,GAAU,YAAYpB,MAAM,KACnC2B,EAAOzD,EAAI,IAAM,IACjB0D,EAAS1D,EAAI,IAAM,IACnB2D,EAAS3D,EAAI,IAAM,IAEvB,EAAK4D,WACL,EAAKC,cACL,EAAKC,SAASL,EAAMC,EAAQC,IA/BX,EAkCnBC,SAAW,WACT,IAAIP,EAAU,EAAKA,QACfE,EAAS,EAAKA,OAClBF,EAAQU,YAGRV,EAAQW,IAAI,EAAG,EAAGT,EAAQ,EAAG,EAAIrK,KAAK+K,IACtCZ,EAAQa,UAAY,QACpBb,EAAQc,QA1CS,EAsDnBN,YAAc,WACZ,IAAIR,EAAU,EAAKA,QACfE,EAAS,EAAKA,OAClBF,EAAQU,YACRV,EAAQa,UAAY,QACpBb,EAAQe,KAAR,eAAgC,GAATb,EAAvB,YACAF,EAAQgB,aAAe,SACvBhB,EAAQiB,UAAY,SACpB,IAAK,IAAIpJ,EAAM,EAAGA,EAAM,GAAIA,IAAO,CACjC,IAAIqJ,EAAMrJ,EAAMhC,KAAK+K,GAAK,EAC1BZ,EAAQmB,OAAOD,GACflB,EAAQG,UAAU,EAAa,KAATD,GACtBF,EAAQmB,QAAQD,GAChBlB,EAAQoB,SAASvJ,EAAI6F,WAAY,EAAG,GACpCsC,EAAQmB,OAAOD,GACflB,EAAQG,UAAU,EAAY,IAATD,GACrBF,EAAQmB,QAAQD,KAtED,EA0EnBT,SAAW,SAACL,EAAMC,EAAQC,GACxB,IAAIJ,EAAS,EAAKA,OAIlBE,GADAA,GAAc,IACCvK,KAAK+K,GAAK,EACtBP,EAASxK,KAAK+K,GAAd,IACAN,EAASzK,KAAK+K,GAAd,MACH,EAAKS,SAASjB,EAAe,GAATF,EAAuB,IAATA,GAGlCG,EAAUA,EAASxK,KAAK+K,GAAK,GAAON,EAASzK,KAAK+K,GAAd,KACpC,EAAKS,SAAShB,EAAiB,GAATH,EAAuB,IAATA,GAGL,SAA3B,EAAKvH,oBACT2H,EAAUA,EAASzK,KAAK+K,GAAK,GAC7B,EAAKS,SAASf,EAAiB,GAATJ,EAAuB,IAATA,EAAe,SA3FlC,EA8FnBmB,SAAW,SAACC,EAAKtL,EAAQ8D,EAAOD,GAC9B,IAAImG,EAAU,EAAKA,QACnBnG,EAAQA,GAAS,QAGjBmG,EAAQU,YACRV,EAAQW,IAAI,EAAG,EAAG3K,EAAS8D,EAAQ,KAAO,EAAG,EAAIjE,KAAK+K,IACtDZ,EAAQa,UAAYhH,EACpBmG,EAAQc,OAGRd,EAAQU,YACRV,EAAQuB,YAAc1H,EACtBmG,EAAQwB,UAAY1H,EACpBkG,EAAQyB,QAAU,QAClBzB,EAAQ0B,OAAO,EAAG,GAClB1B,EAAQmB,OAAOG,GACftB,EAAQ2B,OAAO,GAAI3L,GACnBgK,EAAQ4B,SACR5B,EAAQmB,QAAQG,IA/GhB,EAAKxB,OAAS1G,IAAMC,YAFH,E,sEAKOwI,GACxB3N,KAAKyE,kBAAoBkJ,EAAUlJ,kBACnCzE,KAAK0L,UAAUiC,EAAUhC,U,0CAIzB3L,KAAKyE,kBAAoBzE,KAAKE,MAAMuE,kBACpCzE,KAAK0L,UAAU1L,KAAKE,MAAMyL,U,+BAyG1B,OACE,wBAAQpJ,UAAU,QAAQsC,IAAK7E,KAAK4L,OAAQhG,MAAO5F,KAAKE,MAAM0F,OAAS,U,GAvH1CjD,aCEdiL,E,kDAGnB,aAAe,IAAD,8BACZ,gBAHFC,aAAe,MAED,EAOdpG,WAAa,WACX,IAAIgC,EAAW,EAAKC,cAGpB,OAFAD,EAAS,GAAGlD,UAAW,EAEhB,CACL,CACEgB,MAAO,qBACPL,KAAM,WACNJ,KAAM,kBACNV,WAAYqD,GAEd,CACElC,MAAO,2BACPL,KAAM,iBACNJ,KAAM,eACN5F,MAAO,MAtBC,EA2BdwI,YAAc,WACZ,MAAO,CAAC,CACJvH,KAAM,qBACNxC,gBAAiB,KACjByJ,YAAa,IAEf,CACEjH,KAAM,qBACNxC,gBAAiB,KACjByJ,YAAa,IAEf,CACEjH,KAAM,gBACNxC,gBAAiB,IACjByJ,YAAa,IAEf,CACEjH,KAAM,gBACNxC,gBAAiB,GACjByJ,YAAa,IAEf,CACEjH,KAAM,qBACNxC,gBAAiB,EACjByJ,YAAa,OAnDL,EAwDdxB,cAAgB,WACd,IAAI6B,EAAW,EAAKzE,WAAW,YAC3B4F,EAAgB,EAAK5F,WAAW,iBAChCgD,EAAY,IACfyB,GAAY,EAAKC,eACjBpE,SAAQ,SAAAyE,GAEP,IADA,IAAIc,EAAU,IAAIC,IACXD,EAAQE,KAAOH,GAAe,CACnC,IAAInG,EAAgD,IAA5BsF,EAAQpK,gBAC5BqJ,EAAST,EAAWM,aAAa,EAAKgF,aAAe,GACzD7E,GAAkBA,EAASe,EAAQpK,gBACnC,IAAIuL,EAAM,EAAK1G,YAAYwE,EAAQvE,GACnCoG,EAAQM,IAAID,EAAK,CACfjJ,YAAa,cAAC,EAAD,CAAO0J,OAAQT,EAAKzG,kBAAmBA,EAAkB+E,aACtEtH,OAAQ,CACNC,KAAM+I,EACNhK,MAAO8H,GAETI,YAAaW,EAAQX,YACrBzJ,gBAAiBoK,EAAQpK,gBACzB8E,kBAAmBA,IAGvBoG,EAAQvF,SAAQ,SAACpE,GACf8G,EAAU3F,KAAKnB,SAGnB,EAAKiH,aAAaH,IAnFN,EAsFdmB,gBAAkB,SAACnH,GAKjB,IAJA,IAAIE,EAASF,EAASE,OAAOhB,MACzBkI,EAAcpH,EAASoH,YAAcpH,EAASrC,gBAC9CA,EAAkBqC,EAASrC,gBAC3B0J,EAAQ,GACHnF,EAAIvC,KAAK8B,IAAI,EAAGvB,EAASkH,GAAclF,EAAIvC,KAAKyB,IAAIlB,EAASkH,EAAa,EAAKyE,aAAe,GAAI3J,GAAKvE,EAC1GuE,IAAMhC,GAAQmH,EAAMhH,KAAK,CAC3BF,KAAM,EAAKqC,YAAYN,EAAGlC,EAASyC,mBACnCvD,MAAOgD,IAIX,IAAIoF,EAAc,EAAKtE,WAAW,eAAiB,EAC/CZ,EAAUmE,EAAWC,gBAAgBa,EAAOC,GAKhD,OAJAlF,EAAQC,OAAOkE,EAAWM,aAAaS,GAAc,EAAG,CACtDnH,KAAM,EAAKqC,YAAYtC,EAAQF,EAASyC,mBACxCvD,MAAOgB,IAEFkC,GAxGK,EA2GdI,YAAc,SAACtD,EAAO4M,GACpB,IAAI5B,EAAOvK,KAAK8D,MAAMvE,EAAK,MAAgB,EACvCiL,EAASxK,KAAK8D,MAAMvE,EAAK,KAAe,IACxCkL,EAASlL,EAAQ,GACjBa,EAAM,UAAMmK,EAAK1C,WAAWuE,SAAS,EAAG,KAAlC,YAA0C5B,EAAO3C,WAAWuE,SAAS,EAAG,MAGlF,OAFKD,IAAgB/L,GAAM,WAAQqK,EAAO5C,WAAWuE,SAAS,EAAG,OAE1DhM,GAhHP,EAAK4H,SAAL,MAAyB,QACzB,EAAKA,SAAL,MAAyB,2BACzB,EAAKA,SAAL,cAAiC,GAJrB,E,UAH+BV,GCIlC+E,EAAY,CAAC,CACtBC,KAAM,iBACN1G,MAAO,iCACPqC,UAAW,cAAC,EAAD,CAAU3I,aAAc,IAAI6I,KAE3C,CACImE,KAAM,YACN1G,MAAO,2BACPqC,UAAW,cAAC,EAAD,CAAU3I,aAAc,IAAIuJ,KAE3C,CACIyD,KAAM,eACN1G,MAAO,2BACPqC,UAAW,cAAC,EAAD,CAAU3I,aAAc,IAAImK,KAE3C,CACI6C,KAAM,sBACN1G,MAAO,iCACPqC,UAAW,cAAC,EAAD,CAAU3I,aAAc,IAAIoK,KAE3C,CACI4C,KAAM,wBACN1G,MAAO,mCACPqC,UAAW,cAAC,EAAD,CAAU3I,aAAc,IAAIoK,EAA2B,MAEtE,CACI4C,KAAM,SACN1G,MAAO,2BACPqC,UAAW,cAAC,EAAD,CAAU3I,aAAc,IAAI2M,MC1BtBM,E,4MAEnBC,KAAO,WACL,OAAO,sBAAK5L,UAAU,OAAf,UACL,4EACA,6BACGyL,EAAUxL,KAAI,SAAC4L,EAAOlK,GAAR,OACb,6BACE,cAAC,IAAD,CAAM3B,UAAU,YAAY8L,GAAID,EAAMH,KAAtC,SAA6CG,EAAM7G,SAD5CrD,Y,uDAQf,OACE,cAAC,IAAD,UACE,qBAAK3B,UAAU,MAAf,SACE,eAAC,IAAD,WACGyL,EAAUxL,KAAI,SAAC4L,EAAOlK,GAAR,OACb,cAAC,IAAD,CAAe+J,KAAI,UAAKG,EAAMH,MAAQrE,UAAW,kBAAMwE,EAAMxE,YAAjD1F,MAEd,cAAC,IAAD,CAAOoK,OAAK,EAAZ,SAActO,KAAKmO,oB,GAtBExL,aCLjC4L,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d957290b.chunk.js","sourcesContent":["export default class Timer {\n  constructor(callback) {\n    this.intervalSeconds = 0.1;\n    this.durationSeconds = 0;\n    this.callback = callback;\n  }\n\n  start = () => {\n    this.intervalId = setInterval(() => {\n      this.durationSeconds += this.intervalSeconds;\n      if (this.callback) this.callback(this.durationSeconds);\n    }, this.intervalSeconds * 1000);\n  }\n\n  stop = () => {\n    if (this.intervalId) clearInterval(this.intervalId);\n  }\n\n  restart = () => {\n    this.stop();\n    this.durationSeconds = 0;\n    this.start();\n  }\n\n  getDuration = () => {\n    return this.durationSeconds;\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class SchulteTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    this.results = [];\n    this.timer = new Timer(this.updateTime);\n    this.answerTimer = new Timer();\n\n    this.state = {\n      characters: this.questionBank.nextQuestion(),\n      cursor: this.questionBank.nextCursor(),\n      clicked: {},\n      time: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timer.start();\n    this.answerTimer.start();\n  }\n\n  componentWillUnmount() {\n    this.timer.stop();\n    this.answerTimer.stop();\n  }\n\n  updateTime = (seconds) => {\n    this.setState({ time: `${seconds.toFixed(1)}s` });\n  }\n\n  checkAnswer = (reply) => {\n    this.answerTimer.stop();\n    clearTimeout(this.effectId);\n    let sytle = \"incorrect\";\n    let cursor = this.state.cursor;\n    let correct = this.questionBank.checkAnswer(reply.value);\n    this.logAnswer(reply);\n\n    if (correct) {\n      sytle = \"correct\";\n      cursor = this.questionBank.nextCursor();\n      if (cursor === null) {\n        this.timer.stop();\n        this.setState({ time: null });\n        this.props.onFinish(this.results);\n        this.results = [];\n        return;\n      }\n    }\n\n    this.setState({\n      clicked: {\n        value: reply.value,\n        sytle: sytle\n      },\n      cursor: cursor\n    });\n    this.effectId = setTimeout(() => {\n      this.setState({ clicked: {} });\n    }, 500);\n    this.answerTimer.restart();\n  }\n\n  logAnswer = (reply) => {\n    let squareRoot = Math.sqrt(this.state.characters.length);\n    let result = {\n      question: {\n        description: `${squareRoot} x ${squareRoot} 格`,\n        answer: {\n          text: `順序 ${this.state.cursor.text}`\n        }\n      },\n      reply: reply.text,\n      correct: this.questionBank.checkAnswer(reply.value),\n      duration: this.answerTimer.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div>\n        <div className=\"schulte-table\">\n          <div className=\"cursor\">按下：<b>{this.state.cursor.text}</b></div>\n          <div className=\"time\">{this.state.time}</div>\n          <div className={`characters size-${this.state.characters.length}`}>\n            {this.state.characters.map((character) =>\n              character && <div key={character.value}\n                className={`cell ${(clicked.value === character.value ? clicked.sytle : \"\")}`}\n                onClick={() => this.checkAnswer(character)}><span>{character.text}</span></div>\n            )}\n          </div>\n        </div>\n      </div >\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Timer from \"../libs/utils/timer\";\n\nexport default class Countdown extends Component {\n\n  constructor(props) {\n    super(props);\n    this.maximum = parseFloat(props.seconds || 10);\n    this.timer = new Timer(this.countdown);\n    this.state = { time: this.maximum };\n  }\n\n  reset = () => {\n    this.timer.restart();\n  }\n\n  pause = () => {\n    this.timer.stop();\n  }\n\n  resume = () => {\n    this.timer.start();\n  }\n\n  countdown = () => {\n    this.setState({ time: this.maximum - this.timer.getDuration() });\n    this.props.onChanged(this.state.time);\n    if (this.state.time > 0) return;\n    this.timeout();\n  }\n\n  timeout = () => {\n    this.timer.stop();\n    this.props.timeout();\n  }\n\n  getDuration = () => {\n    return Math.min(this.maximum, this.timer.getDuration());\n  }\n\n  getStatus = () => {\n    let rate = Math.round(this.state.time / this.maximum * 100);\n    if (rate < 20) return \"danger\";\n    else if (rate < 50) return \"warning\";\n    return \"\";\n  }\n\n  render() {\n    return (\n      <progress className={this.getStatus()} max={this.maximum} value={this.state.time.toFixed(1)}></progress>\n    );\n  }\n}","import \"../styles/schulte-table.css\";\nimport React, { Component } from \"react\";\n\nexport default class NumericKeypad extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicked: {}\n    };\n\n    this.numbers = [];\n    for (let i = 1; i <= 9; i++) {\n      this.numbers.push(i);\n    }\n    this.clear();\n  }\n\n  onClick = (num) => {\n    this.input += `${num}`;\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onBack = () => {\n    if (this.input.length <= 1)\n      this.clear();\n    else\n      this.input = this.input.substring(0, this.input.length - 1);\n\n    if (this.props.onChanged)\n      this.props.onChanged(this.input);\n  }\n\n  onConfirm = () => {\n    if (this.input === \"\") return;\n    this.props.onConfirm(this.input);\n    this.clear();\n  }\n\n  clear = () => {\n    this.input = \"\";\n  }\n\n  render() {\n    const { clicked } = this.state;\n    return (\n      <div className=\"numeric-keypad\">\n        <div className=\"numbers\">\n          {this.numbers.map(num =>\n            <div key={num}\n              className={`cell ${(clicked.num === num ? clicked.sytle : \"\")}`}\n              onClick={() => this.onClick(num)}><span>{num}</span></div>\n          )}\n          <div className=\"cell\" onClick={() => this.onBack()}><span className=\"icon-backspace\"></span></div>\n          <div className={`cell ${(clicked.num === 0 ? clicked.sytle : \"\")}`}\n            onClick={() => this.onClick(0)}><span>0</span></div>\n          <div className=\"cell\" onClick={() => this.onConfirm()}><span className=\"icon-check\"></span></div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport Countdown from \"./countdown.jsx\";\nimport NumericKeypad from \"./numeric-keypad.jsx\";\n\nexport default class QuizAttempt extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.questionBank = props.questionBank;\n    let answerMethod = this.questionBank.getSetting(\"anwser-method\");\n    let timeoutSeconds = this.questionBank.getSetting(\"timeoutSeconds\");\n\n    this.results = [];\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      reply: \"\",\n      timeoutSeconds: timeoutSeconds,\n      answerMethod: answerMethod == null ? \"choice\" : answerMethod[0].value\n    };\n    this.countdown = React.createRef();\n    this.numericKeypad = React.createRef();\n  }\n\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  componentWillUnmount() {\n    this.countdown.current.pause();\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      correct: null\n    });\n\n    let question = this.questionBank.nextQuestion();\n    if (question === null) {\n      this.props.onFinish(this.results);\n      this.results = [];\n      return;\n    }\n\n    this.state.choices.splice(0, this.state.choices.length);\n    question.reply = \"\";\n    this.setState(question);\n    this.countdown.current.reset();\n    if (this.numericKeypad.current)\n      this.numericKeypad.current.clear();\n  }\n\n  checkAnswer = (reply) => {\n    reply = reply || \"\";\n    this.countdown.current.pause();\n    let correct = this.questionBank.checkAnswer(reply);\n    this.logAnswer(reply);\n\n    this.setState({\n      correct: correct,\n      reply: reply\n    });\n    if (correct) this.nextQuestion();\n  }\n\n  logAnswer = (reply) => {\n    let result = {\n      question: this.state,\n      reply: this.questionBank.convertText(reply, this.state.disableSecondhand),\n      correct: this.questionBank.checkAnswer(reply),\n      duration: this.countdown.current.getDuration()\n    };\n    this.results.push(result);\n  }\n\n  onCountdownChanged = (value) => {\n    this.setState({ countdown: value });\n  }\n\n  renderSwitch = () => {\n    switch (this.state.answerMethod) {\n      case \"filling\":\n        return <NumericKeypad ref={this.numericKeypad}\n          onChanged={value => this.setState({ reply: value })}\n          onConfirm={value => this.checkAnswer(parseInt(value))} />\n      default:\n        return <ul className=\"choices\">\n          {this.state.choices.map((choice, i) =>\n            <li key={i} onClick={() => this.checkAnswer(choice.value)} ><span>{choice.text}</span></li>\n          )}\n        </ul>\n    }\n  }\n\n  render() {\n    return (\n      <div className={`answer-method ${this.state.answerMethod}`}>\n        <div className={`question ${this.state.countdown < 3 && this.state.correct !== false && \"blink\"}`}>\n          {this.state.description} {this.state.answerMethod === \"filling\" && <span>{`= ${this.state.reply}`}</span>}\n        </div>\n        {this.state.correct === false\n          ? <div>\n            <p>{this.state.reply === \"\" ? \"時間到！\" : \"答錯了！\"} 答案是 {this.state.answer.text}</p>\n            <span className=\"btn large blue\" onClick={() => this.nextQuestion()}>下一題</span>\n          </div>\n          : this.renderSwitch()}\n        <Countdown ref={this.countdown}\n          seconds={this.state.timeoutSeconds}\n          timeout={() => this.checkAnswer(this.state.reply)}\n          onChanged={value => this.onCountdownChanged(value)} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizResult extends Component {\n  constructor(props) {\n    super(props);\n\n    let correct = 0;\n    let incorrect = 0;\n    let timeout = 0;\n    let duration = 0;\n    let results = this.props.results || [];\n    results.forEach(result => {\n      if (result.correct) correct++;\n      else if (result.reply) incorrect++;\n      else timeout++;\n      duration += result.duration;\n    });\n    this.state = {\n      results: results,\n      correct: correct,\n      incorrect: incorrect,\n      timeout: timeout,\n      avgDuration: results.length && duration / results.length,\n      duration: duration,\n      score: results.length && Math.floor(correct / results.length * 100),\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={() => this.props.onClose()}>x</span>\n          <table>\n            <tbody>\n              <tr className=\"correct\"><td>答對次數：</td><td>{this.state.correct}</td></tr>\n              <tr className={this.state.incorrect > 0 ? \"incorrect\" : \"\"}><td>答錯次數：</td><td>{this.state.incorrect}</td></tr>\n              {this.state.timeout > 0 && <tr className=\"incorrect\"><td>逾時次數：</td><td>{this.state.timeout}</td></tr>}\n              <tr><td>平均耗時：</td><td>{this.state.avgDuration.toFixed(1)} 秒</td></tr>\n              <tr><td>全部耗時：</td><td>{this.state.duration.toFixed(1)} 秒</td></tr>\n            </tbody>\n          </table>\n          <hr />\n          {this.state.incorrect > 0 &&\n            <table>\n              <thead>\n                <tr>\n                  <th style={{ width: \"5%\" }}></th>\n                  <th>題目</th>\n                  <th style={{ width: \"20%\" }}>解答</th>\n                  <th style={{ width: \"20%\" }}>作答</th>\n                  <th style={{ width: \"25%\" }}>耗時(秒)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.results.map((result, i) => result.correct ||\n                  <tr key={i} className={result.correct ? \"correct\" : \"incorrect\"}>\n                    <td><b /></td>\n                    <td>{result.question.description}</td>\n                    <td>{result.question.answer.text}</td>\n                    <td>{result.reply === \"\" ? \"--\" : result.reply}</td>\n                    <td>{result.duration.toFixed(1)}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>}\n          <div className=\"modal-footer\">\n            <span className=\"btn\" onClick={() => this.props.onClose()}>關閉</span>\n            {this.props.enableReview && this.state.incorrect >= 3 &&\n              <span className=\"btn blue\" onClick={() => this.props.onReview()}>複習</span>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class QuizSetting extends Component {\n  constructor(props) {\n    super(props);\n    let questionBank = this.props.questionBank;\n    let title = questionBank.getTitle();\n    let options = questionBank.getOptions();\n\n    this.state = {\n      title: title,\n      options: options,\n      ready: true\n    };\n  }\n\n  onStart = () => {\n    if (this.state.ready > 0)\n      this.props.onStart(this.state.options.map(x => {\n        if (x.selections != null)\n          x.selections = x.selections.filter(s => s.selected);\n        return x;\n      }));\n  }\n\n  onSelected = (event, option) => {\n    option.selections.forEach(selection => {\n      if (selection.text === event.target.value) {\n        selection.selected = event.target.checked;\n      } else if (option.type === \"single-choice\") {\n        selection.selected = false;\n      }\n    });\n    option.selectedAll = option.selections.filter(x => x.selected !== true).length === 0;\n\n    this.updateMenuItem(option);\n  }\n\n  onSlide = (event, option) => {\n    option.value = event.target.value;\n    this.updateMenuItem(option);\n    this.setState(state => {\n      state.options.forEach(x => {\n        if (x.name === option.name) x = option;\n      });\n    });\n  }\n\n  toggleAll = (name) => {\n    let option = this.state.options.filter(x => x.name === name)[0];\n    let selections = option.selections;\n    option.selectedAll = !option.selectedAll;\n    selections.forEach(selection => {\n      selection.selected = option.selectedAll;\n    })\n\n    this.updateMenuItem(option);\n  }\n\n  updateMenuItem = (option) => {\n    let ready = true;\n    this.setState(state => {\n      state.options.forEach(x => {\n        if (x.name === option.name) x = option;\n        if (x.selections != null && x.selections.filter(s => s.selected).length === 0)\n          ready = false;\n      });\n\n      return {\n        options: state.options,\n        ready: ready\n      }\n    });\n  }\n\n  renderSwitch = (option) => {\n    switch (option.type) {\n      case \"single-choice\":\n      case \"multiple-choice\":\n        return <ul className=\"sections\">\n          {option.selections.map((selection, j) =>\n            <li key={j}>\n              <label>\n                <input type=\"checkbox\"\n                  value={selection.text}\n                  onChange={e => this.onSelected(e, option)}\n                  checked={selection.selected || false} />\n                <span>{selection.text}</span>\n              </label>\n            </li>\n          )}\n          {option.type === \"multiple-choice\" && <li>\n            <label>\n              <input type=\"checkbox\" onChange={() => this.toggleAll(option.name)} checked={option.selectedAll || false} />\n              <span>全選</span>\n            </label>\n          </li>}\n        </ul>;\n      case \"range-slider\":\n        return <div className=\"sections\">\n          <input className=\"slider\" type=\"range\" min=\"3\" max=\"60\"\n            value={option.value} onChange={e => this.onSlide(e, option)} />\n            {option.value} 秒\n        </div>;\n      default:\n        return <div></div>;\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.title}</h2>\n        {this.state.options.map((option, i) =>\n          <section key={i}>\n            <h3>{option.title}</h3>\n            {this.renderSwitch(option)}\n          </section>\n        )}\n        <nav>\n          <span className={`btn large ${this.state.ready ? \"green\" : \"disable\"}`} onClick={() => this.onStart()}>開始</span>\n        </nav>\n      </div>\n    );\n  }\n}","import \"../styles/quiz.css\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SchulteTable from \"../components/schulte-table.jsx\";\nimport QuizAttempt from \"../components/quiz-attempt.jsx\";\nimport QuizResult from \"../components/quiz-result.jsx\";\nimport QuizSetting from \"../components/quiz-setting.jsx\";\n\nexport class QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      answer: {},\n      choices: [],\n      results: []\n    };\n    this.quizAttempt = React.createRef();\n  }\n\n  onStart = (options) => {\n    let questionBank = this.props.questionBank;\n    questionBank.setSettings(options);\n    questionBank.initQuestions();\n\n    this.setState({\n      componentName: questionBank.getSetting(\"component\"),\n      enableReview: questionBank.getSetting(\"enableReview\")\n    });\n  }\n\n  showResult = (results) => {\n    this.state.results.splice(0, this.state.results.length);\n    this.setState({\n      isShowResult: true,\n      results: results\n    });\n  }\n\n  onReview = () => {\n    let questions = [];\n    let incorrectQuestions = this.state.results\n      .filter(x => !x.correct)\n      .map(x => x.question);\n    for (let i = 0; i < 3; i++)\n      questions = questions.concat(incorrectQuestions);\n    this.props.questionBank.setQuestions(questions);\n\n    this.quizAttempt.current.nextQuestion();\n    this.setState({ isShowResult: false });\n  }\n\n  onClose = () => {\n    this.props.history.push(\"/\");\n  }\n\n  renderSwitch = (componentName) => {\n    switch (componentName) {\n      case \"QuizAttempt\":\n        return <QuizAttempt ref={this.quizAttempt}\n          questionBank={this.props.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      case \"SchulteTable\":\n        return <SchulteTable\n          questionBank={this.props.questionBank}\n          onFinish={results => this.showResult(results)} />;\n      default:\n        return <QuizSetting\n          questionBank={this.props.questionBank}\n          onStart={option => this.onStart(option)} />;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          {this.state.isShowResult || <span className=\"close\" onClick={() => this.onClose()}>x</span>}\n        </div>\n        {this.renderSwitch(this.state.componentName)}\n        {this.state.isShowResult &&\n          <QuizResult\n            enableReview={this.state.enableReview}\n            results={this.state.results}\n            onReview={() => this.onReview()}\n            onClose={() => this.onClose()} />}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(QuizPage);","export default class RandomUtil {\n\n    static pickRandomItems = (arr, count) => {\n        let items = []\n        for (let i = 0; i < count; i++) {\n            let index = this.getRandomInt(arr.length);\n            let item = arr.splice(index, 1)[0];\n            items.push(item);\n        }\n        return items;\n    }\n\n    static getRandomInt = (max) => {\n        return this.getRandomIntRange(0, max);\n    }\n\n    static getRandomIntRange = (min, max) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n}","import RandomUtil from \"../utils/random.js\";\n\nexport default class QuestionBankBase {\n\n  constructor() {\n    this.settings = {\n      component: \"QuizAttempt\",\n      enableReview: true,\n      choiceCount: 6\n    };\n  }\n\n  getTitle = () => this.getSetting(\"title\");\n  getRoute = () => this.getSetting(\"route\");\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange || 20;\n    let seeds = [];\n    for (let i = Math.max(2, answer - answerRange); i < answer + answerRange; i++) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i),\n        value: i\n      });\n    }\n\n    let randomCount = this.getSetting(\"choiceCount\") - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer),\n      value: answer\n    });\n    return choices;\n  }\n\n  setQuestions = (questions) => {\n    this.questions = questions || [];\n  }\n\n  nextQuestion = () => {\n    if (this.questions.length === 0) return null;\n    let index = RandomUtil.getRandomInt(this.questions.length);\n    let question = this.questions.splice(index, 1)[0];\n    question.choices = this.generateChoices(question);\n    return this.currentQuestion = question;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply.toString() === this.currentQuestion.answer.value.toString();\n  }\n\n  convertText = (value) => {\n    return value.toString();\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    return [{\n        title: \"請選擇\",\n        name: \"sections\",\n        type: \"multiple-choice\",\n        selections: sections\n      },\n      {\n        title: \"答題方式\",\n        name: \"anwser-method\",\n        type: \"single-choice\",\n        selections: [{\n            text: \"選擇題\",\n            value: \"choice\",\n            selected: true\n          },\n          {\n            text: \"填充題\",\n            value: \"filling\"\n          }\n        ]\n      },\n      {\n        title: \"答題限時\",\n        name: \"timeoutSeconds\",\n        type: \"range-slider\",\n        value: 10\n      }\n    ];\n  }\n\n  setSettings = (options) => {\n    options.forEach(option => {\n      this.settings[option.name] = option.selections || option.value;\n    });\n  }\n\n  getSetting = (name) => {\n    return this.settings[name];\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SchulteTableQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"title\"] = \"舒爾特方格\";\n    this.settings[\"route\"] = \"schulte-table\";\n    this.settings[\"component\"] = \"SchulteTable\";\n    this.settings[\"enableReview\"] = false;\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    return [{\n        title: \"請選擇\",\n        name: \"sections\",\n        type: \"single-choice\",\n        selections: sections\n      },\n      {\n        title: \"文字\",\n        name: \"character\",\n        type: \"single-choice\",\n        selections: [{\n            text: \"123\",\n            value: \"numeral\",\n            selected: true\n          },\n          {\n            text: \"ㄅㄆㄇ\",\n            value: \"ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦ\"\n          },\n          {\n            text: \"ABC\",\n            value: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n          },\n          {\n            text: \"abc\",\n            value: \"abcdefghijklmnopqrstuvwxyz\"\n          },\n          {\n            text: \"あいう\",\n            value: \"あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん\"\n          },\n          {\n            text: \"アイウ\",\n            value: \"アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン\"\n          }\n        ]\n      }\n    ];\n  }\n\n  getSections = () => {\n    let sections = [];\n    for (let i = 3; i <= 9; i++) {\n      sections.push({\n        text: `${i} x ${i} 格`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  initQuestions = () => {\n    let section = this.getSetting(\"sections\")[0].value;\n    let characters = this.characters = this.getCharacters(this.getSetting(\"character\")[0].value);\n    let squareRoot = Math.min(section, Math.ceil(Math.sqrt(characters.length)));\n    let count = Math.pow(squareRoot, 2);\n\n    let questions = [];\n    for (let i = 1; i <= count; i++) {\n      let char = characters[i - 1];\n      questions.push(char == null ? null : {\n        text: char,\n        value: i\n      });\n    }\n\n    this.setQuestions(RandomUtil.pickRandomItems(questions, count));\n  }\n\n  nextQuestion = () => {\n    this.cursor = 0;\n    return this.questions;\n  }\n\n  checkAnswer = (reply) => {\n    return reply != null && reply === this.cursor;\n  }\n\n  nextCursor = () => {\n    if (this.cursor >= this.questions.length) return null;\n    let current = this.cursor++;\n    let character = this.characters[current];\n    return (character == null) ? null : {\n      text: character,\n      value: current\n    };\n  }\n\n  getCharacters = (str) => {\n    if (str === \"numeral\") return Array.from({\n      length: Math.pow(9, 2)\n    }, (x, i) => i + 1);\n    return str.split(\"\");\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class AdditionQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"addition\";\n    this.settings[\"title\"] = \"加法練習\";\n    this.settings[\"questionCount\"] = 10;\n  }\n\n  getSections = () => {\n    return [{\n        text: \"10 以內加法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內加法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數加法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數加法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數加法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9999,\n        answerRange: 50\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\");\n    let questionCount = this.getSetting(\"questionCount\");\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < questionCount) {\n        let summation = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let x = RandomUtil.getRandomIntRange(section.minimum, summation - section.minimum);\n        let y = summation - x;\n        let key = `${x} + ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    this.setQuestions(questions);\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\n\nexport default class SubtractionQuestionBank extends QuestionBankBase {\n\n  constructor() {\n    super();\n    this.settings[\"title\"] = \"減法練習\";\n    this.settings[\"route\"] = \"subtraction\";\n    this.settings[\"questionCount\"] = 10;\n  }\n  \n  getSections = () => {\n    return [{\n        text: \"10 以內減法\",\n        minimum: 0,\n        minSummation: 1,\n        maxSummation: 10,\n        answerRange: 10\n      },\n      {\n        text: \"20 以內減法\",\n        minimum: 0,\n        minSummation: 10,\n        maxSummation: 20,\n        answerRange: 10\n      },\n      {\n        text: \"兩位數減法\",\n        minimum: 10,\n        minSummation: 20,\n        maxSummation: 99,\n        answerRange: 20\n      },\n      {\n        text: \"三位數減法\",\n        minimum: 100,\n        minSummation: 200,\n        maxSummation: 999,\n        answerRange: 50\n      },\n      {\n        text: \"四位數減法\",\n        minimum: 1000,\n        minSummation: 2000,\n        maxSummation: 9909,\n        answerRange: 50\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\");\n    let questionCount = this.getSetting(\"questionCount\");\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < questionCount) {\n        let x = RandomUtil.getRandomIntRange(section.minSummation, section.maxSummation);\n        let y = RandomUtil.getRandomIntRange(section.minimum, x);\n        let summation = x - y;\n        let key = `${x} - ${y}`;\n        hashMap.set(key, {\n          description: key,\n          answer: {\n            text: this.convertText(summation),\n            value: summation\n          },\n          answerRange: section.answerRange\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    this.setQuestions(questions);\n  }\n}","import QuestionBankBase from \"./base.js\";\n\nexport default class MultiplicationQuestionBank extends QuestionBankBase {\n\n  constructor(level) {\n    super();\n    switch (level || 1) {\n      case 2:\n        this.settings[\"multiplier\"] = 11;\n        this.settings[\"multiplicand\"] = 19;\n        this.settings[\"title\"] = \"19 x 19 乘法練習\";\n        this.settings[\"route\"] = \"multiplication-9x9\";\n        break;\n      default:\n        this.settings[\"multiplier\"] = 2;\n        this.settings[\"multiplicand\"] = 9;\n        this.settings[\"title\"] = \"9 x 9 乘法練習\";\n        this.settings[\"route\"] = \"multiplication-19x19\";\n        break;\n    }\n  }\n\n  getSections = () => {\n    let sections = [];\n    let multiplier = this.getSetting(\"multiplier\");\n    let multiplicand = this.getSetting(\"multiplicand\");\n    for (let i = multiplier; i <= multiplicand; i++) {\n      sections.push({\n        text: `${i} x ${multiplicand}`,\n        value: i\n      });\n    }\n    return sections;\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\");\n    let multiplicand = this.getSetting(\"multiplicand\");\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      for (let i = 2; i <= multiplicand; i++) {\n        questions.push({\n          description: `${section.value} x ${i}`,\n          answer: {\n            text: this.convertText(section.value * i),\n            value: section.value * i\n          },\n        });\n      }\n    });\n    this.setQuestions(questions);\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.disableSecondhand = nextProps.disableSecondhand;\n    this.drawClock(nextProps.hhmmss);\n  }\n\n  componentDidMount() {\n    this.disableSecondhand = this.props.disableSecondhand;\n    this.drawClock(this.props.hhmmss);\n  }\n\n  drawClock = (hhmmss) => {\n    let canvas = this.canvas.current;\n    canvas.height = canvas.width;\n    let context = canvas.getContext(\"2d\");\n    let radius = canvas.height / 2;\n    context.translate(radius, radius);\n    radius = radius * 0.90;\n    this.context = context;\n    this.radius = radius;\n    let arr = (hhmmss || \"00:00:00\").split(\":\");\n    let hour = arr[0] || \"0\";\n    let minute = arr[1] || \"0\";\n    let second = arr[2] || \"0\";\n\n    this.drawFace();\n    this.drawNumbers();\n    this.drawTime(hour, minute, second);\n  }\n\n  drawFace = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n\n    // Base Plate\n    context.arc(0, 0, radius, 0, 2 * Math.PI);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    // Outside frame\n    // let grad = context.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n    // grad.addColorStop(0, \"red\");\n    // grad.addColorStop(0.5, \"yellow\");\n    // grad.addColorStop(1, \"green\");\n    // context.strokeStyle = grad;\n    // context.lineWidth = radius * 0.1;\n    // context.stroke();\n  }\n\n  drawNumbers = () => {\n    let context = this.context;\n    let radius = this.radius;\n    context.beginPath();\n    context.fillStyle = \"black\";\n    context.font = `bold ${radius * 0.2}px arial`;\n    context.textBaseline = \"middle\";\n    context.textAlign = \"center\";\n    for (let num = 1; num < 13; num++) {\n      let ang = num * Math.PI / 6;\n      context.rotate(ang);\n      context.translate(0, -radius * 0.85);\n      context.rotate(-ang);\n      context.fillText(num.toString(), 0, 0);\n      context.rotate(ang);\n      context.translate(0, radius * 0.85);\n      context.rotate(-ang);\n    }\n  }\n\n  drawTime = (hour, minute, second) => {\n    let radius = this.radius;\n\n    // Hour\n    hour = hour % 12;\n    hour = (hour * Math.PI / 6) +\n      (minute * Math.PI / (6 * 60)) +\n      (second * Math.PI / (360 * 60));\n    this.drawHand(hour, radius * 0.4, radius * 0.07);\n\n    // Minute\n    minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));\n    this.drawHand(minute, radius * 0.7, radius * 0.05);\n\n    // Second\n    if (this.disableSecondhand === \"true\") return;\n    second = (second * Math.PI / 30);\n    this.drawHand(second, radius * 0.6, radius * 0.02, \"red\");\n  }\n\n  drawHand = (pos, length, width, style) => {\n    let context = this.context;\n    style = style || \"black\"\n\n    // Center of Clock\n    context.beginPath();\n    context.arc(0, 0, length * width * 0.015, 0, 2 * Math.PI);\n    context.fillStyle = style;\n    context.fill();\n\n    // Hand of Clock\n    context.beginPath();\n    context.strokeStyle = style;\n    context.lineWidth = width;\n    context.lineCap = \"round\";\n    context.moveTo(0, 0);\n    context.rotate(pos);\n    context.lineTo(0, -length);\n    context.stroke();\n    context.rotate(-pos);\n  }\n\n  render() {\n    return (\n      <canvas className=\"clock\" ref={this.canvas} width={this.props.width || 200} />\n    );\n  }\n}","import RandomUtil from \"../utils/random.js\";\nimport QuestionBankBase from \"./base.js\";\nimport Clock from \"../../components/clock.jsx\";\n\nexport default class ClockQuestionBank extends QuestionBankBase {\n  secondsInDay = 24 * 60 * 60;\n\n  constructor() {\n    super();\n    this.settings[\"route\"] = \"clock\";\n    this.settings[\"title\"] = \"時鐘練習\";\n    this.settings[\"questionCount\"] = 10;\n  }\n\n  getOptions = () => {\n    let sections = this.getSections();\n    sections[0].selected = true;\n\n    return [\n      {\n        title: \"請選擇\",\n        name: \"sections\",\n        type: \"multiple-choice\",\n        selections: sections\n      },\n      {\n        title: \"答題限時\",\n        name: \"timeoutSeconds\",\n        type: \"range-slider\",\n        value: 10\n      }\n    ];\n  }\n\n  getSections = () => {\n    return [{\n        text: \"整點鐘\",\n        intervalSeconds: 60 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"半點鐘\",\n        intervalSeconds: 30 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"5分鐘\",\n        intervalSeconds: 5 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"1分鐘\",\n        intervalSeconds: 1 * 60,\n        answerRange: 10\n      },\n      {\n        text: \"時分秒\",\n        intervalSeconds: 5,\n        answerRange: 120\n      }\n    ];\n  }\n\n  initQuestions = () => {\n    let sections = this.getSetting(\"sections\");\n    let questionCount = this.getSetting(\"questionCount\");\n    let questions = [];\n    (sections || this.getSections())\n    .forEach(section => {\n      let hashMap = new Map();\n      while (hashMap.size < questionCount) {\n        let disableSecondhand = section.intervalSeconds !== 5;\n        let random = RandomUtil.getRandomInt(this.secondsInDay / 2);\n        random = random - random % section.intervalSeconds;\n        let key = this.convertText(random, disableSecondhand);\n        hashMap.set(key, {\n          description: <Clock hhmmss={key} disableSecondhand={disableSecondhand.toString()} />,\n          answer: {\n            text: key,\n            value: random\n          },\n          answerRange: section.answerRange,\n          intervalSeconds: section.intervalSeconds,\n          disableSecondhand: disableSecondhand\n        });\n      }\n      hashMap.forEach((value) => {\n        questions.push(value);\n      });\n    });\n    this.setQuestions(questions);\n  }\n\n  generateChoices = (question) => {\n    let answer = question.answer.value;\n    let answerRange = question.answerRange * question.intervalSeconds;\n    let intervalSeconds = question.intervalSeconds;\n    let seeds = [];\n    for (let i = Math.max(0, answer - answerRange); i < Math.min(answer + answerRange, this.secondsInDay / 2); i += intervalSeconds) {\n      if (i !== answer) seeds.push({\n        text: this.convertText(i, question.disableSecondhand),\n        value: i\n      });\n    }\n\n    let randomCount = this.getSetting(\"choiceCount\") - 1;\n    let choices = RandomUtil.pickRandomItems(seeds, randomCount);\n    choices.splice(RandomUtil.getRandomInt(randomCount), 0, {\n      text: this.convertText(answer, question.disableSecondhand),\n      value: answer\n    });\n    return choices;\n  }\n\n  convertText = (value, disableSeconds) => {\n    let hour = Math.floor(value / (60 * 60)) + 1;\n    let minute = Math.floor(value % (60 * 60) / 60);\n    let second = value % 60;\n    let result = `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`;\n    if (!disableSeconds) result += `:${second.toString().padStart(2, \"0\")}`;\n\n    return result;\n  }\n}","import QuizPage from \"./pages/quiz-page.jsx\";\n\nimport SchulteTableQuestionBank from \"./libs/question-bank/schulte-table.js\";\nimport AdditionQuestionBank from \"./libs/question-bank/addition.js\";\nimport SubtractionQuestionBank from \"./libs/question-bank/subtraction.js\";\nimport MultiplicationQuestionBank from \"./libs/question-bank/multiplication.js\";\nimport ClockQuestionBank from \"./libs/question-bank/clock.js\";\n\nexport const AppRoutes = [{\n    path: \"/schulte-table\",\n    title: \"舒爾特方格\",\n    component: <QuizPage questionBank={new SchulteTableQuestionBank()}/>\n},\n{\n    path: \"/addition\",\n    title: \"加法練習\",\n    component: <QuizPage questionBank={new AdditionQuestionBank()}/>\n},\n{\n    path: \"/subtraction\",\n    title: \"減法練習\",\n    component: <QuizPage questionBank={new SubtractionQuestionBank()}/>\n},\n{\n    path: \"/multiplication-9x9\",\n    title: \"9 x 9 乘法練習\",\n    component: <QuizPage questionBank={new MultiplicationQuestionBank()}/>\n},\n{\n    path: \"/multiplication-19x19\",\n    title: \"19 x 19 乘法練習\",\n    component: <QuizPage questionBank={new MultiplicationQuestionBank(2)}/>\n},\n{\n    path: \"/clock\",\n    title: \"時鐘練習\",\n    component: <QuizPage questionBank={new ClockQuestionBank()}/>\n}];","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport { AppRoutes } from \"./app-routes.js\";\n\n\nexport default class App extends Component {\n\n  menu = () => {\n    return <nav className=\"menu\">\n      <h1>數學練習小程式</h1>\n      <ul>\n        {AppRoutes.map((route, i) =>\n          <li key={i}>\n            <Link className=\"btn green\" to={route.path}>{route.title}</Link>\n          </li>)}\n      </ul>\n    </nav>;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Switch>\n            {AppRoutes.map((route, i) =>\n              <Route key={i} path={`${route.path}`} component={() => route.component} />\n            )}\n            <Route exact>{this.menu()}</Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport App from \"./app.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}